<?php
/**
 * product 封装来自 tb_product 数据表的记录及领域逻辑
 */
class Product extends QDB_ActiveRecord_Abstract {
	
	/**
	 * 返回对象的定义
	 *
	 * @static
	 *
	 * @return array
	 */
	static function __define() {
		return array (
			
			// 用什么数据表保存对象
			'table_name' => 'tb_product',
			
			// 指定数据表记录字段与对象属性之间的映射关系
			// 没有在此处指定的属性，QeePHP 会自动设置将属性映射为对象的可读写属性
			'props' => array (
				'product_id' => array (
					'readonly' => true 
				),
				
				'channel' => array (
					'getter' => '_channel_getter' 
				),
				'network' => array (
					QDB::BELONGS_TO => 'Network',
					'source_key' => 'network_id',
					'target_key' => 'network_id',
					'skip_empty' => true 
				),
				'remotemanage' => array (
					QDB::BELONGS_TO => 'RemoteManage',
					'source_key' => 'remote_manage_id',
					'target_key' => 'remote_manage_id',
					'skip_empty' => true 
				),
				'pricemanage' => array (
					QDB::BELONGS_TO => "PriceManage",
					'source_key' => 'price_manage_id',
					'target_key' => 'price_manage_id',
					'skip_empty' => true 
				),
				'partitionmanage' => array (
					QDB::BELONGS_TO => "PartitionManage",
					'source_key' => 'partition_manage_id',
					'target_key' => 'partition_manage_id',
					'skip_empty' => true 
				),
				'channelcost' => array (
					QDB::HAS_MANY => "ChannelCost",
					'source_key' => 'product_id',
					'target_key' => 'product_id',
					'skip_empty' => true 
				)
			),
			'validations' => array (),
			'create_autofill' => array (
				
				//自动填充修改和创建时间
				'create_time' => self::AUTOFILL_TIMESTAMP,
				'update_time' => self::AUTOFILL_TIMESTAMP 
			),
			'update_autofill' => array (
				'update_time' => self::AUTOFILL_TIMESTAMP 
			),
			
			// 不允许通过构造函数给 product_number 属性赋值
			'attr_protected' => 'product_id' 
		);
	}
	
	/**
	 * channel Getter 添加值 产品渠道
	 */
	function _channel_getter() {
		$channel = array ();
		$channelCosts = ChannelCost::find ( "product_id = ? and [channel.disabled] ='1'", $this->product_id )->getAll ();
		foreach ( $channelCosts as $channelCost ) {
			$channel [] = array (
				"id" => $channelCost->channel->channel_id,
				"text" => $channelCost->channel->channel_name 
			);
		}
		return $channel;
	}
	/**
	 * 开启一个查询，查找符合条件的对象或对象集合
	 *
	 * @static
	 *
	 * @return QDB_Select
	 */
	static function find() {
		$args = func_get_args ();
		return QDB_ActiveRecord_Meta::instance ( __CLASS__ )->findByArgs ( $args );
	}
	
	/**
	 * 返回当前 ActiveRecord 类的元数据对象
	 *
	 * @static
	 *
	 * @return QDB_ActiveRecord_Meta
	 */
	static function meta() {
		return QDB_ActiveRecord_Meta::instance ( __CLASS__ );
	}

/* ------------------ 以上是自动生成的代码，不能修改 ------------------ */
}
class ProductException extends QException {}