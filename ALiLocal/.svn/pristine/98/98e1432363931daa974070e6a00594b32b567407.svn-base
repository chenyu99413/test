<?php
class Controller_Order extends Controller_Abstract{
	/**
	 * notifyBizEvent
	 */
	function actionnotifyBizEvent(){
		$url_sign='https://gw.open.1688.com/openapi/param2/1/ali.intl.onetouch/logistics.order.notifyBizEvent/563333';
		$event=Event::find('event_id=162')->getOne();
		//$event_array=array('1'=>'WAREHOUSE_INBOUND','2'=>'WAREHOUSE_OUTBOUND','3'=>'CHECK_WEIGHT','4'=>'CONFIRM','5'=>'PALLETIZE','6'=>'CARRIER_PICKUP','7'=>'DELIVERY');
		//$event_array=array('1'=>'WAREHOUSE_INBOUND');
		$ali=new Helper_ALI();
		$event_request_data=$ali->notifyBizEvent($event);
		$sign=$ali->sign($url_sign, json_encode($event_request_data),'notifyBizEvent');
		//组合完整url
		QLog::log($url_sign.'?notifyBizEventDTO='.json_encode($event_request_data).'&_aop_signature='.$sign);
		$url=$url_sign.'?notifyBizEventDTO='.urlencode(json_encode($event_request_data)).'&_aop_signature='.$sign;
		QLog::log($url);
		//通过curl get 方式发送至阿里
		$response=Helper_Curl::get1($url);
		return $response;
	}
	/**
	 * notifyTrace
	 */
	function actionnotifyTrace(){
		$url_sign='https://gw.open.1688.com/openapi/param2/1/ali.intl.onetouch/logistics.order.notifyTrace/563333';
		$tracking=Tracking::find('tracking_id=149')->getOne();
		$ali=new Helper_ALI();
		$trace_request_data=$ali->notifyTrace($tracking);
		$sign=$ali->sign($url_sign, json_encode($trace_request_data),'notifyTrace');
		//组合完整url
		QLog::log(json_encode($trace_request_data));
		$url=$url_sign.'?notifyTraceDTO='.urlencode(json_encode($trace_request_data)).'&_aop_signature='.$sign;
		QLog::log($url);
		//通过curl get 方式发送至阿里
		$response=Helper_Curl::get1($url);
		return $response;
	}
    /**
     * 订单管理页面
     */
    function actionSearch(){
        $orders=Order::find("ali_testing_order!= '1'");
        if(request('ali_order_no')){
            $orders->where('ali_order_no=?',request('ali_order_no'));
        }
        if(request('far_no')){
            $orders->where('far_no=?',request('far_no'));
        }
        //订单日期
        if(request("start_date")){
            $orders->where("create_time >=?",strtotime(request("start_date").' 00:00:00'));
        }
        if (request("end_date")){
            $orders->where("create_time <=?",strtotime(request("end_date").' 23:59:59'));
        }
        //已支付导出
        if(request("export")=='export'){
        	$orders->where("order_status='4'");
        	$payeds=$orders->getAll();
        	$header = array (
        		'省','城市','地址','邮编','姓名','手机','固定电话','邮箱','阿里订单号','件数'
        	);
        	$sheet = array (
        		$header
        	);
        	foreach ($payeds as $p){
        		$item_count=0;
        		foreach ($p->packages as $package){
        			$item_count+=$package->quantity;
        		}
        		$sheet [] =array(
        			$p->sender_state_region_code,$p->sender_city,$p->sender_street1.' '.$p->sender_street2,"'".$p->sender_postal_code,
        			$p->sender_name1.' '.$p->sender_name2,"'".$p->sender_mobile,"'".$p->sender_telephone,$p->sender_email,"'".$p->ali_order_no,$item_count
        		);
        	}
        	Helper_ExcelX::array2xlsx ( $sheet, '取件清单' );
        	exit ();
        	
        }
        $pagination = null;
        $list=$orders->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
        ->fetchPagination ( $pagination )
        ->order('order_id desc')->getAll();
        $this->_view['orders']=$list;
        $this->_view['pagination']=$pagination;
    }
    /**
     * 订单轨迹
     */
    function actionTrace(){
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        $trace_code=array('S_CLEARANCE_START'=>'S_CLEARANCE_START','S_CLEARANCE_COMPLETE'=>'S_CLEARANCE_COMPLETE',
            'S_TH_IN'=>'S_TH_IN','S_TH_OUT'=>'S_TH_OUT','S_TH_IN_LAST'=>'S_TH_IN_LAST',
            'S_DELIVERY_SCHEDULED'=>'S_DELIVERY_SCHEDULED','S_DELIVERY_SIGNED'=>'S_DELIVERY_SIGNED',
        	'F_DELIVERY_5045'=>'F_DELIVERY_5045','F_DELIVERY_5046'=>'F_DELIVERY_5046'
        );
        $trace_code_cn=array('S_CLEARANCE_START'=>'目的地清关开始','S_CLEARANCE_COMPLETE'=>'目的地清关完成',
        	'S_TH_IN'=>'到达转运中心','S_TH_OUT'=>'离开转运中心','S_TH_IN_LAST'=>'到达最后投递站',
        	'S_DELIVERY_SCHEDULED'=>'安排投递','S_DELIVERY_SIGNED'=>'快件已签收',
        	'F_DELIVERY_5045'=>'收件⼈联系不上','F_DELIVERY_5046'=>'收件人拒收，在联系收/发件方处理中'
        );
        $select=Tracking::find('order_id=?',request('order_id'))->getAll();
        $trace_info_code=Helper_Array::getCols($select, 'tracking_code');
        foreach ($trace_info_code as $v){
            unset($trace_code[$v]);
        }
        $quantity=Farpackage::find('order_id=?',$order->order_id)->sum('quantity','sum_quantity')->getAll();
        if(request_is_post()){
            $trace=new Tracking();
            $trace->changeProps(array(
                'order_id'=>request('order_id'),
                'far_no'=>$order->far_no,
                'tracking_code'=>request('tracking_code'),
                'location'=>request('location'),
                'trace_desc_cn'=>$trace_code_cn[request('tracking_code')],
                'operator_name'=>request('operator_name'),
                'timezone'=>request('timezone'),
                'quantity'=>$quantity['sum_quantity'],
                'trace_time'=>strtotime(request('trace_time'))
            ));
            $trace->save();
            if(request('tracking_code')=='S_DELIVERY_SIGNED'){
                $trace->status='1';
                $trace->save();
                $event=new Event();
                $event->changeProps(array(
                	'order_id'=>request('order_id'),
                	'event_code'=>'DELIVERY',
                	'event_time'=>strtotime(request('trace_time')),
                	'event_location'=>request('location'),
                	'timezone'=>request('timezone'),
                	'confirm_flag'=>'1'
                ));
                $event->save();
                $order->order_status='9';
                $order->save();
            }
            return $this->_redirectMessage('新增轨迹', '成功', url('order/trace',array('order_id'=>request('order_id'))));
        }
        $this->_view['order']=$order;
        $this->_view['trace_code']=$trace_code;
        $this->_view['list']=$select;
    }
    /**
     * 订单事件
     */
    function actionEvent(){
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        $event_code=array('WAREHOUSE_INBOUND'=>'WAREHOUSE_INBOUND:入库','CHECK_WEIGHT'=>'CHECK_WEIGHT:称重','CONFIRM'=>'CONFIRM:核查','PALLETIZE'=>'PALLETIZE:打托',
            'WAREHOUSE_OUTBOUND'=>'WAREHOUSE_OUTBOUND:出库','CARRIER_PICKUP'=>'CARRIER_PICKUP:承运商取件'
        );
//         $event_code=Helper_Array::toHashmap(Eventcode::find()->getAll(), 'event_code', 'event_code');
        $select=Event::find('order_id=?',request('order_id'))->getAll();
        $event_info_code=Helper_Array::getCols($select, 'event_code');
        foreach ($event_info_code as $v){
            unset($event_code[$v]);
        }
        if(request_is_post()){
            if(request('event_code')=='WAREHOUSE_INBOUND'){
                $order->order_status='5';
                $order->save();
            }
            if(request('event_code')=='WAREHOUSE_OUTBOUND'){
                $order->order_status='6';
                $order->save();
            }
            $event=new Event();
            $event->changeProps(array(
                'order_id'=>request('order_id'),
                'event_code'=>request('event_code'),
                'event_time'=>strtotime(request('event_time')),
            	'event_location'=>request('event_location'),
            	'timezone'=>request('timezone')
            ));
            $event->save();
            
            if(isset($_POST['package'])){
                $packages=request('package');
                if($packages['reason_name']){//有失败原因,无论package是否存在都不保存到数据库中
                    $event->reason=$packages['reason_name'];
                    $event->save();
                }else{
                    $items=array();
                    foreach ($packages['quantity_far'] as $i => $v){
                        $items[]=array(
                            'quantity_far'=>$v,
                            'length_far'=>$packages['length_far'][$i],
                            'width_far'=>$packages['width_far'][$i],
                            'height_far'=>$packages['height_far'][$i],
                            'weight_far'=>$packages['weight_far'][$i],
                        );
                    }
                    if(count($items)>0){
                        foreach ($items as $key=>$value){
                            $far_package=new Farpackage();
                            $far_package->changeProps(array(
                                'order_id'=>request('order_id'),
                                'length'=>$value['length_far'],
                                'width'=>$value['width_far'],
                                'height'=>$value['height_far'],
                                'weight'=>$value['weight_far'],
                                'quantity'=>$value['quantity_far'],
                            ));
                            $far_package->save();
                        }
                    }
                }
            }
            if(isset($_POST['fee'])){
                $fee_info=request('fee');
                if($fee_info['reason_name']){//有失败原因,无论费用项名称是否存在都不保存到数据库中
                    $event->reason=$packages['reason_name'];
                    $event->save();
                }else{
                    foreach ($fee_info['fee_code'] as $f){
                        $fee_item=FeeItem::find('item_code=?',$f)->getOne();
                        //存入fee表中（费用数量必须大于0）
                        if ($fee_info['quantity'][$f]>0){
                            $fee= new Fee();
                            $fee->changeProps(array(
                                'order_id'=>$order->order_id,
                                'fee_item_code'=>$fee_item->sub_code,
                                'fee_item_name'=>$fee_item->item_name,
                                'fee_type'=>'1',
                                'quantity'=>$fee_info['quantity'][$f]
                            ));
                            $fee->save();
                        }
                    }
                }
            }
            if(isset($_POST['carrier'])){
                $carrier=request('carrier');
                if($carrier['reason_name']){
                    $event->reason=$carrier['reason_name'];
                    $event->save();
                }else{
                    $department=Department::find('department_id=?',MyApp::currentUser('department_id'))->getOne();
                    if($department->department_name=='战略项目部'){
                        $event->location='杭州';
                    }elseif ($department->department_name=='义乌分公司'){
                        $event->location='义乌';
                    }elseif ($department->department_name=='上海分公司'){
                        $event->location='上海';
                    }
                    $event->save();
                }
            }
            return $this->_redirectMessage('新增事件', '成功', url('order/event',array('order_id'=>request('order_id'))));
        }
        $this->_view['order']=$order;
        $this->_view['event_code']=$event_code;
        $this->_view['list']=$select;
    }
    /**
     * fee_item多选
     */
    function actionfeeitemtree(){
        $fee_items=FeeItem::find()->getAll();
        $checked_fee_code=array('EX0001','EX0019','EX0020','EX0035','EX0012');
        $checked='';
        foreach ($fee_items as $fee_item){
            if(in_array($fee_item->item_code, $checked_fee_code)){
                $checked='checked';
            }else{
                $checked='';
            }
            $array [] = array (
                "id" => $fee_item->item_code,
                "text" => $fee_item->item_name,
                "checked" => $checked,
                "attributes" => ""
            );
        }
        echo (json_encode ( $array ));
        exit ();
    }
    /**
     * 事件页面显示具体信息
     */
    function actionOrderinfo(){
        switch (request('event_code')){
            case 'CHECK_WEIGHT':
                //获取package信息
                $package=Farpackage::find('order_id=?',request('order_id'))->asArray()->getAll();
                echo json_encode($package);
                break;
            case 'CONFIRM':
                $fee=Fee::find('order_id=?',request('order_id'))->asArray()->getAll();
                echo json_encode($fee);
                break;
            case 'CARRIER_PICKUP':
                $event=Event::find("order_id=? and event_code='CARRIER_PICKUP'",request('order_id'))->asArray()->getOne();
                echo json_encode($event);
                break;
        }
        exit();
    }
    /**
     * 录入物流单号
     */
    function actionDetail(){
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        if(request_is_post()){
            $order->tracking_no=request('tracking_no');
            $order->save();
            return $this->_redirectMessage('订单编辑', '保存成功', url('order/detail',array('order_id'=>request('order_id'))));
        }
        $this->_view['order']=$order;
    }
    /**
     * 显示详细信息
     */
    function actionEditdetail(){
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        $this->_view['order']=$order;
    }
    /**
     * 收付信息
     */
    function actionEditbalance(){
        $fee_receivable=Fee::find("fee_type= '1' and order_id=?",request('order_id'))->getAll();
        $fee_payment=Fee::find("fee_type= '2' and order_id=?",request('order_id'))->getAll();
        $this->_view['receivable']=$fee_receivable;
        $this->_view['payment']=$fee_payment;
    }
    /**
     * 应收应付保存
     */
    function actionSavebalance() {
        $order = order::find ( "order_id = ?", request ( "order_id" ) )->getOne ();
        if ($order->isNewRecord ()) {
            echo ("订单不存在");
            exit ();
        }
        $conn = QDB::getConn ();
        $conn->startTrans ();
    
        //应收应付
        $json = json_decode ( request ( "balance" ), true );
        if (! $json) {
            echo ("数据不存在");
            exit ();
        }
    
        if (count ( $json ) > 1) {
            foreach ( $json as $value ) {
                $fee = Fee::find ( "fee_id = ?", $value ["id"] )->getOne ();
                $fee->order_id = $order->order_id;
                $fee_item=FeeItem::find('item_name=?',$value['fee_item_name'])->getOne();
                $fee->fee_item_code=$fee_item->sub_code;
                QLog::log ( print_r ( $value, true ) );
                $fee->changeProps ( $value );
                $fee->save ();
            }
        } else {
            $fee = Fee::find ( "fee_id = ?", $json [0] ["id"] )->getOne ();
            if (request ( "delete_flag" ) == "true") {
                if (! $fee->isNewRecord ()) {
                    $fee->destroy ();
                }
            } else {
                $fee->order_id = $order->order_id;
                $fee_item=FeeItem::find('item_name=?',$json [0]['fee_item_name'])->getOne();
                $fee->fee_item_code=$fee_item->sub_code;
                $fee->changeProps ( $json [0] );
                $fee->save ();
            }
        }
        $conn->completeTrans ();
        echo ($fee->fee_id);
        exit ();
    }
    /**
     * 获取轨迹信息
     */
    function actionGettrace(){
        $trace=Tracking::find('tracking_id=?',request('tracking_id'))->asArray()->getOne();
        echo json_encode($trace);
        exit();
    }
    /**
     * 编辑轨迹信息
     */
    function actionTracedetail(){
        $trace=Tracking::find('tracking_id=?',request('tracking_id'))->getOne();
        $trace->location=request('location');
        $trace->trace_desc_cn=request('trace_desc_cn');
        $trace->timezone=request('timezone');
        $trace->trace_time=strtotime(request('edit_trace_time'));
        $trace->save();
        return $this->_redirectMessage('轨迹编辑', '编辑成功', url('order/trace',array('order_id'=>$trace->order_id)));
    }
    /**
     * 获取事件信息
     */
    function actionGetevent(){
        $event=Event::find('event_id=?',request('event_id'))->asArray()->getOne();
        if($event['event_code']=='CHECK_WEIGHT'){
            $far_package=Farpackage::find('order_id=?',$event['order_id'])->asArray()->getAll();
            $event['packages']=$far_package;
        }else if($event['event_code']=='CONFIRM'){
            $fee=Fee::find('order_id=?',$event['order_id'])->asArray()->getAll();
            foreach ($fee as $key=>$temp){
                $fee_item=FeeItem::find('sub_code=?',$temp['fee_item_code'])->getOne();
                $fee[$key]['fee_item_code']=$fee_item->item_code;
            }
            $event['fee']=$fee;
        }
        echo json_encode($event);
        exit();
    }
    /**
     * 编辑事件
     */
    function actionEventdetail(){
        $event=Event::find('event_id=?',request('event_id'))->getOne();
        $event->event_time=strtotime(request('event_time'));
        $event->event_location=request('detail_event_location');
        $event->timezone=request('timezone');
        $event->save();
        if(isset($_POST['package'])){
            $packages=request('package');
            $items=array();
            foreach ($packages['quantity_far'] as $i => $v){
                $items[]=array(
                    'quantity_far'=>$v,
                    'length_far'=>$packages['length_far'][$i],
                    'width_far'=>$packages['width_far'][$i],
                    'height_far'=>$packages['height_far'][$i],
                    'weight_far'=>$packages['weight_far'][$i],
                );
            }
            if(count($items)>0){
                //删除原有package信息
                Farpackage::find('order_id=?',$event->order_id)->getAll()->destroy();
                foreach ($items as $key=>$value){
                    $far_package=new Farpackage();
                    $far_package->changeProps(array(
                        'order_id'=>$event->order_id,
                        'length'=>$value['length_far'],
                        'width'=>$value['width_far'],
                        'height'=>$value['height_far'],
                        'weight'=>$value['weight_far'],
                        'quantity'=>$value['quantity_far'],
                    ));
                    $far_package->save();
                }
            }
        }
        if(isset($_POST['fee'])){
            $fee_info=request('fee');
            //删除fee表原有信息
            Fee::find('order_id=?',$event->order_id)->getAll()->destroy();
            foreach ($fee_info['fee_code'] as $f){
                $fee_item=FeeItem::find('item_code=?',$f)->getOne();
                //存入fee表中
                $fee= new Fee();
                $fee->changeProps(array(
                    'order_id'=>$event->order_id,
                    'fee_item_code'=>$fee_item->sub_code,
                    'fee_item_name'=>$fee_item->item_name,
                    'fee_type'=>'1',
                    'quantity'=>strlen($fee_info['quantity'][$f])>0?$fee_info['quantity'][$f]:'1'
                ));
                $fee->save();
            }
        }
        return $this->_redirectMessage('事件编辑', '编辑成功', url('order/event',array('order_id'=>$event->order_id)));
    }
    /**
     * 轨迹和事件确认
     */
    function actionConfirm(){
        if(request('code')=='trace'){
            $trace=Tracking::find('tracking_id=?',request('tracking_id'))->getOne();
            $trace->confirm_flag='1';
            $trace->save();
            return $this->_redirectMessage('轨迹确认', '确认成功', url('order/trace',array('order_id'=>$trace->order_id)));
        }
        if(request('code')=='event'){
            $event=Event::find('event_id=?',request('event_id'))->getOne();
            $event->confirm_flag='1';
            $event->save();
            return $this->_redirectMessage('事件确认', '确认成功', url('order/event',array('order_id'=>$event->order_id)));
        }
    }
    /**
     * 支付验证
     */
    function actionPaymentverify(){
        if(request_is_post()){
            $order=Order::find('ali_order_no=?',request('ali_order_no'))->getOne();
            if($order->isNewRecord()){
                echo 'notexist';
            }else{
                if($order->order_status=='3'){//已退货
                    echo 'return';
                }else if ($order->order_status=='5'){//未支付
                    echo 'false';
                }else if ($order->order_status=='4'){//已支付
                    echo 'true';
                }else{//异常
                    echo 'abnormal';
                }
            }
            exit();
        }
    }
    /**
     * 下载pdf组合文件
     */
    function actionDownloadpdf(){
        $dir=Q::ini('upload_tmp_dir');
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        header('Content-type: application/pdf');
        header('Content-Disposition: attachment; filename='.$order->tracking_no.'_combi.pdf');
        if(!file_exists($dir.DS.$order->tracking_no.'_combi.pdf')){
            //判断账号是否为润峯，合并pdf文件，保存在本地
            if($order->account=='4F1R24'){
                $filenames=array($dir.DS.$order->tracking_no.'.pdf',$dir.DS.$order->tracking_no.'_invoice.pdf');
            }else{
                //ups账号
                $filenames=array($dir.DS.$order->tracking_no.'_copy_1.pdf');
                //获取sub_code个数
                $sub_code=Subcode::find('order_id=?',$order->order_id)->getAll();
                if(count($sub_code)>'11'){
                    $filenames[]=$dir.DS.$order->tracking_no.'_copy_2.pdf';
                }
                $filenames[]=$dir.DS.$order->tracking_no.'_invoice.pdf';
            }
            @Helper_PDF::merge($filenames,$dir.DS.$order->tracking_no.'_combi.pdf','file');
        }
        return file_get_contents($dir.DS.$order->tracking_no.'_combi.pdf');
    }
    /**
     * 补充三免数据
     */
    function actionPaddingdata(){
    	//已支付或者已入库的订单
        $orders=Order::find();
        //订单日期
        if(request("start_date")){
            $orders->where("create_time >=?",strtotime(request("start_date").' 00:00:00'));
        }
        if (request("end_date")){
            $orders->where("create_time <=?",strtotime(request("end_date").' 23:59:59'));
        }
        //阿里订单号
        if(request('ali_order_no')){
        	$orders->where('ali_order_no=?',request('ali_order_no'));
        }
        //泛远单号
        if(request('far_no')){
        	$orders->where('far_no=?',request('far_no'));
        }
        //低价非港澳台
        if(request('type','1')=='1'){
            $orders->where("declaration_type!='DL' and total_amount <= '700' and weight_actual_in <= '70' and consignee_country_code != 'HK' and consignee_country_code != 'MO' and consignee_country_code != 'TW'");
        }
        // 低价港澳台
        if (request('type','1')=='2'){
            $orders->where("declaration_type!='DL' and total_amount <= '700' and weight_actual_in <= '70' and (consignee_country_code = 'HK' or consignee_country_code = 'MO' or consignee_country_code = 'TW') ");
        }
        //高价
        if(request('type','1')=='3'){
            $orders->where("declaration_type='DL' or total_amount > '700' or weight_actual_in > '70'");
        }
        //未补充数据
        if(request('status','1')=='1'){
            $orders->where("add_data_status != '1' ");
        }
        // 已补充数据
        if (request('status','1')=='2'){
            $orders->where("add_data_status = '1' ");
        }
        //订单状态
        if(request('order_status')){
            $orders->where("order_status= ?",request('order_status'));
        }else{
            $orders->where("order_status='10' || order_status='4' || order_status='5'");
        }
        $pagination = null;
        $list=$orders->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 50 )
        ->fetchPagination ( $pagination )
        ->order('order_id desc')->getAll();
        $this->_view['orders']=$list;
        $this->_view['pagination']=$pagination;
    }
    /**
     * 保存港澳台收件人信息
     */
    function actionSaveconsignee(){
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        $order->consignee_cn=request('consignee_name_cn');
        $order->consignee_address_cn=request('consignee_address_cn');
        $order->save();
        //判断订单中数据是否添加完整
        $flag=false;
        foreach ($order->product as $temp){
            if($temp->product_name_far=='' || $temp->product_name_en_far=='' || $temp->hs_code_far=='' || $temp->product_quantity1_far=='' || $temp->product_unit1_far=='' ||
                $temp->product_quantity2_far=='' || $temp->product_unit2_far==''){
                $flag=true;
            }
        }
        if(!$flag && $order->consignee_cn != '' && $order->consignee_address_cn!=''){
            $order->add_data_status='1';
            $order->save();
        }
        exit();
    }
    /**
     * 保存产品信息
     */
    function actionSaveproduct(){
        //单位
        $unit=array('千克','台','座','辆','艘','架','套','个','只','头','张','件','支','枝','根','条','把','块','卷','副','片','组','份','幅','双','对',
            '棵','株','井','米','盘','平方米','立方米','筒','克','盆','万个','具','百副','百支','百把','百个','百片','刀','疋','公担','扇','百枝','千只','千块',
            '千盒','千枝','千个','亿支','亿个','万套','千张','万张','千伏安','千瓦','千瓦时','千升','英尺','吨','长吨','短吨','司马担','司马斤','斤','磅','担','英担',
            '短担','两','市担','盎司','克拉','市尺','码','英寸','寸','升','毫升','英加仑','美加仑','立方英尺','立方尺','平方码','平方英尺','平方尺','英制马力','公制马力',
            '令','箱','批','罐','桶','扎','包','箩','打','筐','罗','匹','册','本','发','枚','捆','袋','粒','盒','合','瓶','千支','万双','万粒','千粒','千米',
            '千英尺','百万贝可','部');
        if(in_array(request('unit1'), $unit) && in_array(request('unit2'), $unit)){
            $check_hs=Hs::find('HSCode=?',request('hs_code'))->getOne();
            if(!$check_hs->isNewRecord()){
                $orderproduct=Orderproduct::find('order_product_id=?',request('order_product_id'))->getOne();
                $orderproduct->product_name_far=request('product_name_cn');
                $orderproduct->product_name_en_far=request('product_name_en');
                $orderproduct->hs_code_far=request('hs_code');
                $orderproduct->material_use=request('material');
                $orderproduct->product_quantity1_far=request('quantity1');
                $orderproduct->product_unit1_far=request('unit1');
                $orderproduct->product_quantity2_far=request('quantity2');
                $orderproduct->product_unit2_far=request('unit2');
                $orderproduct->save();
                //判断订单中数据是否添加完整
                $order=Order::find('order_id=?',$orderproduct->order_id)->getOne();
                $flag=false;
                foreach ($order->product as $temp){
                    if($temp->product_name_far=='' || $temp->product_name_en_far=='' || $temp->hs_code_far=='' || $temp->product_quantity1_far=='' || $temp->product_unit1_far=='' ||
                        $temp->product_quantity2_far=='' || $temp->product_unit2_far=='' || $temp->material_use==''){
                        $flag=true;
                    }
                }
                //判断收件地址是否是港澳台地区
                if($order->consignee_country_code=='HK' || $order->consignee_country_code=='MO' || $order->consignee_country_code=='TW'){
                    if(!$flag && $order->consignee_cn != '' && $order->consignee_address_cn!=''){
                        $order->add_data_status='1';
                        $order->save();
                    }
                }else{
                    if(!$flag){//信息补充完整
                        $order->add_data_status='1';
                        $order->save();
                    }
                }
            }else{
                echo 'hs_error';
            }
        }else{
            echo 'unit_error';
        }
        exit();
    }
    /**
     * 保存经营单位编码和委托书编号
     */
    function actionSavebusinesscode(){
        $order=Order::find('order_id=?',request('order_id'))->getOne();
        $order->business_code=request('business_code');
        $order->commission_code=request('commission_code');
        $order->save();
        //判断订单中数据是否添加完整
        foreach ($order->product as $temp){
            if($temp->material_use==''){
                $flag=true;
            }
        }
        if(!$flag){
            $order->add_data_status='1';
            $order->save();
        }
        exit();
    }
    /**
     * 保存材质用途
     */
    function actionSavematerial(){
        $orderproduct=Orderproduct::find('order_product_id=?',request('order_product_id'))->getOne();
        $orderproduct->material_use=request('material');
        $orderproduct->save();
        //判断订单中数据是否添加完整
        $order=Order::find('order_id=?',$orderproduct->order_id)->getOne();
        $flag=false;
        foreach ($order->product as $temp){
            if($temp->material_use==''){
                $flag=true;
            }
        }
        if(!$flag && $order->business_code != '' && $order->commission_code!=''){
            $order->add_data_status='1';
            $order->save();
        }
        exit();
    }
    /**
     * 推送订单检查
     */
    function actionShowerrormessage(){
        $pagination = null;
        $order=Order::find("error_message != '' ")
        ->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 100 )
        ->fetchPagination ( $pagination )
        ->order('order_id desc')->getAll();
        $this->_view['orders']=$order;
        $this->_view['pagination']=$pagination;
    }
}