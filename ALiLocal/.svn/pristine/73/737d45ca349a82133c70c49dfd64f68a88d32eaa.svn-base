<?php
/**
 * 报价助手
 *
 * @author D23
 *
 */
class Helper_Quote {
    /**
     * 计算应收
     * @return string
     */
    function receivable($order,$weight,$packing_box_quantity='',$packing_pak_quantity='',$special_packing_quantity='',$date=''){
        if($date==''){
            $date=time();
        }
        //根据order获取产品
        $product=Product::find('product_name=?',$order->service_code)->getOne();
        //燃油费率
        //获取网络燃油表
        $rate=0;
        $productfuel=Productfuel::find('product_id=? and effective_date<=? and fail_date>=?',$product->product_id,$date,$date)->getOne();
        if(!$productfuel->isNewRecord()){
            $rate=$productfuel->rate;
        }
        //包装-纸箱费用
        $packing_box_fee=0;
        if($packing_box_quantity){
            $packing_box_fee=$packing_box_quantity*10;
        }
        //包装-包裹袋费用
        $packing_pak_fee=0;
        if($packing_pak_quantity){
            $packing_pak_fee=$packing_pak_quantity*1;
        }
        //异形包装费费用
        $special_packing_fee=0;
        if($special_packing_quantity){
            $special_packing_fee=$special_packing_quantity*50;
        }
        //代办服务费一般贸易报关费用
        $customs_fee=0;
        if($order->declaration_type=='DL' || $order->total_amount > 700 || $order->weight_actual_in > 70){
            $customs_fee=95;
        }
        //超尺寸/超重附加费
        $over_size_fee=0;
        $over_size_quantity=0;
        foreach ($order->farpackages as $temp){
            $array=array($temp->length,$temp->width,$temp->height);
            rsort($array);//逆排序
            if($array[0]>'121'){
                //收取超尺寸费用
                $over_size_fee+=$temp->quantity*53;
                $over_size_quantity+=$temp->quantity;
            }else{
                if($array[1]>'76'){
                    //收取超尺寸费用
                    $over_size_fee+=$temp->quantity*53;
                    $over_size_quantity+=$temp->quantity;
                }
            }
        }
        //获取产品中偏派-价格-分区
        $product_p_p_r=Productppr::find('product_id=? and effective_time <=? and invalid_time>=?',$product->product_id,$date,$date)->getOne();
        //偏远地区附加费
        //查询偏派表
        $order->consignee_postal_code=str_replace(array(" ",'-'),'',$order->consignee_postal_code);
        $post_code=$order->consignee_postal_code;
        //除了GB,其他国家都使用任意一个起始邮编的长度来截取超长的邮编
        if($order->consignee_country_code!='GB') {
        	$remote=Remote::find('remote_manage_id = ? and country_code_two=? and ifnull(start_postal_code,"")!=""',$product_p_p_r->remote_manage_id,$order->consignee_country_code)->getOne();
        	if(!$remote->isNewRecord()){
        		$length=strlen($remote->start_postal_code);
        		if(strlen($post_code)>$length){
        			$post_code=substr($post_code, 0,$length);
        		}	
        	}
        }
       	$remote_postcode=Remote::find('remote_manage_id = ? and country_code_two=? and start_postal_code<=? and end_postal_code>=?',$product_p_p_r->remote_manage_id,$order->consignee_country_code,$post_code,$post_code)->getOne();
        
        $remote_city=Remote::find('remote_manage_id = ? and country_code_two=? and (remote_city=? || remote_city=? || remote_city=? || remote_city=?)',$product_p_p_r->remote_manage_id,$order->consignee_country_code,$order->consignee_city,$order->consignee_state_region_code,strtolower(str_replace('-','',str_replace(' ','',$order->consignee_city))),strtolower(str_replace('-','',str_replace(' ','',$order->consignee_state_region_code))))->getOne();
        if(!$remote_city->isNewRecord()){//偏派城市
            if ($remote_city->additional_weight>0){
                if(($weight-$remote_city->first_weight)>0){
                    $remote_fee=(ceil(($weight-$remote_city->first_weight)/$remote_city->additional_weight)*$remote_city->additional_fee)+$remote_city->first_fee;
                }else{
                    $remote_fee=$remote_city->first_fee;
                }
            }else{
                if(($weight-$remote_city->first_weight)>0){
                    $remote_fee=(($weight-$remote_city->first_weight)*$remote_city->additional_fee)+$remote_city->first_fee;
                }else{
                    $remote_fee=$remote_city->first_fee;
                }
            }
            if($remote_fee<=$remote_city->lowest_fee){
                $remote_fee=$remote_city->lowest_fee;
            }
        }else{
            if(!$remote_postcode->isNewRecord()){//偏派邮编
                if ($remote_postcode->additional_weight>0){
                    if(($weight-$remote_postcode->first_weight)>0){
                        $remote_fee=(ceil(($weight-$remote_postcode->first_weight)/$remote_postcode->additional_weight)*$remote_postcode->additional_fee)+$remote_postcode->first_fee;
                    }else{
                        $remote_fee=$remote_postcode->first_fee;
                    }
                }else{
                    if(($weight-$remote_postcode->first_weight)>0){
                        $remote_fee=(($weight-$remote_postcode->first_weight)*$remote_postcode->additional_fee)+$remote_postcode->first_fee;
                    }else{
                        $remote_fee=$remote_postcode->first_fee;
                    }
                }
                if($remote_fee<=$remote_postcode->lowest_fee){
                    $remote_fee=$remote_postcode->lowest_fee;
                }
            }else{
                $remote_fee=0;
            }
        }
        
        if($remote_fee==0){
            $zip=$order->consignee_postal_code;
            $length_zip=strlen($zip);
            if($order->consignee_country_code!='GB') {
                $remote_zip1=Remote::find('remote_manage_id = ? and country_code_two=? and left(start_postal_code,'.$length_zip.')<=? and left(end_postal_code,'.$length_zip.')>=?',$product_p_p_r->remote_manage_id,$order->consignee_country_code,$zip,$zip)->getOne();
                if(!$remote_zip1->isNewRecord()){
                    if ($remote_zip1->additional_weight>0){
                        if(($weight-$remote_zip1->first_weight)>0){
                            $remote_fee=(ceil(($weight-$remote_zip1->first_weight)/$remote_zip1->additional_weight)*$remote_zip1->additional_fee)+$remote_zip1->first_fee;
                        }else{
                            $remote_fee=$remote_zip1->first_fee;
                        }
                    }else{
                        if(($weight-$remote_zip1->first_weight)>0){
                            $remote_fee=(($weight-$remote_zip1->first_weight)*$remote_zip1->additional_fee)+$remote_zip1->first_fee;
                        }else{
                            $remote_fee=$remote_zip1->first_fee;
                        }
                    }
                    if($remote_fee<=$remote_zip1->lowest_fee){
                        $remote_fee=$remote_zip1->lowest_fee;
                    }
                }else {
                    $remote_zip2=Remote::find('remote_manage_id = ? and country_code_two=? and ifnull(start_postal_code,"")!=""',$product_p_p_r->remote_manage_id,$order->consignee_country_code)->getAll();
                    if(count($remote_zip2)>0){
                        foreach ($remote_zip2 as $z){
                            $start_postal_code=$z->start_postal_code;
                            $end_postal_code=$z->end_postal_code;
                            if(substr($zip, 0, strlen($start_postal_code))>=$start_postal_code && substr($zip, 0, strlen($end_postal_code))<=$end_postal_code){
                                if ($z->additional_weight>0){
                                    if(($weight-$z->first_weight)>0){
                                        $remote_fee=(ceil(($weight-$z->first_weight)/$z->additional_weight)*$z->additional_fee)+$z->first_fee;
                                    }else{
                                        $remote_fee=$z->first_fee;
                                    }
                                }else{
                                    if(($weight-$z->first_weight)>0){
                                        $remote_fee=(($weight-$z->first_weight)*$z->additional_fee)+$z->first_fee;
                                    }else{
                                        $remote_fee=$z->first_fee;
                                    }
                                }
                                if($remote_fee<=$z->lowest_fee){
                                    $remote_fee=$z->lowest_fee;
                                }
                                if($remote_fee>0){
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
            
        //基础运费
        //获取分区
        $partition=Partition::find('partition_manage_id=? and country_code_two=?',$product_p_p_r->partition_manage_id,$order->consignee_country_code)->getOne();
        //获取价格
        //包装类型
        $packing='BOX';
        if($order->packing_type=='DOC'){
        	$packing="DOC";
        }
        $price=Price::find('price_manage_id=? and partition_code=? and boxing_type=? and start_weight<? and end_weight>=?',$product_p_p_r->price_manage_id,$partition->partition_code,$packing,$weight,$weight)->getOne();
        if($price->isNewRecord()){
        	$data=array();
        	return $data;
        }
        //计算运费
        $tracking_fee = 0;
        if(!$price->isNewRecord()){
            if($price->additional_weight>0){
                if(($weight-$price->first_weight)>0){
                    $tracking_fee=(ceil(($weight-$price->first_weight)/$price->additional_weight)*$price->additional_fee)+$price->first_fee;
                }else{
                    $tracking_fee=$price->first_fee;
                }
            }else{
                if(($weight-$price->first_weight)>0){
                    $tracking_fee=(($weight-$price->first_weight)*$price->additional_fee)+$price->first_fee;
                }else{
                    $tracking_fee=$price->first_fee;
                }
            }
        }
        //燃油附加费
        $rate_fee=($tracking_fee+$over_size_fee+$remote_fee)*$rate;
        //组合返回各项费用
        $data=array(
            'EX0001'=>array('fee'=>$tracking_fee,'quantity'=>'1'),
            'EX0002'=>array('fee'=>$packing_pak_fee,'quantity'=>$packing_pak_quantity),
            'EX0003'=>array('fee'=>$packing_box_fee,'quantity'=>$packing_box_quantity),
            'EX0034'=>array('fee'=>$special_packing_fee,'quantity'=>$special_packing_quantity),
            'EX0012'=>array('fee'=>$customs_fee,'quantity'=>1),
            'EX0020'=>array('fee'=>$remote_fee,'quantity'=>'1'),
            'EX0035'=>array('fee'=>$over_size_fee,'quantity'=>$over_size_quantity),
            'EX0019'=>array('fee'=>$rate_fee,'quantity'=>'1'),
        );
        return $data;
    }
    /**
     * 计算应付
     * @return string
     */
    function payment($order,$channelcostppr,$network_id,$special_packing_fee_count='',$date=''){
        if($date==''){
            $date=time();
        }
    	$weight_cost_out=0;
    	$total_weight=0;
    	//标签重
    	$label_weight=0;
    	$total_cost_weight=0;
	    //如果包裹类型是PAK将实重算作计费重
    	//获取渠道成本中计泡系数
    	$channel=ChannelCost::find('channel_cost_id=?',$channelcostppr->channel_cost_id)->getOne();
	    if($order->packing_type=='PAK'){
	        foreach ($order->faroutpackages as $v){
	            $total_weight+=$v->weight_out*$v->quantity_out;
	        }
	        $label_weight=$total_weight;
	        $total_weight=sprintf("%.1f",$total_weight);
	        //PAK类型的时候，计费重大于 0.5的整数倍0.1以内，自动向下取整到0.5的整数倍
	        if($label_weight>0.5 && (floor($label_weight/0.5)*0.5+0.1)>$label_weight){
	        	$label_weight=floor($label_weight/0.5)*0.5;
	        }else{
	        	$label_weight=sprintf("%.1f",$label_weight);
	        }
	    }else{
	        $ratio=$channel->ratio;
	        foreach ($order->faroutpackages as $faroutpackage){
	            $volumn_weight=$faroutpackage->length_out*$faroutpackage->width_out*$faroutpackage->height_out/$ratio;
	            if($volumn_weight>$faroutpackage->weight_out){
	            	$label_weight+=$volumn_weight*$faroutpackage->quantity_out;
	                $weight_cost_out+=ceil($volumn_weight/0.5)*0.5*$faroutpackage->quantity_out;
	            }else{
	            	$label_weight+=$faroutpackage->weight_out*$faroutpackage->quantity_out;
	                $weight_cost_out+=ceil($faroutpackage->weight_out/0.5)*0.5*$faroutpackage->quantity_out;
	            }
	        }
	        //大于20公斤
	        if($label_weight>20){
	        	if((floor($label_weight)+0.1)>$label_weight){
	        		$label_weight=floor($label_weight);
	        	}else{
	        		$label_weight=ceil($label_weight);
	        	}
	        }else{
	        	if((floor($label_weight/0.5)*0.5+0.1)>$label_weight){
	        		$label_weight=floor($label_weight/0.5)*0.5;
	        	}else{
	        		$label_weight=ceil($label_weight/0.5)*0.5;
	        	}
	        }
	        //增加一个字段，记实计费重量
	        $total_cost_weight=$weight_cost_out>20?ceil($weight_cost_out):$weight_cost_out;
	        //传给api的重量使用标签重
	        $total_weight=$label_weight;
	    }
        //偏远地区附加费
	    $order->consignee_postal_code=str_replace(array(" ",'-'), '', $order->consignee_postal_code);
        $remote_city=Remote::find('remote_manage_id = ? and country_code_two=? and (remote_city=? || remote_city=? || remote_city=? || remote_city=?)',$channelcostppr->remote_manage_id,$order->consignee_country_code,$order->consignee_city,$order->consignee_state_region_code,strtolower(str_replace('-','',str_replace(' ','',$order->consignee_city))),strtolower(str_replace('-','',str_replace(' ','',$order->consignee_state_region_code))))->getOne();
        if(!$remote_city->isNewRecord()){//偏派城市
            if ($remote_city->additional_weight>0){
                if(($total_weight-$remote_city->first_weight)>0){
                    $remote_fee=(ceil(($total_weight-$remote_city->first_weight)/$remote_city->additional_weight)*$remote_city->additional_fee)+$remote_city->first_fee;
                }else{
                    $remote_fee=$remote_city->first_fee;
                }
            }else{
                if(($total_weight-$remote_city->first_weight)>0){
                    $remote_fee=(($total_weight-$remote_city->first_weight)*$remote_city->additional_fee)+$remote_city->first_fee;
                }else{
                    $remote_fee=$remote_city->first_fee;
                }
            }
            if($remote_fee<=$remote_city->lowest_fee){
                $remote_fee=$remote_city->lowest_fee;
            }
        }else{
        	$post_code=$order->consignee_postal_code;
        	//除了GB,其他国家都使用任意一个起始邮编的长度来截取超长的邮编
        	if($order->consignee_country_code!='GB') {
        		$remote=Remote::find('remote_manage_id = ? and country_code_two=? and ifnull(start_postal_code,"")!=""',$channelcostppr->remote_manage_id,$order->consignee_country_code)->getOne();
        		if(!$remote->isNewRecord()){
        			$length=strlen($remote->start_postal_code);
        			if(strlen($post_code)>$length){
        				$post_code=substr($post_code, 0,$length);
        			}
        		}
        	}
        	$remote_postcode=Remote::find('remote_manage_id = ? and country_code_two=? and start_postal_code<=? and end_postal_code>=?',$channelcostppr->remote_manage_id,$order->consignee_country_code,$post_code,$post_code)->getOne();
            if(!$remote_postcode->isNewRecord()){//偏派邮编
                if ($remote_postcode->additional_weight>0){
                    if(($total_weight-$remote_postcode->first_weight)>0){
                        $remote_fee=(ceil(($total_weight-$remote_postcode->first_weight)/$remote_postcode->additional_weight)*$remote_postcode->additional_fee)+$remote_postcode->first_fee;
                    }else{
                        $remote_fee=$remote_postcode->first_fee;
                    }
                }else{
                    if(($total_weight-$remote_postcode->first_weight)>0){
                        $remote_fee=(($total_weight-$remote_postcode->first_weight)*$remote_postcode->additional_fee)+$remote_postcode->first_fee;
                    }else{
                        $remote_fee=$remote_postcode->first_fee;
                    }
                }
                if($remote_fee<=$remote_postcode->lowest_fee){
                    $remote_fee=$remote_postcode->lowest_fee;
                }
            }else{
                $remote_fee=0;
            }
        }
        
        if($remote_fee==0){
            $zip=$order->consignee_postal_code;
            $length_zip=strlen($zip);
            if($order->consignee_country_code!='GB') {
                $remote_zip1=Remote::find('remote_manage_id = ? and country_code_two=? and left(start_postal_code,'.$length_zip.')<=? and left(end_postal_code,'.$length_zip.')>=?',$channelcostppr->remote_manage_id,$order->consignee_country_code,$zip,$zip)->getOne();
                if(!$remote_zip1->isNewRecord()){
                    if ($remote_zip1->additional_weight>0){
                        if(($total_weight-$remote_zip1->first_weight)>0){
                            $remote_fee=(ceil(($total_weight-$remote_zip1->first_weight)/$remote_zip1->additional_weight)*$remote_zip1->additional_fee)+$remote_zip1->first_fee;
                        }else{
                            $remote_fee=$remote_zip1->first_fee;
                        }
                    }else{
                        if(($total_weight-$remote_zip1->first_weight)>0){
                            $remote_fee=(($total_weight-$remote_zip1->first_weight)*$remote_zip1->additional_fee)+$remote_zip1->first_fee;
                        }else{
                            $remote_fee=$remote_zip1->first_fee;
                        }
                    }
                    if($remote_fee<=$remote_zip1->lowest_fee){
                        $remote_fee=$remote_zip1->lowest_fee;
                    }
                }else {
                    $remote_zip2=Remote::find('remote_manage_id = ? and country_code_two=? and ifnull(start_postal_code,"")!=""',$channelcostppr->remote_manage_id,$order->consignee_country_code)->getAll();
                    if(count($remote_zip2)>0){
                        foreach ($remote_zip2 as $z){
                            $start_postal_code=$z->start_postal_code;
                            $end_postal_code=$z->end_postal_code;
                            if(substr($zip, 0, strlen($start_postal_code))>=$start_postal_code && substr($zip, 0, strlen($end_postal_code))<=$end_postal_code){
                                if ($z->additional_weight>0){
                                    if(($total_weight-$z->first_weight)>0){
                                        $remote_fee=(ceil(($total_weight-$z->first_weight)/$z->additional_weight)*$z->additional_fee)+$z->first_fee;
                                    }else{
                                        $remote_fee=$z->first_fee;
                                    }
                                }else{
                                    if(($total_weight-$z->first_weight)>0){
                                        $remote_fee=(($total_weight-$z->first_weight)*$z->additional_fee)+$z->first_fee;
                                    }else{
                                        $remote_fee=$z->first_fee;
                                    }
                                }
                                if($remote_fee<=$z->lowest_fee){
                                    $remote_fee=$z->lowest_fee;
                                }
                                if($remote_fee>0){
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        //超尺寸/超重附加费
        $over_size_quantity='';
        //总包裹数
        $package_quantity=0;
        foreach ($order->faroutpackages as $temp){
            $array=array($temp->length_out,$temp->width_out,$temp->height_out);
            rsort($array);//逆排序
            if($array[0]>'121'){
                //收取超尺寸费用
                $over_size_quantity+=$temp->quantity_out;
            }else{
                if($array[1]>'76'){
                    //收取超尺寸费用
                    $over_size_quantity+=$temp->quantity_out;
                }else{
                    if($temp->weight_out>32){
                        //收取超重费用
                        $over_size_quantity+=$temp->quantity_out;
                    }
                }
            }
            $package_quantity+=$temp->quantity_out;
        }
        //基础运费
        $tracking_fee=0;
        //获取分区
        $partition=Partition::find('partition_manage_id=? and country_code_two=?',$channelcostppr->partition_manage_id,$order->consignee_country_code)->getOne();
        if($partition->isNewRecord()){
            return array();
        }
        //包装类型
        $packing='BOX';
        if($order->packing_type=='DOC'){
        	$packing="DOC";
        }
        //获取价格
        $price=Price::find('price_manage_id=? and partition_code=? and boxing_type=? and start_weight<? and end_weight>=?',$channelcostppr->price_manage_id,$partition->partition_code,$packing,$total_weight,$total_weight)->getOne();
        //计算运费
        if(!$price->isNewRecord()){
            if ($price->additional_weight>0){
                if(($total_weight-$price->first_weight)>0){
                    $tracking_fee=(ceil(($total_weight-$price->first_weight)/$price->additional_weight)*$price->additional_fee)+$price->first_fee;
                }else{
                    $tracking_fee=$price->first_fee;
                }
            }else{
                if(($total_weight-$price->first_weight)>0){
                    $tracking_fee=(($total_weight-$price->first_weight)*$price->additional_fee)+$price->first_fee;
                }else{
                    $tracking_fee=$price->first_fee;
                }
            }
        }else{
            return array();
        }
        //燃油费率
        //获取网络燃油表
        $rate=0;
        $network=Networkfuel::find('network_id=? and effective_date<=? and fail_date>=?',$network_id,$date,$date)->getOne();
        if(!$network->isNewRecord()){
            $rate=$network->rate;
        }
        //燃油折扣
        if($channel->fuel_surcharge_dicount>0 && $rate>0){
        	$rate=$rate*$channel->fuel_surcharge_dicount;
        }
        $fee_amount=0;//总费用
        //获取渠道成本类型
        $channelcosttype= ChannelCosttype::find("channel_cost_id = ? and package_type = ?",$channel->channel_cost_id,$order->packing_type)->getOne();
        $fee_item_info=array();
        if(!$channelcosttype->isNewRecord()){
            if(count($channelcosttype->channelcostformula)>0){
                foreach ($channelcosttype->channelcostformula as $v){
                    if($v->calculation_flag=='1' && $v->effective_time<=time() && $v->fail_time>=time()){
                        $item_code=FeeItem::find('item_name=?',$v->fee_name)->getOne();
                        $item_fee=Helper_Formula::parse($v->formula,array('weight'=>$total_weight,'country'=>$order->consignee_country_code,'baf'=>$rate,'zone'=>$partition->partition_code,'freight'=>$tracking_fee,'icount'=>$package_quantity,'tax'=>$channel->tax,'over_count'=>$over_size_quantity,'special_count'=>$special_packing_fee_count));
                        if ($item_fee!=0){	// false 和 0 都不计算
                            if($item_code->sub_code=='logisticsExpressASP_EX0035'){//超尺寸
                                $fee_item_info[$item_code->sub_code]=array(
                                    'quantity'=>$over_size_quantity,
                                    'fee'=>$item_fee
                                );
                            }else{
                                if($item_code->sub_code=='logisticsExpressASP_EX0034'){//异型包装
                                    $fee_item_info[$item_code->sub_code]=array(
                                        'quantity'=>$special_packing_fee_count,
                                        'fee'=>$item_fee
                                    );
                                }else{
                                    $fee_item_info[$item_code->sub_code]=array(
                                        'quantity'=>'1',
                                        'fee'=>$item_fee
                                    );
                                }
                            }
	                        $fee_amount+=$item_fee;
                        }
                    }
                }
            }
        }
        //判断渠道成本是否已经计算燃油
        if($channel->fuel_surcharge_flag=='1'){
            $tracking_fee=$tracking_fee*(1+$rate);
        }
        //偏远+燃油
        $remote_fee=$remote_fee*(1+$rate);
        $tax_fee=0;
        if(isset($fee_item_info['service_fee'])){
            $tax_fee=($fee_amount-$fee_item_info['service_fee']['fee']+$tracking_fee+$remote_fee)*$channel->tax;
        }else{
            $tax_fee=($fee_amount+$tracking_fee+$remote_fee)*$channel->tax;
        }
        $fee_item_info['logisticsExpressASP_EX0001']=array('quantity'=>'1','fee'=>$tracking_fee);
        $fee_item_info['logisticsExpressASP_EX0020']=array('quantity'=>'1','fee'=>$remote_fee);
        $fee_item_info['tax']=array('quantity'=>'1','fee'=>$tax_fee);
        //组合返回各项费用
        $data=array();
        $data['public_price']=$fee_amount+$tracking_fee+$remote_fee+$tax_fee;//总运费
        $data['price_info']=array(
            'fee_item'=>$fee_item_info,
            'rate'=>$rate,//燃油费率
            'account'=>$price->account,//账号,实际是产品代码，product_code
            'total_weight'=>$total_cost_weight,//计费重
        	'weight_label'=>$label_weight//标签重
        );
        return $data;
    }
    /**
     * 获取重量数组
     */
    static function getweightlist($order,$channelcost){
        $channelcostppr=Channelcostppr::find('channel_cost_id=? and effective_time<=? and invalid_time>=?',$channelcost->channel_cost_id,time(),time())->getOne();
        if($channelcostppr->isNewRecord()){
            return array();
        }
        //优化空数组
        $total_weight_array=array();
        //标签重
        $label_weight=0;
        //如果包裹类型是PAK将实重算作计费重
        //获取渠道成本中计泡系数
        $channel=ChannelCost::find('channel_cost_id=?',$channelcostppr->channel_cost_id)->getOne();
        if($order->packing_type=='PAK'){
            foreach ($order->faroutpackages as $v){
                $label_weight+=$v->weight_out*$v->quantity_out;
            }
            //PAK类型的时候，计费重大于 0.5的整数倍0.1以内，自动向下取整到0.5的整数倍
            if($label_weight>0.5 && (floor($label_weight/0.5)*0.5+0.1)>$label_weight){
                $label_weight=floor($label_weight/0.5)*0.5;
            }else{
                $label_weight=sprintf("%.1f",$label_weight);
            }
        }else{
            $ratio=$channel->ratio;
            foreach ($order->faroutpackages as $faroutpackage){
                $volumn_weight=$faroutpackage->length_out*$faroutpackage->width_out*$faroutpackage->height_out/$ratio;
                if($volumn_weight>$faroutpackage->weight_out){
                    $label_weight+=$volumn_weight*$faroutpackage->quantity_out;
                }else{
                    $label_weight+=$faroutpackage->weight_out*$faroutpackage->quantity_out;
                }
            }
            //大于20公斤
            if($label_weight>20){
                if((floor($label_weight)+0.1)>$label_weight){
                    $label_weight=floor($label_weight);
                }else{
                    $label_weight=ceil($label_weight);
                }
            }else{
                if((floor($label_weight/0.5)*0.5+0.1)>$label_weight){
                    $label_weight=floor($label_weight/0.5)*0.5;
                }else{
                    $label_weight=ceil($label_weight/0.5)*0.5;
                }
            }
        }
        if($label_weight>20){
            $total_weight_array=array('n'=>$label_weight,'n+1'=>$label_weight+1,'n+2'=>$label_weight+2);
        }else{
            $total_weight_array=array('n'=>$label_weight,'n+0.5'=>$label_weight+0.5,'n+1'=>$label_weight+1,'n=21'=>21);
        }
        return $total_weight_array;
    }
}
class QuoteException extends QException{}
