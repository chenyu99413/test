<?php
Q::import ( _INDEX_DIR_ . '/_library/phpexcel/PHPEXCEL' );
require_once _INDEX_DIR_ . '/_library/phpexcel/PHPExcel.php';

class Controller_Warehouse extends Controller_Abstract {
	/**
	 * 包裹入库
	 */
	function actionIn() {
	}
	function actionInScan() {
		header ( 'Content-Type:application/json' );
		$ret = array (
			'code' => '1000',
			'msg' => '',
			'sound' => 'cuowu.mp3',
			'data' => '',
			'status' => false
		);
		$order=Order::find();
		$count1 = Order::find ( 'ali_order_no = ?', request ( 'scan_no' ) )->getCount ();
		if($count1==1){
			$order=$order->where('ali_order_no = ?', request ( 'scan_no' ))->getOne();
		}else{
			$alireference=Alireference::find('reference_no=?', request ( 'scan_no' ))->getOne();
			if($alireference->isNewRecord()){
				$order=$order->where( '1!=1' )->getOne();
			}else{
				$count2=Alireference::find('reference_no=?', request ( 'scan_no' ))->getCount ();
				if($count2 > 1){
					$ret ['msg'] = '请拆包';
					$ret ['sound'] = 'qingchaibao.mp3';
					//查询订单信息
					$ali_no_list=Alireference::find('tb_ali_reference.reference_no=? ',request ( 'scan_no' ))
					->joinLeft('tb_order', '*','tb_ali_reference.order_id=tb_order.order_id')
					->joinLeft('tb_order_package', '*','tb_ali_reference.order_id=tb_order_package.order_id')
					->group('tb_order.ali_order_no')->sum('quantity','package_count')->columns('tb_order.ali_order_no')->asArray()->getAll();
					$ret['info']=$ali_no_list;
					$ret['sum']['package_count']=Helper_Array::sumBy($ali_no_list,'package_count');
					$ret['sum']['order_count']=$count2;
					return json_encode ( $ret );
				}elseif ($count2==1){
					$count3=Alireference::find('order_id=?', $alireference->order_id)->getCount ();
					if($count3 > 1){
						$ret ['msg'] = '请合并包裹';
						$ret ['sound'] = 'hebingbaoguo.mp3';
						return json_encode ( $ret );
					}
					$order=$order->where( 'reference_no = ? and order_status !="2"', request ( 'scan_no' ) )->getOne();
				}
			}
		}
		if ($order->isNewRecord ()) {
			$ret ['msg'] = '单号错误，或包裹数据不存在';
			$ret ['sound'] = 'qingdengjiwuzhujian.mp3';
			return json_encode ( $ret );
		}
		$err_status = array (
			2 => '已取消',
			3 => '已退货',
			4 => '已付款',
			5 => '已入库',
			6 => '已打印',
			7 => '已出库',
			8 => '已提取',
			9 => '已签收',
			10 => '已查验',
			11 => '待退货',
			12 => '扣件',
		    13 => '已结束'
		);
		if (array_key_exists ( $order->order_status, $err_status )) {
		    if($order->order_status=='2'){
		        $ret ['msg'] = '订单已取消';
		        $ret ['sound'] = 'qingkoujian.mp3';
		    }else{
		        $ret ['msg'] = '订单状态为【' . $err_status [$order->order_status] . '】';
		    }
			return json_encode ( $ret );
		}
		$order_packages = Orderpackage::find ( 'order_id = ?', $order->order_id )->getAll ();
		$far_packages = Farpackage::find ( 'order_id = ?', $order->order_id )->getAll ();
		$product = Product::find('product_name=?',$order->service_code)->getOne();
		//检查应收燃油
		if($product->check_fuel=='1'){
		    $productfuel = Productfuel::find ( "product_id = ?", $product->product_id )
		    ->where("effective_date <= ? and fail_date >= ?",time(),time())->getOne ();
		    if($productfuel->isNewRecord()){
		        $ret ['msg'] = '没有设置燃油';
		        $ret ['sound'] = 'meiyoushezhiranyou.mp3';
		        return json_encode ( $ret );
		    }
		}
		$ret ['code'] = '0';
		if($order->service_code=='Express_Standard_Global' || $order->service_code=='WIG-FY' || $order->service_code=='US-FY' || $order->service_code=='EUUS-FY' || $order->service_code=='ePacket-FY'){
    		$ret ['msg'] = '扫描成功，共 ' . Helper_Array::sumBy ( $order_packages->toArray (), 'quantity' ) . ' 个包裹';
    		$ret ['sound'] = 'chenggongqingkaishichengzhong.mp3';
		}elseif($order->service_code=='EMS-FY') {
		    $ret ['msg'] = 'EMS，扫描成功，共 ' . Helper_Array::sumBy ( $order_packages->toArray (), 'quantity' ) . ' 个包裹';
		    $ret ['sound'] = 'emschenggongqingkaishichengzhong.mp3';
		}
		$ret ['data'] = array (
			'order' => $order->toArray (),
			'order_package' => $order_packages->toArray (),
			'far_package' => $far_packages->toArray (),
		    'product' => $product->toArray()
		);
		$ret ['status'] = true;
		
		return json_encode ( $ret );
		exit ();
	}
	/**
	 * 入库 保存
	 */
	function actionInSave() {
		header ( 'Content-Type:application/json' );
		$arr = json_decode ( request ( 'jsonstr' ), true );
		QLog::log ( print_r ( $arr, true ) );
		$ret = array (
			'code' => '1000',
			'msg' => '',
			'sound' => 'rukushibai.mp3',
			'data' => '',
			'status' => false
		);
		try {
			$order = Order::find ( 'order_id = ?', $arr ['order_id'] )->getOne ();
			if ($order->isNewRecord ()) {
				$ret ['msg'] = '单号错误，或包裹数据不存在';
				return json_encode ( $ret );
			}
			if ($order->order_status=='5') {
			    $ret ['msg'] = '包裹已入库';
			    return json_encode ( $ret );
			}
			$is_jipao = 0;
			$total_weight_income_in=0;//计费重
			$total_weight_actual_in = 0; // 实重总重
			Farpackage::meta ()->deleteWhere ( 'order_id=?', $order->order_id );
			foreach ( $arr ['package_list'] as $value ) {
				if ($value ['jipao'] > $value ['weight']) {
					$is_jipao = 1;
					$total_weight_income_in +=($value ['jipao'] >20 && $order->service_code=='Express_Standard_Global') ? ceil($value ['jipao'])* $value ['quantity']: ceil($value ['jipao']/0.5)*0.5* $value ['quantity'];
				}else {
					$total_weight_income_in +=($value ['weight']>20 && $order->service_code=='Express_Standard_Global') ? ceil($value ['weight']) * $value ['quantity']:ceil($value ['weight']/0.5)*0.5*$value ['quantity'];
				}
				$total_weight_actual_in += $value ['weight'] * $value ['quantity'];
				$far_package = new Farpackage ();
				$far_package->order_id = $order->order_id;
				$far_package->weight = $value ['weight'];
				$far_package->length = $value ['length'];
				$far_package->width = $value ['width'];
				$far_package->height = $value ['height'];
				$far_package->quantity = $value ['quantity'];
				$far_package->save ();
			}
			$order->volumn_chargeable = $is_jipao;
			$order->weight_income_in =$order->service_code=='ePacket-FY' ? $total_weight_actual_in :(($total_weight_income_in>20 && $order->service_code=='Express_Standard_Global') ? ceil($total_weight_income_in):$total_weight_income_in);
			$order->weight_actual_in = $total_weight_actual_in;
			$order->packagenum = $arr ['EX0002'];
			$order->boxnum = $arr ['EX0003'];
			$order->specialpackagenum = $arr ['EX0034'];
			$order->save ();
			if(count($arr ['package_list'])==1){
			    if($arr ['package_list']['package0']['length']==22 && $arr ['package_list']['package0']['width']==22 && $arr ['package_list']['package0']['height']==2.22 && $arr ['package_list']['package0']['quantity']==1){
			        if($order->service_code=='Express_Standard_Global'){
			            $order->packing_type='PAK';
			        }
			    }
			}
			$order->order_status = '5'; // 5 入库
			if($order->service_code=="EMS-FY" || $order->service_code=="WIG-FY" || $order->service_code=="EUUS-FY" || $order->service_code=="US-FY" || $order->service_code=="ePacket-FY"){
			    $order->add_data_status='1';
			}
			$order->department_id = MyApp::currentUser('department_id');
			$order->warehouse_in_department_id = MyApp::currentUser('department_id');
			$order->far_warehouse_in_time=time();
			$order->far_warehouse_in_operator=MyApp::currentUser('staff_name');
			$order->save ();
			$event_location = '';
			$department = Department::find ( 'department_id=?', MyApp::currentUser ( 'department_id' ) )->getOne ();
			if ($department->department_name == '杭州仓') {
			    $event_location = '杭州';
			} elseif ($department->department_name == '义乌仓') {
			    $event_location = '义乌';
			} elseif ($department->department_name == '上海仓') {
			    $event_location = '上海';
			}elseif ($department->department_name == '广州仓') {
			    $event_location = '广州';
			}elseif ($department->department_name == '青岛仓') {
			    $event_location = '青岛';
			}elseif ($department->department_name == '深圳仓') {
			    $event_location = '深圳';
			}elseif ($department->department_name == '南京仓') {
			    $event_location = '南京';
			}
			$in=Event::find('order_id= ? and event_code="WAREHOUSE_INBOUND"',$order->order_id)->getOne();
			if($in->isNewRecord()){
			    $this->eventSave ( $order->order_id, 'WAREHOUSE_INBOUND', time (), $event_location );
			    $order->warehouse_in_time =time ();
			    $order->save();
			}
		} catch ( Exception $e ) {
			$ret ['msg'] = '发生异常，请稍后重新操作此单【' . $order->ali_order_no . '】';
			return json_encode ( $ret );
		}

// 		if ($order->declaration_type == 'DL' || $order->total_amount > 700 || $order->weight_actual_in > 70) {
// 			$ret ['msg'] = '报关件，请操作下一单';
// 			$ret ['sound'] = 'baoguanjian.mp3';
// 		} else {
			$ret ['msg'] = '入库成功，请操作下一单';
			$ret ['sound'] = 'rukuchenggong.mp3';
// 		}
		$ret ['code'] = '0';
		
		$ret ['data'] = array ();
		$ret ['status'] = true;
		$ret ['weight_income_in']=$total_weight_income_in;
		return json_encode ( $ret );
		exit ();
	}
	/**
	 * 入库打印
	 */
	function actionInFarLabel() {
		header ( 'Content-Type:application/json' );
		$order = Order::find ( 'order_id = ?', request ( 'orderid' ) )->getOne ();
		$json_arr = array ();
		$json_arr ['ali_order_no'] = $order->ali_order_no;
		$fofn='';
		if ($order->declaration_type == 'DL') {
			$fofn = '/FO';
		} elseif ($order->total_amount > 700 || $order->weight_actual_in > 70) {
			$fofn = '/FN';
		}
		$json_arr ['SP'] = $order->volumn_chargeable ? 'P'.$fofn : 'S'.$fofn;
		$product='';
		switch ($order->service_code){
		    case 'Express_Standard_Global':
		        $product='普货';
		        break;
	        case 'EMS-FY':
	            $product='EMS';
	            break;
            case 'WIG-FY':
                $product='假发';
                break;
            case 'US-FY':
                $product='中美';
                break;
            case 'EUUS-FY':
                $product='欧美';
                break;
            case 'EUB-FY':
                $product='EUB';
                break;
		}
		$json_arr ['product'] = $product;
		return json_encode ( $json_arr );
		exit ();
	}
	/**
	 * confirm
	 */
	function actionConfirm() {
		$in_nos = Order::find ( 'order_status=5 and department_id=?',MyApp::currentUser('department_id') )->setColumns ( 'ali_order_no' )
			->getAll ()
			->getCols ( 'ali_order_no' );
		$this->_view ['in_nos'] = $in_nos;
	}
	/**
	 * confirm save
	 */
	function actionConfirmSave() {
		header ( 'Content-Type:application/json' );
		$arr = json_decode ( request ( 'jsonstr' ), true );
		QLog::log ( print_r ( $arr, true ) );
		$ret = array (
			'code' => '1000',
			'msg' => '错误',
			'sound' => 'cuowu.mp3',
			'data' => '',
			'status' => false
		);
		try {
			$event_location = '';
			$department = Department::find ( 'department_id=?', MyApp::currentUser ( 'department_id' ) )->getOne ();
			if ($department->department_name == '杭州仓') {
				$event_location = '杭州';
			} elseif ($department->department_name == '义乌仓') {
				$event_location = '义乌';
			} elseif ($department->department_name == '上海仓') {
				$event_location = '上海';
			}elseif ($department->department_name == '广州仓') {
				$event_location = '广州';
			}elseif ($department->department_name == '青岛仓') {
				$event_location = '青岛';
			}elseif ($department->department_name == '深圳仓') {
				$event_location = '深圳';
			}elseif ($department->department_name == '南京仓') {
				$event_location = '南京';
			}
			// WAREHOUSE_INBOUND (CONFIRM-300s)\CHECK_WEIGHT (CONFIRM-150s)\CONFIRM
			foreach ( $arr ['reason_nos'] as $value ) {
				$order = Order::find ( 'ali_order_no = ?', $value ['no'] )->getOne ();
				if (! $order->isNewRecord ()) {
					$event_time = time ();
					$this->eventSave ( $order->order_id, 'WAREHOUSE_INBOUND', $event_time - 300, $event_location );
					$this->eventSave ( $order->order_id, 'CHECK_WEIGHT', $event_time - 150, $event_location );
					$this->eventSave ( $order->order_id, 'CONFIRM', $event_time, $event_location,$value ['reason'] );
				}
				//已查验
				$order->order_status='11';
				$order->save();
			}
			foreach ( $arr ['in_nos'] as $value ) {
				$order = Order::find ( 'ali_order_no = ?', $value )->getOne ();
				if (! $order->isNewRecord ()) {
					$event_time = time ();
					$this->eventSave ( $order->order_id, 'WAREHOUSE_INBOUND', $event_time - 300, $event_location );
					$this->eventSave ( $order->order_id, 'CHECK_WEIGHT', $event_time - 150, $event_location );
					$this->eventSave ( $order->order_id, 'CONFIRM', $event_time, $event_location );
				}
				//待退货
				$order->order_status='10';
				$order->save();
			}
		} catch ( Exception $e ) {
			$ret ['msg'] = '系统异常，请稍后重试';
			return json_encode ( $ret );
			exit ();
		}

		$ret ['code'] = '0';
		$ret ['msg'] = '完成';
		$ret ['sound'] = 'chayanxinxibaocunwancheng.mp3';
		$ret ['data'] = array ();
		$ret ['status'] = true;

		return json_encode ( $ret );
		exit ();
	}
	/**
	 * event
	 */
	function eventSave($order_id, $event_code, $event_time, $event_location,$reason=NULL) {
		$event = Event::find ( 'order_id=? and event_code="CONFIRM"', $order_id )->getOne ();
		$event->order_id = $order_id;
		$event->event_code = $event_code;
		$event->event_time = $event_time;
		$event->event_location = $event_location;
		$event->reason = $reason;
		$event->timezone = '8';
		$event->confirm_flag = '1';
		$event->operator =MyApp::currentUser('staff_name');
		$event->save ();
	}
	/**
	 * 判断订单是否含有泡货和电池
	 */
	function actionCheckorder(){
	    $order=Order::find('ali_order_no=?',request('ali_order_no'))->getOne();
	    $data=array();
	    if($order->isNewRecord()){
	        $data['message']='notexist';
	    }else{
	        $data['product']=$order->service_product->product_chinese_name.' '.$order->service_code;
	        $data['label_remark']=str_replace(array("\r\n","\n","\r","\n\r"), '<br/>', $order->service_product->label_remark);
	        $flag=true;
	    	if(!in_array($order->department_id, RelevantDepartment::relateddepartmentids())){
				$data['message']='notsamewarehouse';
				echo json_encode($data);
				exit;
			}
			if(MyApp::currentUser('department_id')=='23' && !in_array($order->service_code, array("WIG-FY","US-FY"))){
			    $data['message']='qingdaocangerror';
			    echo json_encode($data);
			    exit;
			}
			//燃油
			$product=Product::find('product_name=?',$order->service_code)->getOne();
			if(!$product->isNewRecord() && in_array($order->service_code, array('Express_Standard_Global','WIG-FY'))){
				$fuel=Networkfuel::find('network_id=? and effective_date<=? and fail_date>=?',$product->network_id,time(),time())->getOne();
				if($fuel->isNewRecord()){
					$data['message']='fuelnotexist';
					echo json_encode($data);
					exit;
				}
			}
			//检查邮编城市国家无服务
// 			if($product->check_zip=='1'){
// 			   $noservice_zip = Noserivcezipcode::find("zip_code = ? and service_code = ?",$order->consignee_postal_code,$order->service_code)->getOne();
// 			   if(!$noservice_zip->isNewRecord()){
// 			       $data['message']='youbianwfw';
// 			       echo json_encode($data);
// 			       exit;
// 			   }
// 			   $noservice_city = Noserivcezipcode::find("city = ? and service_code = ?",$order->consignee_city,$order->service_code)->getOne();
// 			   if(!$noservice_city->isNewRecord()){
// 			       $data['message']='chengshiwfw';
// 			       echo json_encode($data);
// 			       exit;
// 			   }
// 			   $noservice_city = Noserivcezipcode::find("country_code = ? and service_code = ?",$order->consignee_country_code,$order->service_code)->getOne();
// 			   if(!$noservice_city->isNewRecord()){
// 			       $data['message']='guojiawfw';
// 			       echo json_encode($data);
// 			       exit;
// 			   }
// 			}
	        foreach ($order->product as $product){
	            if($product->has_battery=='1'){
	                $flag=false;
	            }
	        }
	        if($flag){
	            if($order->order_status=='6' || $order->order_status =='7' || $order->order_status =='8' || $order->order_status =='9'){
	                $data['message']='checkout';
	            }else{
	                if($order->order_status=='12' && !empty($order->payment_time) && $order->payment_time>0){
	                    $data['message']='koujian';
	                }elseif($order->order_status!='4' || empty($order->payment_time)){
    	                $data['message']='notpay';
    	            }else{
    	                $package_sum=Faroutpackage::find('order_id=?',$order->order_id)->getAll();
    	                if($order->add_data_status!='1' || count($package_sum)<1){
    	                    $data['message']='incomplete';
    	                }
    	            }
	            }
	        }else{
	            $data['message']='hasbattery';
	        }
	    }
	    $data['channel_id']=$order->channel_id;
	    echo json_encode($data);
	    exit();
	}
	/**
	 * 包裹出库
	 */
	function actionCheckout() {
	    if(request_is_post()){
	        $order=Order::find('ali_order_no=?',request('ali_order_no'))->getOne();
	        $data=array();
	        //获取订单总重
	        $total_weight='';
	        $package_sum=Faroutpackage::find('order_id=?',$order->order_id)->getAll();
	        foreach ($package_sum as $v){
                $total_weight+=$v->weight_out*$v->quantity_out;
	        }
	        //将重量存入order中
	        $order->weight_actual_out=($order->service_code == 'ePacket-FY')?sprintf('%.3f',$total_weight):sprintf('%.1f',$total_weight);
            $order->save();
            //获取产品
            $product=Product::find('product_name=?',$order->service_code)->getOne();
            if($product->isNewRecord()){
                $data['message']='productnotexist';
            }else{
                if($order->order_status=='6' || $order->order_status =='7' || $order->order_status =='8' || $order->order_status =='9'){
                    $data['account']=$order->account;
                    $data['message']='true';
                }else {
                	//填写了渠道和运单号
                    if(strlen($order->channel_id)>0 && strlen($order->tracking_no)>0){
                        self::saveoutevents($order);
                    	$data['account']='';
                    	$data['message']='true';
                    	//计算应付
                    	//获取异形包装费
                    	$special_fee_c_t=Fee::find("order_id=? and fee_type='2' and fee_item_code='logisticsExpressASP_EX0034'",$order->order_id)->getOne();
                    	$special_count_c_t=0;
                    	if(!$special_fee_c_t->isNewRecord()){
                    		$special_count_c_t=$special_fee_c_t->quantity;
                    	}
                    	//删除应付费用
                    	Fee::find("order_id=? and fee_type='2'",$order->order_id)->getAll()->destroy();
                    	//查找渠道成本
                    	$channelcost_c_t=ChannelCost::find('product_id=? and channel_id=?',$product->product_id,$order->channel_id)->getOne();
                    	if(!$channelcost_c_t->isNewRecord()){
                    		$channelcostppr_c_t=Channelcostppr::find("channel_cost_id=? and effective_time<=? and invalid_time>=?",$channelcost_c_t->channel_cost_id,time(),time())->getOne();
                    		if(!$channelcostppr_c_t->isNewRecord()){
                    			$network_c_t=Network::find("network_code=? ",$order->channel->network_code)->getOne();
                    			$quote= new Helper_Quote();
                    			$price_c_t=$quote->payment($order, $channelcostppr_c_t,$network_c_t->network_id,$special_count_c_t);
                    			if(count($price_c_t) && count($price_c_t['price_info'])){
                    				foreach ($price_c_t['price_info']['fee_item'] as $key=>$fee_item){
                    					//判断费用项中是否存在费用
                    					if($fee_item['fee']!='0'){
                    						//获取fee_sub_code
                    						$fee_sub_code=FeeItem::find('sub_code=?',$key)->getOne();
                    						$fee= new Fee();
                    						$fee->changeProps(array(
                    							'order_id'=>$order->order_id,
                    							'fee_type'=>'2',
                    							'fee_item_code'=>$fee_sub_code->sub_code,
                    							'fee_item_name'=>$fee_sub_code->item_name,
                    							'quantity'=>$fee_item['quantity'],
                    							'amount'=>$fee_item['fee'],
                    						));
                    						$fee->save();
                    					}
                    				}
                    				//保存计费重量
                    				if($price_c_t['price_info']['total_weight']){
                    					$order->weight_cost_out=$price_c_t['price_info']['total_weight'];
                    					//标签重量
                    					$order->weight_label=$price_c_t['price_info']['weight_label'];
                    					$order->save();
                    				}
                    			}
                    		}
                    	}
                    	//只选择了渠道，没有填写末端单号
                    }elseif($order->channel_id >0 && !$order->tracking_no){
                    	//首先判断渠道里的网络是不是UPS
                    	$channel_c=Channel::find("channel_id=?",$order->channel_id)->getOne();
                    	if(!$channel_c->isNewRecord() && ($channel_c->network_code=='UPS' || $channel_c->network_code=='EMS' || $channel_c->network_code=='FEDEX' || $channel_c->network_code=='US-FY' || $channel_c->network_code=='DHL' || $channel_c->network_code=='DHLE' || $channel_c->network_code=='YWML')){
                    	    //查找渠道对应的渠道成本
                    		$channelcost_c=ChannelCost::find('product_id=? and channel_id=?',$product->product_id,$order->channel_id)->getOne();
                    		if (!$channelcost_c->isNewRecord()){
                    			$channelcostppr_c=Channelcostppr::find("channel_cost_id=? and effective_time<=? and invalid_time>=?",$channelcost_c->channel_cost_id,time(),time())->getOne();
                    			if(!$channelcostppr_c->isNewRecord()){
                    				//先查找分区
                    			    $partition_code='';
                    			    $partition_code2='';
                    				$partion_c=Partition::find("partition_manage_id=? and country_code_two=?",$channelcostppr_c->partition_manage_id,$order->consignee_country_code)->getAll();
                    				foreach ($partion_c as $p){
                    				    if(trim($p->postal_code) && (substr($p->postal_code, 0,strlen($order->consignee_postal_code))==$order->consignee_postal_code || substr($order->consignee_postal_code, 0,strlen($p->postal_code))==$p->postal_code)){
                    				        $partition_code=$p->partition_code;
                    				    }
                    				    if(!$p->postal_code){
                    				        $partition_code2=$p->postal_code;
                    				    }
                    				}
                    				if(!$partition_code){
                    				    $partition_code=$partition_code2;
                    				}
                    				//渠道重量
                    				$weight_cost_out=0;
                    				//标签重
                    				$label_weight=0;
                    				//如果包裹类型是PAK将实重算作计费重
                    				if($order->packing_type=='PAK'){
                    					foreach ($order->faroutpackages as $v){
                    						$weight_cost_out+=$v->weight_out*$v->quantity_out;
                    					}
                    					$label_weight=$weight_cost_out;
                    					$weight_cost_out=sprintf("%.1f",$weight_cost_out);
                    					//PAK类型的时候，计费重大于 0.5的整数倍0.1以内，自动向下取整到0.5的整数倍
                    					if($label_weight>0.5 && (floor($label_weight/0.5)*0.5+0.1)>$label_weight){
                    						$label_weight=floor($label_weight/0.5)*0.5;
                    					}else{
                    						$label_weight=sprintf("%.1f",$label_weight);
                    					}
                    				}else{
                    					//获取渠道成本中计泡系数
                    					$ratio=$channelcost_c->ratio;
                    					foreach ($order->faroutpackages as $faroutpackage){
                    					    if($order->service_code=='EMS-FY' && floor($faroutpackage->length_out)<60 && floor($faroutpackage->width_out)<60 && floor($faroutpackage->height_out)<60){
                    					        $volumn_weight="0";
                    					    }else {
                    					        $volumn_weight=floor($faroutpackage->length_out)*floor($faroutpackage->width_out)*floor($faroutpackage->height_out)/$ratio;
                    					    }
                    						if($volumn_weight>$faroutpackage->weight_out){
                    							$label_weight+=$volumn_weight*$faroutpackage->quantity_out;
                    							$weight_cost_out+=ceil($volumn_weight/0.5)*0.5*$faroutpackage->quantity_out;
                    						}else{
                    							$label_weight+=$faroutpackage->weight_out*$faroutpackage->quantity_out;
                    							$weight_cost_out+=ceil($faroutpackage->weight_out/0.5)*0.5*$faroutpackage->quantity_out;
                    						}
                    					}
                    					//大于20公斤
                    					if($label_weight>20){
                    						if((floor($label_weight)+0.1)>$label_weight){
                    							$label_weight=floor($label_weight);
                    						}else{
                    							$label_weight=ceil($label_weight);
                    						}
                    					}else{
                    						if((floor($label_weight/0.5)*0.5+0.1)>$label_weight){
                    							$label_weight=floor($label_weight/0.5)*0.5;
                    						}else{
                    							$label_weight=ceil($label_weight/0.5)*0.5;
                    						}
                    					}
                    					$weight_cost_out=($weight_cost_out>20 && $order->service_code=='Express_Standard_Global') ? ceil($weight_cost_out):$weight_cost_out;
                    				}
                    				if($order->service_code=='US-FY'){
                    				    $weight_cost_out=0;
                    				    foreach ($order->faroutpackages as $farout){
                    				        $weight_cost_out += $farout->weight_out;
                    				    }
                    				    $weight_cost_out=sprintf("%.3f",$weight_cost_out);
                    				    $label_weight=$weight_cost_out;
                    				}
                    				if($order->service_code=='ePacket-FY'){
                    				    $weight_cost_out=0;
                    				    foreach ($order->faroutpackages as $farout){
                    				        $weight_cost_out += $farout->weight_out*$farout->quantity_out;
                    				    }
                    				    $weight_cost_out=sprintf("%.3f",$weight_cost_out);
                    				    $label_weight=$weight_cost_out;
                    				}
                    				$packing=$order->packing_type=='PAK'?"BOX":$order->packing_type;
                    				if($order->packing_type=='PAK' && $order->service_code=='WIG-FY'){
                    					$packing="PAK";
                    				}
                    				$price_c=Price::find("price_manage_id=? and partition_code=? and boxing_type=? and start_weight<? and end_weight>=? ",$channelcostppr_c->price_manage_id,$partition_code,$packing,$weight_cost_out,$weight_cost_out)->getOne();
                    				if(!$price_c->isNewRecord()){
                    				    $account_sync_c=Accountsync::find("product_code=?",$price_c->account)->getOne();
                    				    if(!$account_sync_c->isNewRecord() || $product->network->network_code=='EMS' || $product->network->network_code=='FEDEX' || $product->network->network_code=='US-FY' || $product->network->network_code=='DHL'){
                    						$account_c=$account_sync_c->account;
                    						if(!$account_c ){
                    						    if($order->service_code=='EUUS-FY'){
                    						        $account_c=$channel_c->account;
                    						    }elseif($order->service_code=='ePacket-FY'){
                    						        $account_c="EUB";
                    						    }elseif($product->network->network_code=='EMS'){
                    						        $account_c="EMS";
                    						    }elseif ($product->network->network_code=='FEDEX') {
                    						        $account_c="FEDEX";
                    						    }elseif ($product->network->network_code=='US-FY'){
                    						        $account_c="US-FY";
                    						    }
                    						}
                    						//调用打单方法
                    						$order->weight_label=$label_weight;
                    						$view=$this->Getlabel($order, $account_c ,$order->channel_id);
                    						if($view['errormessage']!=''){
                    							//渠道获取面单失败
                    							$data['message']=$view['errormessage'];
                    						}else{
                    							//获取异形包装费
                    							$special_fee_c=Fee::find("order_id=? and fee_type='2' and fee_item_code='logisticsExpressASP_EX0034'",$order->order_id)->getOne();
                    							$special_count_c=0;
                    							if(!$special_fee_c->isNewRecord()){
                    								$special_count_c=$special_fee_c->quantity;
                    							}
                    							//删除原有费用
                    							Fee::find("order_id=? and fee_type='2'",$order->order_id)->getAll()->destroy();
                    							$network_c=Network::find("network_code=? ",$order->channel->network_code)->getOne();
                    							$quote= new Helper_Quote();
                    							$fees_c=$quote->payment($order, $channelcostppr_c,$network_c->network_id,$special_count_c);
                    							if(count($fees_c) && count($fees_c['price_info'])){
                    								foreach ($fees_c['price_info']['fee_item'] as $key=>$fee_item){
                    									//判断费用项中是否存在费用
                    									if($fee_item['fee']!='0'){
                    										//获取fee_sub_code
                    										$fee_sub_code=FeeItem::find('sub_code=?',$key)->getOne();
                    										$fee= new Fee();
                    										$fee->changeProps(array(
                    											'order_id'=>$order->order_id,
                    											'fee_type'=>'2',
                    											'fee_item_code'=>$fee_sub_code->sub_code,
                    											'fee_item_name'=>$fee_sub_code->item_name,
                    											'quantity'=>$fee_item['quantity'],
                    											'amount'=>$fee_item['fee'],
                    										));
                    										$fee->save();
                    									}
                    								}
                    							}
                    							//保存计费重量
                    							$order->weight_cost_out=$weight_cost_out;
                    							//保存标签重
                    							$order->weight_label=$label_weight;
                    							//存入打单账号
                    							$order->account=$account_c;
                    							self::saveoutevents($order);
                    							$data['account']=$view['account'];
                    							$data['message']='true';
                    						}
                    					}else{
                    						$data['message']="pricenotexist";
                    					}
                    				}else{
                    					$data['message']="pricenotexist";
                    				}
                    			}else{
                    				$data['message']="channelnotexist";
                    			}
                    		}else{
                    			$data['message']="channelnotexist";
                    		}
                    		//非UPS渠道,只计算费用，不生成面单
                    	}else{
                    		//获取异形包装费
                    		$special_fee_c=Fee::find("order_id=? and fee_type='2' and fee_item_code='logisticsExpressASP_EX0034'",$order->order_id)->getOne();
                    		$special_count_c=0;
                    		if(!$special_fee_c->isNewRecord()){
                    			$special_count_c=$special_fee_c->quantity;
                    		}
                    		//删除原有费用
                    		Fee::find("order_id=? and fee_type='2'",$order->order_id)->getAll()->destroy();
                    		$network_c=Network::find("network_code=? ",$order->channel->network_code)->getOne();
                    		$channelcost_c=ChannelCost::find('product_id=? and channel_id=?',$product->product_id,$order->channel_id)->getOne();
                    		if (!$channelcost_c->isNewRecord()){
                    			$channelcostppr_c=Channelcostppr::find("channel_cost_id=? and effective_time<=? and invalid_time>=?",$channelcost_c->channel_cost_id,time(),time())->getOne();
                    			$quote= new Helper_Quote();
                    			$fees_c=$quote->payment($order, $channelcostppr_c,$network_c->network_id,$special_count_c);
                    			if(count($fees_c) && count($fees_c['price_info'])){
                    				//存入成本费用
                    				foreach ($fees_c['price_info']['fee_item'] as $key=>$fee_item){
                    					//判断费用项中是否存在费用
                    					if($fee_item['fee']!='0'){
                    						//获取fee_sub_code
                    						$fee_sub_code=FeeItem::find('sub_code=?',$key)->getOne();
                    						$fee= new Fee();
                    						$fee->changeProps(array(
                    							'order_id'=>$order->order_id,
                    							'fee_type'=>'2',
                    							'fee_item_code'=>$fee_sub_code->sub_code,
                    							'fee_item_name'=>$fee_sub_code->item_name,
                    							'quantity'=>$fee_item['quantity'],
                    							'amount'=>$fee_item['fee'],
                    						));
                    						$fee->save();
                    					}
                    				}
                    				//保存计费重量
                    				if($fees_c['price_info']['total_weight']){
                    					$order->weight_cost_out=$fees_c['price_info']['total_weight'];
                    					$order->weight_label=$fees_c['price_info']['weight_label'];
                    					$order->save();
                    				}
                    			}
                    		}
                    		self::saveoutevents($order);
                    		$data['account']='';
                    		$data['message']='true';
                    	}
                    }else{
                        //获取渠道成本
                        $channelcost=ChannelCost::find('product_id=?',$product->product_id)->getAll();
                        if(count($channelcost)<=0){
                            $data['message']='channelnotexist';
                        }else{
                            //计算成本价格
                            $price_array=array();
                            $price_info_array=array();
                            foreach ($channelcost as $temp){
                                //判断渠道可用部门和禁用部门
                                $available_department_ids=Helper_Array::getCols(Channeldepartmentavailable::find('channel_id=?',$temp->channel_id)->getAll(), 'department_id');
                                $disabled_department=Channeldepartmentdisable::find('channel_id=? and department_id=? and effect_time <= ? and failure_time >= ?',$temp->channel_id,$order->department_id,time(),time())->getOne();
                                if((count($available_department_ids)>0 && !in_array($order->department_id, $available_department_ids)) || !$disabled_department->isNewRecord()){
                                    continue;
                                }
                                //获取价格-偏派-分区表
                                $channelcostppr=Channelcostppr::find('channel_cost_id=? and effective_time<=? and invalid_time>=?',$temp->channel_cost_id,time(),time())->getOne();
                                if($channelcostppr->isNewRecord()){
                                    continue;
                                }else{
                                    //获取异形包装费
                                    $special_fee=Fee::find("order_id=? and fee_type='2' and fee_item_code='logisticsExpressASP_EX0034'",$order->order_id)->getOne();
                                    if($special_fee->isNewRecord()){
                                        $special_count=0;
                                    }else{
                                        $special_count=$special_fee->quantity;
                                    }
                                    $network=Network::find("network_code=? ",$temp->channel->network_code)->getOne();
                                    $quote= new Helper_Quote();
                                    $price=$quote->payment($order, $channelcostppr,$network->network_id,$special_count);
                                    if(count($price)<=0){
                                        continue;
                                    }
                                    if(!$price['public_price']){
                                        continue;
                                    }
                                    $price_array[$channelcostppr->channel_cost_p_p_r_id]=$price['public_price'];
                                    $price_info_array[$channelcostppr->channel_cost_p_p_r_id]=$price['price_info'];
                                }
                            }
                            //判断是否有查询失败的报价
                            if( max($price_array)==0){
                                $data['message']='pricenotexist';
                            }else{
                                //获取最小的价格和价格表id
                                $channel_cost_p_p_r_id=array_search(min($price_array), $price_array);
                                $channel_cost_p_p_r=Channelcostppr::find('channel_cost_p_p_r_id=?',$channel_cost_p_p_r_id)->getOne();
                                $channel_cost=ChannelCost::find('channel_cost_id=?',$channel_cost_p_p_r->channel_cost_id)->getOne();
                                //实际此时是产品代码proudct_code
                                $account_name=$price_info_array[$channel_cost_p_p_r_id]['account'];
                                $account_sync=Accountsync::find('product_code=?',$account_name)->getOne();
                                if(!$account_sync->isNewRecord() && !in_array($product->network->network_code, array('EMS','FEDEX','US-FY','DHL'))){
                                    $account_name=$account_sync->account;
                                }elseif($order->service_code=='EUUS-FY') {
                                    $channel=Channel::find('channel_id = ?',$channel_cost->channel_id)->getOne();
                                    $account_name=$channel->account;
                                }elseif($order->service_code=='ePacket-FY') {
                                    $account_name='EUB';
                                }elseif($product->network->network_code=='EMS') {
                                    $account_name='EMS';
                                }elseif ($product->network->network_code=='FEDEX') {
                                    $account_name='FEDEX';
                                }elseif ($product->network->network_code=='US-FY') {
                                    $account_name='US-FY';
                                }
                                //将计费重存入order中
                                $order->weight_cost_out=$price_info_array[$channel_cost_p_p_r_id]['total_weight'];
                                //将标签重存入order中
                                $order->weight_label=$price_info_array[$channel_cost_p_p_r_id]['weight_label'];
                                $order->save();
                                
                                //调用打单方法
                                $view=$this->Getlabel($order, $account_name,$channel_cost->channel_id);
                                if($view['errormessage']!=''){
                                    //渠道获取面单失败
                                    $data['message']=$view['errormessage'];
                                }else{//结束
                                    //删除原有费用
                                    Fee::find("order_id=? and fee_type='2'",$order->order_id)->getAll()->destroy();
                                    //存入成本费用
                                    foreach ($price_info_array[$channel_cost_p_p_r_id]['fee_item'] as $key=>$fee_item){
                                        //判断费用项中是否存在费用
                                        if($fee_item['fee']!='0'){
                                            //获取fee_sub_code
                                            $fee_sub_code=FeeItem::find('sub_code=?',$key)->getOne();
                                            $fee= new Fee();
                                            $fee->changeProps(array(
                                                'order_id'=>$order->order_id,
                                                'fee_type'=>'2',
                                                'fee_item_code'=>$fee_sub_code->sub_code,
                                                'fee_item_name'=>$fee_sub_code->item_name,
                                                'quantity'=>$fee_item['quantity'],
                                                'amount'=>$fee_item['fee'],
                                            ));
                                            $fee->save();
                                        }
                                    }
                                    //保存出库渠道
                                    $order->channel_id=$channel_cost->channel_id;
                                    //存入打单账号
                                    $order->account=$account_name;
                                    self::saveoutevents($order);
                                    $data['account']=$view['account'];
                                    $data['message']='true';
                                }
                            }
                        }
                    }
                    self::changqdtosh($order);
                    $fee_in=Fee::find('order_id=? and fee_type= "1"',$order->order_id)->getSum('amount');
                    $fee_out=Fee::find('order_id=? and fee_type= "2"',$order->order_id)->getSum('amount');
                    $order->profit=$fee_in-$fee_out;
                    $order->save();
                }
            }
	        echo json_encode($data);
	        exit();
	    }
	}
	/**
	 * 国家
	 */
	function actioncodewordtwotree(){
	    $arr=array();
	    $checkeds = array ();
	    $country=Country::find()->asArray()->getAll();
	    if (request ( "checked" ) != null) {
	        $checkeds = explode ( ",", request ( "checked" ) );
	    }
	    foreach ($country as $c){
	        $arr[]=array(
	            "id" => $c['code_word_two'],
	            "text" => $c['chinese_name'],
	            "checked" => in_array ( $c['code_word_two'], $checkeds ) ? "checked" : "",
	            "attributes" => ""
	        );
	    }
	    echo json_encode($arr);
	    exit();
	}
	
	/**
	 * 包裹比对
	 */
	function actionComparison() {
	        $select = Order::find ( 'order_status = ?', '6' )->Joinright ( 'tb_sub_code', 'sub_code', 'tb_order.order_id=tb_sub_code.order_id' );
	        $account = Order::channelgroup();
	        $first_key='';
	        if(MyApp::currentUser('department_id')=='23'){
	            $first_key='青岛 FedEx';
	        }else {
    	        foreach ($account as $key=>$value){
    	            $first_key=$key;
    	            break;
    	        }
	        }
	        $account=$account[request ( 'account',$first_key)];
	        $select->where ( 'channel_id in (?)', $account );
	        if(request('code_word_two')){
	            $code_word_two=explode(',', request('code_word_two'));
	            $select->where ( 'consignee_country_code in (?)', $code_word_two );
	        }
	        $staffrole=StaffRole::find('staff_id = ? and role_id in (?)',MyApp::currentUser('staff_id'),array("1","7"))->getOne();
	        if($staffrole->isNewRecord()){
    	        if(MyApp::currentUser('department_id')=='24' || MyApp::currentUser('department_id')=='7'){
    	            $select->where ( 'department_id in (?)', array(MyApp::currentUser('department_id'),'23') );
    	        }else {
    	            $select->where ( 'department_id = ?', MyApp::currentUser('department_id'));
    	        }
	        }
	        $order = $select->asArray ()
	        ->getAll ();
	        //提交修改
	        $order_id = array ();
	        if (request ( 'sub_code' )) {
	            $sub_code = explode ( "\r\n", request ( 'sub_code' ) );
	            foreach ( $order as $v ) {
	                $orders [] = $v ['order_id'];
	            }
	            //保存总单
	            $channel_id = implode(',', $account);
	            if(!request('total_list_no')){
	                $total_list = new Totallist();
	                $now='FR'.date('Ymd');
	                $seq = Helper_Seq::nextVal ( $now );
	                if ($seq < 1) {
	                    Helper_Seq::addSeq ( $now );
	                    $seq = 1;
	                }
	                $far_no=$now.sprintf("%03d",$seq);
	                $total_list->total_list_no = $far_no;
	                $channel_group = Channelgroup::find('channel_group_name = ?',request ( 'account',$first_key))->getOne();
	                $total_list->channel_group_id = $channel_group->channel_group_id;
	                $total_list->country_code = request('code_word_two');
	                $total_list->record_order_date = strtotime(request ( 'record_order_date' ));
	                $total_list->department_id = MyApp::currentUser('department_id');
	                $total_list->operation_name = MyApp::currentUser('staff_name');
	                $total_list->operation_time = time();
	                $total_list->save();
	            }
	            $orders = array_unique ( $orders );
	            foreach ( $orders as $v1 ) {
	                $code = Subcode::find ( 'order_id=?', $v1 )->getAll ();
	                foreach ( $code as $v2 ) {
	                    if (! in_array ( strtoupper($v2->sub_code), $sub_code )) {
	                        $order_id [] = $v2->order_id;
	                        continue 2;
	                    }
	                }
	                $o = Order::find ( 'order_id=?', $v1 )->getOne ();
                    $o->order_status = '7';
	                $o->sort = request ( 'sort' );
	                $o->record_order_date = strtotime(request ( 'record_order_date' ));
	                $o->total_list_no = request('total_list_no')?request('total_list_no'):$far_no;
	                $o->save ();
	            }
	            if (count ( $order_id )) {
	                $select = Order::find ( 'tb_order.order_id in (?)', $order_id )->Joinright ( 'tb_sub_code', 'sub_code', 'tb_order.order_id=tb_sub_code.order_id' );
	                $order_id = $select->asArray ()
	                ->getAll ();
	                $this->_view ['order_id'] = $order_id;
	            } else {
	                
	                return $this->_redirectMessage ( '核对成功', '成功', url ( '/comparison' ), 3 );
	            }
	        }
	        $this->_view ['order'] = $order;
	}
	/**
	 * 批量修改
	 * 
	 */
	function actionBatchupdate(){
		if (request ( 'ali_order_no' )) {
			$ali_order_no = explode ( "\r\n", request ( 'ali_order_no' ) );
			if (count ( $ali_order_no )) {
				Order::meta ()->updateDbWhere ( array (
					'packing_type' => request ( 'packing_type' ) 
				), 'ali_order_no in (?)', $ali_order_no );
			}
			return $this->_redirectMessage ( '修改成功', '成功', url ( '/batchupdate' ), 2 );
		}
	}
	/**
	 * 获取面单
	 */
	function Getlabel($order,$account_name,$channel_id){
	    if(empty($account_name)){
	        $data['errormessage']='账号不能为空';
	    }else {
    	    if($account_name=='EMS'){
    	        $data=self::ems($order);
    	    }elseif ($account_name=='EUB'){
    	        $data=self::eub($order);
    	    }elseif ($account_name=='FEDEX'){
    	        $data=self::fedex($order,$channel_id);
    	    }elseif ($account_name=='US-FY'){
      	        $data=self::fsp($order,$channel_id);
//   	        $data=self::kingspeed($order, $channel_id);
    	    }elseif (in_array($account_name, array('ML1002','ML0029','ML0715','ML0716','ML051501','SH-DHL-MX'))){
    	        $data=self::hlt($order, $account_name, $channel_id);
    	    }else {
        	    if($account_name=='4F1R24'){
        	        $data=self::runfeng($order);
        	    }else{
        	        $account=UPSAccount::find("account = ?",$account_name)->getOne();
        	        if(!$account->isNewRecord()){
        	            $data=self::ups($order,$account);
        	        }else{
        	            $data['errormessage']=$account_name.'账号不存在';
        	        }
        	    }
    	    }
	    }
        return $data;
	}
	/**
	 * 润峯账号渠道
	 */
	static function runfeng($order){
	    //登录润峯API
	    $account='18962528018@159.com';//登录名
	    $pwd='123456';//登录密码
	    $api_url='www.runforint.com:8000';//api url地址
	    $login_resquest=array(
	        'Name'=>$account,
	        'Pwd'=>md5($pwd)
	    );
	    $tks=array();
	    $login_response=Helper_Curl::post($api_url.'/api/Login', json_encode($login_resquest),array(
	        'Content-Type: application/json'
	    ));
	    $login_response=json_decode($login_response,true);
	    if(!isset($login_response['Token'])){
	        $view['errormessage']='API认证失败！请联系管理员！';
	    }else{
	        $token=$login_response['Token'];
	        //润峯WayBillUnite API
	        $items=array();
	        $invoice=array('items'=>array(),'total'=>'');
	        //获取总重量
	        $total_weight=$order->weight_label;
	        $quantity=0;
	        foreach ($order->product as $value){
	        	$quantity+=$value->product_quantity;
	        }
	        foreach ($order->product as $v){
	        	//传给润峯的商品信息
	            $items[]=array(
	                'Goods'=>$v->product_name_en_far,
	                'GoodsCn'=>$v->product_name_far,
	                'Currency'=>$order->currency_code,
	                'Count'=>$v->product_quantity,
	                'UnitPrice'=>$v->declaration_price,
	                'SubWeight'=>$quantity>0?(floor($total_weight/$quantity*10000))/10000*$v->product_quantity:"0.1",
	                'HsCode'=>$v->hs_code_far,
	                'Label'=>'',
	                'Sku'=>'',
	            );
	            //FAR做Invoice
	            $invoice['items'][]=array(
	                'quantity'=>$v->product_quantity,
	                'unit'=>$v->product_unit,
	                'name'=>$v->product_name_en_far,
	                'hscode'=>$v->hs_code_far,
	                'country'=>'CN',
	                'price'=>$v->declaration_price,
	                'itotal'=>round($v->product_quantity*$v->declaration_price,2).' '.$order->currency_code,
	                'material'=>$v->material_use,
	            );
	            $invoice['total']+=round($v->product_quantity*$v->declaration_price,2);
	        }
	        //获取包裹类型
	        $package_type=$order->packing_type;
	        $state='';
	        //判断收件国家是否是US和CA
	        if($order->consignee_country_code=='US' || $order->consignee_country_code=='CA'){
	            //将收件人州转为二字码
	            $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$order->consignee_state_region_code)))->getOne();
	            if($states->isNewRecord()){
	                $view['errormessage']=$order->consignee_country_code.'中不存在'.$order->consignee_state_region_code.'州/省';
	                return $view;
	            }else{
	                $state=$states->province_code_two;
	            }
	        }else{
	            $state=$order->consignee_country_code;
	        }
	        //判断收件人税号是否存在
	        $vat='';
	        if($order->tax_payer_id){
	            $vat=' VAT:'.$order->tax_payer_id;
	        }
	        $far_package_count=Faroutpackage::find('order_id=?',$order->order_id)->sum('quantity_out','sum_quantity')->getAll();
	        $waybill_request=array(
	            "Token"=>$token,
	            "WayBillUniteRequestData"=>array(
	                'LogisticalName'=>$package_type=='DOC'?'UPS文件':'UPS红单01',
	                'IsPackage'=>$package_type=='DOC'?'0':'1',
	                'Country'=>$order->consignee_country_code,
	                'RepertoryName'=>'义乌仓',
	                'ReferNum'=>'',
	                'Email'=>$order->consignee_email,
	                'Province'=>$state,
	                'City'=>$order->consignee_city,
	                'ContactName'=>trim($order->consignee_name1),
	                'PostCode'=>$order->consignee_postal_code,
	                'ContactAddress'=>trim($order->consignee_street1.' '.$order->consignee_street2.$vat),
	                'ContactTel'=>$order->consignee_mobile,
	                'ContactCompany'=>trim($order->consignee_name2)?trim($order->consignee_name2):trim($order->consignee_name1),
	                'PackageCount'=>$far_package_count['sum_quantity'],
	                'IsDeclare'=>'0',
	                'WayBillUniteRequestInfoDatas'=>$items,
	            ),
	        );
	    }
	    QLog::log($order->ali_order_no.json_encode($waybill_request));
	    $waybill_response=Helper_Curl::post($api_url.'/api/WayBillUnite', json_encode($waybill_request),array(
	        'Content-Type: application/json'
	    ));
	    $waybill_response=json_decode($waybill_response,true);
	    if($waybill_response['Code']=='1'){
	        $tks[]=$waybill_response['WayBillUniteResponseData']['LogisticalNum'];
	        $dir=Q::ini('upload_tmp_dir');
	        @Helper_Filesys::mkdirs($dir);
	        $target=$dir.DS.$waybill_response['WayBillUniteResponseData']['LogisticalNum'].'.pdf';
	        //将面单存储到本地
	        $source=trim(file_get_contents('http://www.runforint.com:8000/api/PrintFile?fileurl='.$waybill_response['WayBillUniteResponseData']['LogisticalNumUrl'].'&token='.$token.'&size=0'));
	        file_put_contents($target,$source);
	        $png_target=$dir.DS.$tks[0].'.png';
	        $source=trim(file_get_contents('http://kuaijian.far800.com/public/barcode/html/image.php?filetype=PNG&dpi=90&scale=20&rotation=0&font_family=0&font_size=0&thickness=70&start=C&code=BCGcode128&text='.$tks[0]));
	        file_put_contents($png_target,$source);
	        Helper_PDF::split($target,$target.'.pdf','F','O',array('chapter3'=>$png_target));
	        exec("/usr/bin/convert -density 300 -depth 8 -quality 85 {$target}.pdf -append {$target}.pdf.jpg");
	        $watermarkpath=array('chapter1'=>_INDEX_DIR_.'/public/img/chapter1.gif','chapter2'=>_INDEX_DIR_.'/public/img/chapter2.gif');
	        Helper_PDF::split($target,$target,'F','H',$watermarkpath);//保留一半的面单
	        //将pdf转为jpg格式
	        exec("/usr/bin/convert -density 300 -depth 8 -quality 85 {$target} -append {$target}.jpg");
	        //扫描图片中条形码获取物流单号
	        $image = new ZBarCodeImage($target.'.jpg');
	        $scanner = new ZBarCodeScanner();
	        $barcode = $scanner->scan($image);
	        $barcode=Helper_Array::getCols($barcode, 'data');
	        $barcode=array_unique(array_reverse($barcode));
	        //存入sub_code表中
	        //删除原有的子单
	        Subcode::find('order_id=?',$order->order_id)->getAll()->destroy();
	        foreach ($barcode as $temp){
	            if(strlen($temp)=='18'){
	                $order_subcode=new Subcode();
	                $order_subcode->changeProps(array(
	                    'order_id'=>$order->order_id,
	                    'sub_code'=>$temp
	                ));
	                $order_subcode->save();
	            }
	        }
	        //将tracking_number存入order中
	        $order->tracking_no=$tks[0];
	        $order->save();
	        //将invoice存储到本地
	        $jsonFile=$dir.DS.$waybill_response['WayBillUniteResponseData']['LogisticalNum'].'.json';
	        $shipper=array(
	        'account'=>'4F1R24',
	        'aname'=>'RunFeng Network Technology Co.',
	        'name'=>'SuZhou RunFeng Network Technology Co., Ltd.（YiWu branch）',
	        'address'=>'No. 41 HanChun Two area BeiYuan Street Yiwu',
	        'city'=>'YIWU',
	        'postcode'=>'322000',
	        'phone'=>'17802119771'
	            );
	        $chapter1='http://'.$_SERVER["HTTP_HOST"].'/public/img/chapter1.gif';
	        $chapter2='http://'.$_SERVER["HTTP_HOST"].'/public/img/chapter2.gif';
	        $copy_label='http://'.$_SERVER["HTTP_HOST"].'/_tmp/upload/'.$tks[0].'.pdf.pdf.jpg';
	        file_put_contents($jsonFile, json_encode(array(
	            'invoice'=>$invoice,
	            'shipmentid'=>self::creatShipid($tks[0]),
	            'shipper'=>$shipper,
	            'itemcount'=>$far_package_count['sum_quantity'],
	            'br_account'=>'',
	            'weight'=>$total_weight,
	            'total_weight'=>$total_weight,
	            'aname'=>trim($order->consignee_name1),
	            'name'=>trim($order->consignee_name2)?trim($order->consignee_name2):trim($order->consignee_name1),
	            'email'=>$order->consignee_email,
	            'phone'=>$order->consignee_mobile,
	            'countrycode'=>$order->consignee_country_code,
	            'countryname'=>Country::find('code_word_two=?',$order->consignee_country_code)->getOne()->english_name,
	            'state'=>$state,
	            'city'=>$order->consignee_city,
	            'postcode'=>$order->consignee_postal_code,
	            'address'=>$order->consignee_street1.' '.$order->consignee_street2.$vat,
	            'chapter1'=>$chapter1,
	            'chapter2'=>$chapter2,
	            'copy_label'=>$copy_label,
	            'freight'=>'0',
	            'ref1'=>'',
	            'ref2'=>'',
	            'poc_line1'=>'',
	            'poc_line2'=>'',
	            'poc_line3'=>'',
	            'tks'=>$tks[0],
	            'ali_order_no'=>$order->ali_order_no
	        )));
	        $view['errormessage']='';
	        $view['account']='RF';
	    }else{
	        $view['errormessage']=$waybill_response['WayBillUniteResponseError']['Info'];
	    }
	    return $view;
	}
	
	/*
	 * fedex账号渠道
	 */
	static function fedex($order,$channel_id){
	    $outpackage=Faroutpackage::find('order_id = ?',$order->order_id)->getAll();
	    if(count($outpackage)==0){
	        $view['errormessage']='无包裹，不能出库';
	        return $view;
	    }
	    $quantity='';
	    foreach ($outpackage as $o){
	        $quantity += $o->quantity_out;
	    }
	    $address=Order::splitAddressfedex($order->consignee_street1.' '.$order->consignee_street2);
	    if(count($address)>2){
	        $view['errormessage']='全球假发专线地址字符总数不能超过70';
	        return $view;
	    }
	    $consignee_street[]=isset($address[0])?$address[0]:$address[1];
	    if(isset($address[1])){
	        $consignee_street[]=$address[1];
	    }
	    $product=Orderproduct::find('order_id = ?',$order->order_id)->getAll();
	    $product_qua=Orderproduct::find('order_id = ?',$order->order_id)->getSum('product_quantity');
	    $pro=array();
	    $invoice=array('items'=>array(),'total'=>'');
	    $z=1;
	    $weight=Faroutpackage::find('order_id = ?',$order->order_id)->getSum('weight_out');
	    foreach ($product as $p){
	        $weight_sum=$order->packing_type=='PAK'?$order->weight_label:$weight;
	        $pro=array(
	            'v15:NumberOfPieces'=>'1',
    	        'v15:Description'=>$p->product_name_en_far,
    	        'v15:CountryOfManufacture'=>'CN',
    	        'v15:Weight'=>array(
    	            'v15:Units'=>'KG',
    	            'v15:Value'=>sprintf('%.3f',$weight_sum/$product_qua)
    	        ),
    	        'v15:Quantity'=>$p->product_quantity,
    	        'v15:QuantityUnits'=>'EA',
    	        'v15:UnitPrice'=>array(
    	            'v15:Currency'=>'USD',
    	            'v15:Amount'=>sprintf('%.2f',$p->declaration_price),
    	        )
	        );
	        $invoice['total']+=round($p->product_quantity*$p->declaration_price,2);
	        //FAR做Invoice
	        if($z<4){
    	        $invoice['items'][]=array(
    	            'description'=>$p->product_name_far.' '.$p->product_name_en_far.' '.$p->hs_code_far,
    	            'quantity'=>$p->product_quantity,
    	            'price'=>$p->declaration_price,
    	            'itotal'=>round($p->product_quantity*$p->declaration_price,2),
    	        );
	        }
	        $z++;
	    }
	    if($order->packing_type=='PAK'){
	        $packing_type='FEDEX_PAK';
	    }else {
	        // 	        $packing_type='FEDEX_BOX';
	        $packing_type='YOUR_PACKAGING';
	    }
	    $state=$order->consignee_city;
	    //判断收件国家是否是US和CA
	    if($order->consignee_country_code=='US' || $order->consignee_country_code=='CA'){
	        //将收件人州转为二字码
	        $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$order->consignee_state_region_code)))->getOne();
	        if($states->isNewRecord()){
	            $view['errormessage']=$order->consignee_country_code.'中不存在'.$order->consignee_state_region_code.'州/省';
	            return $view;
	        }else{
	            $state=$states->province_code_two;
	        }
	    }
	    $j=1;
	    //fedex测试账号信息
// 	    $key='vOSDgWEXV7QnRbxP';
// 	    $password='h2XRZgneNCQALyHjMP682U5re';
// 	    $accountNumber='510087500';
// 	    $meterNumber='100421805';
	    //fedex生产账号信息
	    $key='f5XzZpzEwekZ8TJv';
	    $password='ILI1RWIQVhrjIZFBY5CqNP41i';
	    $accountNumber='631526993';
	    $meterNumber='250139501';
	    $sender_name=$order->sender_name1;
	    $sender_company=$order->sender_name2;
	    $sender_phone=$order->sender_mobile.($order->sender_telephone?'/'.$order->sender_telephone:'');
	    $sender_province=$order->sender_state_region_code;
	    $sender_city=$order->sender_city;
	    $sender_area='';
	    $sender_address=$order->sender_street1.($order->sender_street2?' '.$order->sender_street2:'');
	    $sender_zip_code=$order->sender_postal_code;
	    $sender_email=$order->sender_email;
	    $sender_country_code=$order->sender_country_code;
	    $channel=Channel::find('channel_id = ?',$channel_id)->getOne();
	    if($channel->sender_id>0){
	        $sender=Sender::find('sender_id = ?',$channel->sender_id)->getOne();
	        if(!$sender->isNewRecord()){
	            $sender_name=$sender->sender_name;
	            $sender_company=$sender->sender_company;
	            $sender_phone=$sender->sender_phone;
	            $sender_province=$sender->sender_province;
	            $sender_city=$sender->sender_city;
	            $sender_area=$sender->sender_area;
	            $sender_address=$sender->sender_address;
	            $sender_zip_code=$sender->sender_zip_code;
	            $sender_email=$sender->sender_email;
	            $sender_country_code='CN';
	        }
	    }
	    foreach ($outpackage as $out){
	        for ($i=0;$i<$out->quantity_out;$i++){
	            $MasterTrackingId='';
	            if($order->tracking_no){
	              $MasterTrackingId  =array(
                        'v15:TrackingIdType'=>$order->fedex_tracking_id_type,
                        'v15:FormId'=>$order->fedex_form_id,
                        'v15:TrackingNumber'=>$order->tracking_no
                    );
	            }
                $res = array(
                    'soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v15="http://fedex.com/ws/ship/v15"' => array(
                        'soapenv:Header' =>'',
                        'soapenv:Body' => array(
                            'v15:ProcessShipmentRequest' => array(
                                'v15:WebAuthenticationDetail' => array(
                                    'v15:UserCredential'=>array(
                                        'v15:Key'=>$key,
                                        'v15:Password'=>$password,
                                    ),
                                ),
                                'v15:ClientDetail'=>array(
                                    'v15:AccountNumber'=>$accountNumber,
                                    'v15:MeterNumber'=>$meterNumber
                                ),
                                'v15:TransactionDetail'=>array(
                                    'v15:CustomerTransactionId'=>'ProcessShipmentRequest_v15'
                                ),
                                'v15:Version'=>array(
                                    'v15:ServiceId'=>'ship',
                                    'v15:Major'=>'15',
                                    'v15:Intermediate'=>'0',
                                    'v15:Minor'=>'0'
                                ),
                                'v15:RequestedShipment'=>array(
                                    'v15:ShipTimestamp'=>date("Y-m-d").'T'.date("H:i:s").'+08:00',
                                    'v15:DropoffType'=>'REGULAR_PICKUP',
                                    'v15:ServiceType'=>'INTERNATIONAL_PRIORITY',
                                    'v15:PackagingType'=>$packing_type,
                                    'v15:TotalWeight'=>array(
                                        'v15:Units'=>'KG',
                                        'v15:Value'=>$order->weight_label
                                    ),
                                    'v15:PreferredCurrency'=>'USD',
                                    'v15:Shipper'=>array(
                                        'v15:Contact'=>array(
                                            'v15:PersonName'=>$sender_name,
                                            'v15:CompanyName'=>$sender_company,
                                            'v15:PhoneNumber'=>$sender_phone,
                                            'v15:EMailAddress'=>$sender_email
                                        ),
                                        'v15:Address'=>array(
                                            'v15:StreetLines'=>$sender_address,
                                            'v15:City'=>$sender_city,
                                            'v15:StateOrProvinceCode'=>$sender_province,
                                            'v15:PostalCode'=>$sender_zip_code,
                                            'v15:CountryCode'=>$sender_country_code
                                        ),
                                    ),
                                    'v15:Recipient'=>array(
                                        'v15:Contact'=>array(
                                            'v15:PersonName'=>$order->consignee_name1,
                                            'v15:CompanyName'=>$order->consignee_name2,
                                            'v15:PhoneNumber'=>$order->consignee_mobile.($order->consignee_telephone?'/'.$order->consignee_telephone:''),
                                            'v15:EMailAddress'=>$order->consignee_email
                                        ),
                                        'v15:Address'=>array(
                                            'v15:StreetLines'=>$consignee_street,
                                            'v15:City'=>$order->consignee_city,
                                            'v15:StateOrProvinceCode'=>$state,
                                            'v15:PostalCode'=>$order->consignee_postal_code,
                                            'v15:CountryCode'=>$order->consignee_country_code
                                        ),
                                    ),
                                    'v15:ShippingChargesPayment'=>array(
                                        'v15:PaymentType'=>'SENDER',
                                        'v15:Payor'=>array(
                                            'v15:ResponsibleParty'=>array(
                                                'v15:AccountNumber'=>$accountNumber,
                                            ),
                                        )
                                    ),
                                    'v15:CustomsClearanceDetail'=>array(
                                        'v15:DutiesPayment'=>array(
                                            'v15:PaymentType'=>'RECIPIENT',
                                            'v15:Payor'=>array(
                                                'v15:ResponsibleParty'=>array(
                                                    'v15:AccountNumber'=>'',
                                                ),
                                            )
                                        ),
                                        'v15:CustomsValue'=>array(
                                            'v15:Currency'=>'USD',
                                            'v15:Amount'=>$order->total_amount
                                        ),
                                        'v15:CommercialInvoice'=>array(
                                            'v15:TermsOfSale'=>'DDU',
                                        ),
                                        'v15:Commodities'=>$pro,
                                    ),
                                    'v15:LabelSpecification'=>array(
                                        'v15:LabelFormatType'=>'COMMON2D',
                                        'v15:ImageType'=>'PDF',
                                        'v15:LabelStockType'=>'STOCK_4X6',
//                                         'v15:CustomerSpecifiedDetail'=>array(
//                                             'v15:CustomContent'=>array(
//                                                 'v15:BarcodeEntries'=>array(
//                                                     'v15:Position'=>array(
//                                                         'v15:X'=>'50',
//                                                         'v15:Y'=>'2'
//                                                     ),
//                                                     'v15:BarcodeSymbology'=>'CODE128'
//                                                 )
//                                             )
//                                         )
                                    ),
                                    'v15:MasterTrackingId'=>$MasterTrackingId,
                                    'v15:PackageCount'=>$quantity,
                                    'v15:RequestedPackageLineItems'=>array(
                                        'v15:SequenceNumber'=>$j,
                                        'v15:Weight'=>array(
                                            'v15:Units'=>'KG',
                                            'v15:Value'=>$order->packing_type=='PAK'?$order->weight_label:$out->weight_out
                                        ),
                                        'v15:Dimensions'=>array(
                                            'v15:Length'=>floor($out->length_out),
                                            'v15:Width'=>floor($out->width_out),
                                            'v15:Height'=>floor($out->height_out),
                                            'v15:Units'=>'CM'
                                        ),
                                    )
                                ),
                            ),
                        ),
                    )
                );
        	    $res = Helper_xml::simpleArr2xml($res);
        	    QLog::log('fedexxml:'.$res);
        	    //fedex测试地址
//         	    $url = "https://wsbeta.fedex.com:443/web-services";
        	    //正式地址
        	    $url='https://ws.fedex.com:443/web-services';
        	    $return = Helper_Curl::post($url, $res);
        	    QLog::log('fedex:'.$return);
        	    $return=self::xml_to_array($return);
        	    if(isset($return['ProcessShipmentReply'])){
        	        if($return['ProcessShipmentReply']['HighestSeverity']=="SUCCESS" || $return['ProcessShipmentReply']['HighestSeverity']=="WARNING" || $return['ProcessShipmentReply']['HighestSeverity']=="NOTE"){
        	            $trackingno=$return['ProcessShipmentReply']['CompletedShipmentDetail']['MasterTrackingId']['TrackingNumber'];
        	            if(!$order->tracking_no){
            	            $order->tracking_no=$trackingno;
            	            $order->fedex_tracking_id_type=$return['ProcessShipmentReply']['CompletedShipmentDetail']['MasterTrackingId']['TrackingIdType'];
            	            $order->fedex_form_id=$return['ProcessShipmentReply']['CompletedShipmentDetail']['MasterTrackingId']['FormId'];
            	            $order->save();
        	            }
        	            $dir=Q::ini('upload_tmp_dir');
        	            @Helper_Filesys::mkdirs($dir);
        	            if($j>1){
        	                $trackingno=$return['ProcessShipmentReply']['CompletedShipmentDetail']['CompletedPackageDetails']['TrackingIds']['TrackingNumber'];
        	            }
        	            $target=$dir.DS.$trackingno.'.pdf';
        	            $source=$return['ProcessShipmentReply']['CompletedShipmentDetail']['CompletedPackageDetails']['Label']['Parts']['Image'];
        	            file_put_contents($target,base64_decode($source));
        	            if($j>1){
        	                $filenames=array($dir.DS.$order->tracking_no.'.pdf',$target);
        	                @Helper_PDF::merge($filenames,$dir.DS.$order->tracking_no.'.pdf','file');
        	                @unlink($target);
        	            }
        	            //保存子单信息，用于交货核查
        	            $subcode=new Subcode();
        	            $subcode->order_id=$order->order_id;
        	            $subcode->sub_code=$trackingno;
        	            $subcode->save();
        	        }else {
        	            if($order->tracking_no){
        	                $order->tracking_no=null;
        	                $order->fedex_tracking_id_type='';
        	                $order->fedex_form_id='';
        	                $order->save();
        	                Subcode::meta()->destroyWhere('order_id = ?',$order->order_id);
        	            }
        	            $error='';
        	            if(isset($return['ProcessShipmentReply']['Notifications']['Message'])){
        	                $error=$return['ProcessShipmentReply']['Notifications']['Message'];
        	            }else {
        	                foreach ($return['ProcessShipmentReply']['Notifications'] as $n){
        	                    $error .= $n['Message'];
        	                }
        	            }
            	        $view['errormessage']=$error;
        	         }
        	    }else {
        	        if($order->tracking_no){
        	            $order->tracking_no=null;
        	            $order->fedex_tracking_id_type='';
        	            $order->fedex_form_id='';
        	            $order->save();
        	            Subcode::meta()->destroyWhere('order_id = ?',$order->order_id);
        	        }
        	        $view['errormessage']=$return['detail']['desc'];
        	    }
        	    if(isset($view['errormessage'])){
        	       return $view;
        	    }
        	    $j++;
	        }
	    }
	    Helper_PDF::fedex($dir.DS.$order->tracking_no.'.pdf',$product);
	    $jsonFile=$dir.DS.$order->tracking_no.'.json';
	    $shipper=array(
	        'PersonName'=>$sender_name,
	        'CompanyName'=>$sender_company,
	        'PhoneNumber'=>$sender_phone,
	        'StreetLines'=>$sender_address,
	        'City'=>$sender_area.' DISTRICT '.$sender_city.' CITY '.$sender_zip_code.' '.$sender_country_code,
	    );
	    file_put_contents($jsonFile, json_encode(array(
    	    'invoice'=>$invoice,
    	    'shipper'=>$shipper,
    	    'itemcount'=>$quantity,
    	    'weight'=>$order->weight_label,
    	    'aname'=>trim($order->consignee_name1).' '.$order->consignee_name2,
    	    'name'=>trim($order->consignee_name1).' '.$order->consignee_name2,
    	    'email'=>$order->consignee_email,
    	    'phone'=>$order->consignee_mobile.($order->consignee_telephone?'/'.$order->consignee_telephone:''),
    	    'countrycode'=>$order->consignee_country_code,
    	    'countryname'=>Country::find('code_word_two=?',$order->consignee_country_code)->getOne()->english_name,
    	    'city'=>$order->consignee_city.' '.$state.' '.$order->consignee_postal_code,
    	    'address'=>$order->consignee_street1.' '.$order->consignee_street2,
    	    'tks'=>$order->tracking_no,
    	    'ali_order_no'=>$order->ali_order_no,
    	    'tax_payer_id'=>$order->tax_payer_id
	    )));
	    $view['errormessage']='';
	    $view['account']='FEDEX';
	    return $view;
	}
	
	/*
	 * xml转array
	 */
	static function xml_to_array( $xml )
	{
	    $reg = "/<(\\w+)[^>]*?>([\\x00-\\xFF]*?)<\\/\\1>/";
	    if(preg_match_all($reg, $xml, $matches))
	    {
	        $count = count($matches[0]);
	        $arr = array();
	        for($i = 0; $i < $count; $i++)
	        {
	        $key = $matches[1][$i];
	        $val = self::xml_to_array( $matches[2][$i] );  // 递归
	        if(array_key_exists($key, $arr))
	        {
	        if(is_array($arr[$key]))
	            {
	            if(!array_key_exists(0,$arr[$key]))
	                {
	                $arr[$key] = array($arr[$key]);
	                }
	                }else{
	                $arr[$key] = array($arr[$key]);
	            }
	                $arr[$key][] = $val;
	        }else{
	                $arr[$key] = $val;
	        }
	    }
	        return $arr;
	    }else{
	        return $xml;
	    }
    }
	
	/*
	 * ems账号渠道
	 */
	static function ems($order){
        $url="http://134.175.95.217:8082/createOrderApi.htm";
	    $invoice=array();
	    foreach ($order->product as $p){
             $invoice[]=array(
    	        "invoice_amount"=> $p->product_quantity*$p->declaration_price,
    	        "invoice_pcs"=> $p->product_quantity,
    	        "invoice_title"=> $p->product_name_en_far,
    	        "invoice_weight"=> "",
    	        "item_id"=>"",
    	        "item_transactionid"=> "",
    	        "sku"=> $p->product_name_far,
    	        "sku_code"=> ""
    	    );
	    }
	    $arr=array(
	        "buyerid"=> "",
	        "consignee_address"=> $order->consignee_street1.$order->consignee_street2,
	        "consignee_city"=> $order->consignee_city,
	        "consignee_mobile"=> $order->consignee_mobile,
	        "order_returnsign"=>"Y",
	        "consignee_name"=> $order->consignee_name1,
	        "trade_type"=> "ZYXT",
	        "consignee_postcode"=> $order->consignee_postal_code,
	        "consignee_state"=> $order->consignee_state_region_code ? $order->consignee_state_region_code : $order->consignee_city,
	        "consignee_telephone"=> $order->consignee_telephone ? '/'.$order->consignee_telephone : '',
	        "country"=> $order->consignee_country_code,
			"customer_id"=> "16461",
	        "customer_userid"=> "12921",
	        "orderInvoiceParam"=> $invoice,
	        "order_customerinvoicecode"=> $order->ali_order_no,
	        "product_id"=> "2041",
	        "weight"=> $order->weight_label,
	        "product_imagepath"=> ""
	    );
	    QLog::log(json_encode($arr));
	    $return=Helper_Curl::post($url, 'param='.json_encode($arr));
	    QLog::log($return);
	    $return=json_decode($return,true);
	    if($return['ack']=='true'){
	    	sleep(2);
	        $labelurl='http://134.175.95.217:8089/order/FastRpt/PDF_NEW.aspx?PrintType=A4&order_id=';
	        $dir=Q::ini('upload_tmp_dir');
	        @Helper_Filesys::mkdirs($dir);
	        $target=$dir.DS.$return['tracking_number'].'.pdf';
	        try {
	            $source=file_get_contents($labelurl.$return['order_id']);
	            file_put_contents($target,$source);
	            Helper_PDF::ems($target);
	            $order->tracking_no=$return['tracking_number'];
	            $order->ems_order_id=$return['order_id'];
	            $order->save();
	            //保存子单信息，用于交货核查
	            $subcode=new Subcode();
	            $subcode->order_id=$order->order_id;
	            $subcode->sub_code=$return['tracking_number'];
	            $subcode->save();
	            $view['errormessage']='';
	            $view['account']='EMS';
	        } catch (Exception $e) {
	            $view['errormessage']="EMS获取面单失败";
	        }
	    }else {
	        $view['errormessage']=urldecode($return['message']);
	    }
	    return $view;
	}
	/*
	 * eub账号渠道
	 */
	static function eub($order){
	    $url="http://134.175.95.217:8082/createOrderApi.htm";
	    $invoice=array();
	    foreach ($order->product as $p){
	        $invoice[]=array(
	            "invoice_amount"=> $p->product_quantity*$p->declaration_price,
	            "invoice_pcs"=> $p->product_quantity,
	            "invoice_title"=> $p->product_name_en_far,
	            "invoice_weight"=> "",
	            "item_id"=>"",
	            "item_transactionid"=> "",
	            "sku"=> $p->product_name_far,
	            "sku_code"=> ""
	        );
	    }
	    $arr=array(
	        "buyerid"=> "",
	        "consignee_address"=> $order->consignee_street1.$order->consignee_street2,
	        "consignee_city"=> $order->consignee_city,
	        "consignee_mobile"=> $order->consignee_mobile,
	        "order_returnsign"=>"Y",
	        "consignee_name"=> $order->consignee_name1,
	        "trade_type"=> "ZYXT",
	        "consignee_postcode"=> $order->consignee_postal_code,
	        "consignee_state"=> $order->consignee_state_region_code ? $order->consignee_state_region_code : $order->consignee_city,
	        "consignee_telephone"=> $order->consignee_telephone ? '/'.$order->consignee_telephone : '',
	        "country"=> $order->consignee_country_code,
	        "customer_id"=> "16461",
	        "customer_userid"=> "12921",
	        "orderInvoiceParam"=> $invoice,
	        "order_customerinvoicecode"=> $order->ali_order_no,
	        "product_id"=> "2081",
	        "weight"=> $order->weight_label,
	        "product_imagepath"=> ""
	    );
	    QLog::log(json_encode($arr));
	    $return=Helper_Curl::post($url, 'param='.json_encode($arr));
	    QLog::log($return);
	    $log=new OrderLog(array(
	        'order_id'=>$order->order_id,
	        'staff_id'=>MyApp::currentUser('staff_id'),
	        'staff_name'=>MyApp::currentUser('staff_name'),
	        'comment'=>'eub订单报文：'.json_encode($arr)
	    ));
	    $log->save();
	    $return=json_decode($return,true);
	    if($return['ack']=='true'){
	        sleep(2);
// 	        $labelurl='http://134.175.95.217:8089/order/FastRpt/PDF_NEW.aspx?PrintType=A4&order_id=';
	        $labelurl='http://134.175.95.217:8089/order/FastRpt/PDF_NEW.aspx?PrintType=lab10_10&order_id=';
	        $dir=Q::ini('upload_tmp_dir');
	        @Helper_Filesys::mkdirs($dir);
	        $target=$dir.DS.$return['tracking_number'].'.pdf';
	        try {
	            $source=file_get_contents($labelurl.$return['order_id']);
	            file_put_contents($target,$source);
	            $order->tracking_no=$return['tracking_number'];
	            $order->ems_order_id=$return['order_id'];
	            $order->save();
	            //保存子单信息，用于交货核查
	            $subcode=new Subcode();
	            $subcode->order_id=$order->order_id;
	            $subcode->sub_code=$return['tracking_number'];
	            $subcode->save();
	            $view['errormessage']='';
	            $view['account']='EUB';
	        } catch (Exception $e) {
	            $view['errormessage']="EUB获取面单失败";
	        }
	    }else {
	        $view['errormessage']=urldecode($return['message']);
	    }
	    return $view;
	}
	/**
	 * FSP账号渠道
	 */
	static function fsp($order,$channel_id){
	    set_time_limit(0);
	    $out=Faroutpackage::find('order_id = ?',$order->order_id)->getSum('quantity_out');
	    if($out > 1){
	        $view['errormessage']='该产品只支持一票一件';
	        return $view;
	    }
	    $state='';
	    //判断收件国家是否是US
	    if($order->consignee_country_code=='US'){
	        //将收件人州转为二字码
	        $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$order->consignee_state_region_code)))->getOne();
	        if($states->isNewRecord()){
	            $view['errormessage']=$order->consignee_country_code.'中不存在'.$order->consignee_state_region_code.'州/省';
	            return $view;
	        }else{
	            $state=$states->province_code_two;
	        }
	    }else {
	        $view['errormessage']='该产品只支持收件国[US]';
	        return $view;
	    }
	    $sender_name=$order->sender_name1.($order->sender_name2?' '.$order->sender_name2:'');
	    $sender_phone=$order->sender_mobile.($order->sender_telephone?'/'.$order->sender_telephone:'');
	    $sender_city=$order->sender_city;
	    $sender_area='';
	    $sender_address=$order->sender_street1.($order->sender_street2?' '.$order->sender_street2:'');
	    $sender_zip_code=$order->sender_postal_code;
	    $sender_country_code=$order->sender_country_code;
	    $channel=Channel::find('channel_id = ?',$channel_id)->getOne();
	    if($channel->sender_id>0){
	        $sender=Sender::find('sender_id = ?',$channel->sender_id)->getOne();
	        if(!$sender->isNewRecord()){
	            $sender_name=$sender->sender_name.($sender->sender_company?' '.$sender->sender_company:'');
	            $sender_phone=$sender->sender_phone;
	            $sender_city=$sender->sender_city;
	            $sender_address=$sender->sender_address;
	            $sender_zip_code=$sender->sender_zip_code;
	            $sender_country_code='CN';
	        }
	    }
	    $product=Orderproduct::find('order_id = ?',$order->order_id)->getAll();
	    $token="2rcBrK5k5QJFoejbaCs0";
	    //$url='http://api.fullspeedparcel.com/?c=apiTms&a=createOrders';
	    $url='http://api.fullspeedparcel.com/?c=apiTms&a=createOrders';
        $brr=array();
        foreach ($product as $p){
        $sku=date('Ymd').rand('100000','999999');
        $brr[]=array(
    	        "proName"=>$p->product_name_en_far,
    	        "proNum"=>$p->product_quantity,
    	        "proPrice"=>$p->declaration_price,
    	        "proCnName"=>$p->product_name_far,
                "sku"=>$sku
    	    );
        }
	    $arr=array();
	    $arr['token']=$token;
	    $arr['timestamp']=time();
	    $arr['shippingCode']='UPS-GROUND';
	    if(in_array($order->department_id, array('7','8','23'))){
	        $arr['warehouseId']='92';
	    }else {
	        $arr['warehouseId']='44';
	    }
	    $arr['needPdf']='1';
	    $arr['orderNum']=$order->ali_order_no;
	    $arr['weight']=$order->weight_label;
	    $arr['realname']=$order->consignee_name1.($order->consignee_name2?' '.$order->consignee_name2:'');
	    $arr['telephone']=$order->consignee_mobile;
	    $arr['countryCode']=$order->consignee_country_code;
	    $arr['province']=$state;
	    $arr['city']=$order->consignee_city;
	    $arr['area']='';
	    $arr['address']=$order->consignee_street1;
	    $arr['name2']=$order->consignee_street2;
	    $arr['postcode']=$order->consignee_postal_code;
	    $arr['sendName']=$sender_name;
	    $arr['sendPhone']=$sender_phone;
	    $arr['senderCountryCode']=$sender_country_code;
	    $arr['senderCity']=$sender_city;
	    $arr['sendAddress']=$sender_address;
	    $arr['sendStreetNum']='';
	    $arr['sendZipcode']=$sender_zip_code;
	    $arr['proDesc']=json_encode($brr);
	    QLog::log('fsp订单数据：'.json_encode($arr));
	    $postData=self::getPostData($arr);
	    $log=new OrderLog(array(
	        'order_id'=>$order->order_id,
	        'staff_id'=>MyApp::currentUser('staff_id'),
	        'staff_name'=>MyApp::currentUser('staff_name'),
	        'comment'=>'fsp订单报文：'.$postData
	    ));
	    $log->save();
	    Helper_Curl::$connecttimeout='120';
	    Helper_Curl::$timeout='120';
	    $return=Helper_Curl::post($url, $postData);
	    QLog::log('fsp下单回执：'.$return);
	    $return=json_decode($return,true);
	    if($return['code']=='0' || $return['code']=='-1011'){
	        $params=array(
	            'token'=>$token,
	            'timestamp'=>time(),
	            'needPdf'=>1,
	            'orderNum'=>$order->ali_order_no
	        );
	        $r=Helper_Curl::post('http://api.fullspeedparcel.com/?c=apiTms&a=getShippingInfo',self::getPostData($params));
	        QLog::log('fsp获取面单回执：'.$r);
	        $r=json_decode($r,true);
	        if($r['code']=='0'){
	            //推送fsp长宽高重量
	            $farout = Faroutpackage::find('order_id = ?',$order->order_id)->getOne();
	            $key="ocR6fZSESVR1T29Xly6o";
	            $arr_weight=array();
	            $arr_weight['token']="EOmn3QvLCrq1nCcgl76J";
	            $arr_weight['timestamp']=time();
	            $arr_weight['shippingNum']=$r['data']['shippingNum'];
	            $arr_weight['weight']=$farout->weight_out;
	            $arr_weight['length']=floor($farout->length_out);
	            $arr_weight['width']=floor($farout->width_out);
	            $arr_weight['height']=floor($farout->height_out);
	            $postData=self::getPostData($arr_weight,$key);
	            $return_weight=Helper_Curl::post('http://api.fullspeedparcel.com/?c=apiTms&a=stockWeight', $postData);
	            $return_weight=json_decode($return_weight,true);
	            $log_weight = new OrderLog();
	            $log_weight->order_id = $order->order_id;
	            $log_weight->staff_id = MyApp::currentUser('staff_id');
	            $log_weight->staff_name = MyApp::currentUser('staff_name');
	            $log_weight->comment = '推送fsp长：'.$farout->length_out.'，宽：'.$farout->width_out.'，高：'.$farout->height_out.
	                                   '，重量：'.$farout->weight_out.'，返回结果：'.$return_weight['message'];
	            $log_weight->save();
	            if($return_weight['code'] != '0'){
	               $view['errormessage']='推送fsp长：'.$farout->length_out.'，宽：'.$farout->width_out.'，高：'.$farout->height_out.
	                                     '，重量：'.$farout->weight_out.'，返回结果：'.$return_weight['message'];
	               return $view;
	            }
	            $order->ems_order_id=$r['data']['serialNum'];
	            $order->tracking_no=$r['data']['shippingNum'];
	            $order->save();
	            //保存子单信息，用于交货核查
	            $subcode=new Subcode();
	            $subcode->order_id=$order->order_id;
	            $subcode->sub_code=$r['data']['shippingNum'];
	            $subcode->save();
	            $dir=Q::ini('upload_tmp_dir');
	            @Helper_Filesys::mkdirs($dir);
	            $target=$dir.DS.$r['data']['shippingNum'].'.pdf';
	            file_put_contents($target,base64_decode($r['data']['shippingInfo']));
// 	            if(in_array(MyApp::currentUser('department_id'), array('7','8','23'))){
// 	                Helper_PDF::fsp($target);
// 	            }
	            $view['errormessage']='';
	            $view['account']='US-FY';
            }else {
	            $view['errormessage']=$r['message'].($r['code']=='-1019'?'请稍后重试':'');
	        }
	    }else {
	        $view['errormessage']=$return['message'];
	    }
	    return $view;
	}
	
	static function getPostData($postData,$key="AJsFkok2ty31TaXPOXTD")
	{
	    ksort($postData); //除sign参数外， 数组按字母排序
	    $strPara = http_build_query($postData);
	    $sign = md5($strPara.$key);//签名
	    $postData['sign'] = $sign;
	    return http_build_query($postData);
	}
	/**
	 * HLT账号渠道
	 */
	static function hlt($order,$account,$channel_id){
	    set_time_limit(0);
	    $state='';
	    //判断收件国家是否是US
	    if($order->consignee_country_code=='US' || $order->consignee_country_code=='CA'){
	        //将收件人州转为二字码
	        $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$order->consignee_state_region_code)))->getOne();
	        if($states->isNewRecord()){
	            $view['errormessage']=$order->consignee_country_code.'中不存在'.$order->consignee_state_region_code.'州/省';
	            return $view;
	        }else{
	            $state=$states->province_code_two;
	        }
	    }
	    $farout=Faroutpackage::find('order_id = ?',$order->order_id)->getAll();
	    $weight='';
	    foreach ($farout as $f){
	        $weight +=$f->quantity_out*$f->weight_out;
	    }
	    $packing_type='W';
	    $product=Orderproduct::find('order_id = ?',$order->order_id)->getAll();
	    $product_quantity=Orderproduct::find('order_id = ?',$order->order_id)->getSum('product_quantity');
	    $arr=array();
	    $invoice=array('items'=>array(),'total'=>'');
	    foreach ($product as $p){
	        $arr[]=array(
                'cnName'=>$p->product_name_far,
	            'customsNo'=>'',
	            'name'=>$p->product_name_en_far,
	            'netWeight'=>sprintf('%.3f',$weight/$product_quantity*$p->product_quantity),
	            'pieces'=>$p->product_quantity,
	            'productMemo'=>'',
	            'unitPrice'=>$p->declaration_price,
	        );
	        $invoice['items'][]=array(
	            'name'=>$p->product_name_en_far,
	            'quantity'=>$p->product_quantity,
	            'hscode'=>$p->hs_code_far,
	            'price'=>$p->declaration_price,
	            'itotal'=>round($p->product_quantity*$p->declaration_price,2),
	            'weight'=>$weight/$product_quantity*$p->product_quantity,
	            'country'=>'CN'
	        );
	        $invoice['total']+=round($p->product_quantity*$p->declaration_price,2);
	    }
	    $quantity=Faroutpackage::find('order_id = ?',$order->order_id)->getSum('quantity_out');
	    
	    $sender_name=$order->sender_name1;
	    $sender_company=$order->sender_name2;
	    $sender_phone=$order->sender_mobile.($order->sender_telephone?'/'.$order->sender_telephone:'');
	    $sender_province=$order->sender_state_region_code;
	    $sender_city=$order->sender_city;
	    $sender_area='';
	    $sender_address=$order->sender_street1.($order->sender_street2?' '.$order->sender_street2:'');
	    $sender_zip_code=$order->sender_postal_code;
	    $sender_email=$order->sender_email;
	    $sender_country_code=$order->sender_country_code;
	    $channel=Channel::find('channel_id = ?',$channel_id)->getOne();
	    if($channel->sender_id>0){
	        $sender=Sender::find('sender_id = ?',$channel->sender_id)->getOne();
	        if(!$sender->isNewRecord()){
	            $sender_name=$sender->sender_name;
	            $sender_company=$sender->sender_company;
	            $sender_phone=$sender->sender_phone;
	            $sender_province=$sender->sender_province;
	            $sender_city=$sender->sender_city;
	            $sender_area=$sender->sender_area;
	            $sender_address=$sender->sender_address;
	            $sender_zip_code=$sender->sender_zip_code;
	            $sender_email=$sender->sender_email;
	            $sender_country_code=$sender->sender_country;
	        }
	    }
        $array=array(
	        'userToken'=>'a43fb2769566442291622d8c6e6d8b5c',
	        'createOrderRequest'=>array(
	            'cargoCode'=>$packing_type,
	            'city'=>$order->consignee_city,
	            'consigneeCompanyName'=>$order->consignee_name2,
	            'consigneeMobile'=>$order->consignee_telephone?$order->consignee_telephone:$order->consignee_mobile,
	            'consigneeName'=>$order->consignee_name1,
	            'consigneePostcode'=>$order->consignee_postal_code,
	            'consigneeStreetNo'=>'',
	            'consigneeTelephone'=>$order->consignee_mobile,
	            'declareItems'=>$arr,
	            'destinationCountryCode'=>$order->consignee_country_code,
	            'goodsCategory'=>'O',
	            'goodsDescription'=>'',
	            'height'=>'',
	            'insured'=>'N',
	            'length'=>'',
	            'memo'=>'',
	            'orderNo'=>$order->ali_order_no,
	            'originCountryCode'=>$sender_country_code,
	            'pieces'=>$quantity,
	            'platformNo'=>'',
	            'province'=>$state,
	            'shipperAddress'=>$sender_address,
	            'shipperCity'=>$sender_city,
	            'shipperCompanyName'=>$sender_company,
	            'shipperMobile'=>$sender_phone,
	            'shipperName'=>$sender_name,
	            'shipperPostcode'=>$sender_zip_code,
	            'shipperProvince'=>$sender_province,
	            'shipperStreet'=>'',
	            'shipperStreetNo'=>'',
	            'shipperTelephone'=>'',
	            'street'=>$order->consignee_street1.($order->consignee_street2?' '.$order->consignee_street2:''),
	            'trackingNo'=>'',
	            'transportWayCode'=>$account,
	            'weight'=>$weight,
	            'width'=>'',
	        ),
	    );
        $log=new OrderLog(array(
            'order_id'=>$order->order_id,
            'staff_id'=>MyApp::currentUser('staff_id'),
            'staff_name'=>MyApp::currentUser('staff_name'),
            'comment'=>'麦链订单报文：'.print_r($array,true)
        ));
        $log->save();
        QLog::log(json_encode($array));
	    $url_order="http://tms.mailiancn.com:8086/xms/services/order?wsdl";
	    $client=new SoapClient($url_order, array ('encoding' => 'UTF-8' ));
	    $str=$client->__soapCall('createAndAuditOrder', $array);
	    $str=get_object_vars($str);
	    QLog::log('hlt回执：'.json_encode($str));
	    if(isset($str['error'])){
	        $error=get_object_vars($str['error']);
	        $view['errormessage']=$channel->channel_name.":".$error['errorInfo'];
	    }else {
	        $trackingno=$str['trackingNo'];
	        $oid=$str['id'];
	        $url_label="http://tms.mailiancn.com:8086/xms/client/order_online!print.action?userToken=a43fb2769566442291622d8c6e6d8b5c&oid=".$oid."&printSelect=3&pageSizeCode=3&showCnoBarcode=0";
	        if($account=='SH-DHL-MX'){
                $r=file_get_contents($url_label);
            }else {
	            $r=Helper_Curl::get($url_label);
	        }
            QLog::log('hlt面单回执：'.$r);
	        if($r){
	            $dir=Q::ini('upload_tmp_dir');
    	        @Helper_Filesys::mkdirs($dir);
    	        $target=$dir.DS.$trackingno.'.pdf';
    	        file_put_contents($target,$r);
    	    }else {
    	        $view['errormessage']='获取面单失败';
    	        return $view;
    	    }
    	    $order->tracking_no=$trackingno;
    	    $order->ems_order_id=$oid;
    	    $order->save();
    	    //保存子单信息，用于交货核查
    	    $subcode=new Subcode();
    	    $subcode->order_id=$order->order_id;
    	    $subcode->sub_code=$trackingno;
    	    $subcode->save();
    	    if($account=='ML0029' || $account=='ML0715'){
    	        $jsonFile=$dir.DS.$trackingno.'.json';
    	        $shipper=array(
    	            'aname'=>$sender_name,
    	            'name'=>$sender_company,
    	            'address'=>$sender_address.' '.$sender_city.' '.$sender_zip_code,
    	            'country'=>Country::find('code_word_two=?',$sender_country_code)->getOne()->english_name,
    	            'phone'=>$sender_phone
    	        );
    	        file_put_contents($jsonFile, json_encode(array(
        	        'invoice'=>$invoice,
        	        'shipper'=>$shipper,
        	        'itemcount'=>$quantity,
        	        'total_weight'=>$weight,
        	        'aname'=>trim($order->consignee_name1),
        	        'name'=>trim($order->consignee_name2)?trim($order->consignee_name2):trim($order->consignee_name1),
        	        'email'=>$order->consignee_email,
        	        'phone'=>$order->consignee_mobile,
        	        'countrycode'=>$order->consignee_country_code,
        	        'countryname'=>Country::find('code_word_two=?',$order->consignee_country_code)->getOne()->english_name,
        	        'state'=>$state,
        	        'city'=>$order->consignee_city,
        	        'postcode'=>$order->consignee_postal_code,
        	        'address'=>$order->consignee_street1.' '.$order->consignee_street2,
        	        'tks'=>$trackingno,
        	        'ali_order_no'=>$order->ali_order_no,
        	        'tax_payer_id'=>$order->tax_payer_id,
        	        'date'=>date("Y/m/d")
    	        )));
    	    }
	        $view['errormessage']='';
	        $view['account']=$account;
	    }
	    return $view;
	}
	/**
	 * UPS账号渠道
	 */
	static function ups($order,$account)
	{
	    // invoice
	    $invoice=array('items'=>array(),'total'=>'');
	    $order_product=Orderproduct::find('order_id=?',$order->order_id)->getOne();
	    $desc=$order_product->product_name_en;
	    foreach ($order->product as $v){
            $invoice['items'][]=array(
                'quantity'=>$v->product_quantity,
                'unit'=>$v->product_unit,
                'name'=>$v->product_name_en_far,
                'hscode'=>$v->hs_code_far,
                'country'=>'CN',
                'price'=>$v->declaration_price,
                'itotal'=>round($v->product_quantity*$v->declaration_price,2).' '.$order->currency_code,
                'material'=>$v->material_use,
            );
            $invoice['total']+=round($v->product_quantity*$v->declaration_price,2);
	    }
	    $package=array();
	    // 参考编码
	    $refno=array();
	    $ref1='';
	    //台州富轩账号要加一个订单号放到ref1上
	    if($account->account=='79YE39'){
	    	$ref1=Helper_Curl::get1('http://kuaijian.far800.com/index.php?controller=cron&action=gettzrefno');
	    	$refno[]=array(
	    		'Code'=>'IK',
				'Value'=>$ref1
	    	);
	    }
	    $ref2='';
	    //富轩账号要加一个订单号
	    if($account->account=='4FV328'){
	        $ref2=Helper_Curl::get1('http://kuaijian.far800.com/index.php?controller=cron&action=getrefno');
	        $refno[]=array(
	            'Code'=>'PO',
	            'Value'=>$ref2
	        );
	    }
	    $far_package_count=Faroutpackage::find('order_id=?',$order->order_id)->sum('quantity_out','sum_quantity')->getAll();
	    //获取包裹类型
        $package_type=$order->packing_type;
	    $package_code=($package_type=='DOC')?'04':'02';
	    //一票多件
	    $total_weight=$order->weight_label;
	    for($i=0;$i<$far_package_count['sum_quantity'] ;$i++){
	        $package[]= array(
	            'Description' => trim($desc,';'),
	            'PackageWeight' => array(
	                'UnitOfMeasurement' => array(
	                    'Code' => 'KGS',
	                    'Description' => 'Kilograms'
	                ),
	                'Weight' => strval(floor($total_weight/$far_package_count['sum_quantity']*10000)/10000),
	            ),
	            'Packaging' => array(
	                'Code' => $package_code,
	            ),
	            'ReferenceNumber'=>$refno,
	        );
	    }
	    // 付款方式
	    $shipmentCharge = array();
        // 三方
	    if ($account->tp_account){
			$shipmentCharge[]= array(
				 'Type'=>'01',
				 'BillThirdParty'=>array(
					 'AccountNumber' => $account->tp_account,
					 'Address'=>array(
					 	'PostalCode'=>$account->tp_postalcode,
					 	'CountryCode'=>$account->tp_countrycode
					 )
				 )
			 );
	    }else {
			// 预付
			$shipmentCharge[]=array(
				'BillShipper' => array(
					'AccountNumber' => $account->account
				),
				'Type' => '01'
			);
		}
        $state='';
        //判断收件国家是否是US和CA
        if($order->consignee_country_code=='US' || $order->consignee_country_code=='CA'){
            //将收件人州转为二字码
            $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$order->consignee_state_region_code)))->getOne();
            if($states->isNewRecord()){
                $view['errormessage']=$order->consignee_country_code.'中不存在'.$order->consignee_state_region_code.'州';
                return $view;
            }else{
                $state=$states->province_code_two;
            }
        }
        //判断收件人税号是否存在
        $vat='';
        if($order->tax_payer_id){
            $vat=' VAT:'.$order->tax_payer_id;
        }
	    $address=self::splitAddress($order->consignee_street1.' '.$order->consignee_street2.$vat);
	    if(count($address)>3){
	       $view['errormessage']='收件人地址超长';
	       return $view;
	    }
	    $data = array(
	        'UPSSecurity' => array(
	            'ServiceAccessToken' => array(
	                'AccessLicenseNumber' => $account->license
	            ),
	            'UsernameToken' => array(
	                'Password' => $account->pwd,
	                'Username' => $account->userid
	            )
	        ),
	        'ShipmentRequest' => array(
	            'Request' => array(
	                'RequestOption' => 'nonvalidate',
	                'TransactionReference' => array(
	                    'CustomerContext' => 'iBayTest'
	                )
	            ),
	            'Shipment' => array(
	                'Description' => trim($desc,';'),
	                'Package' =>$package,
	                'PaymentInformation' => array(
	                    //预付
	                    'ShipmentCharge' =>$shipmentCharge,
	                ),
	                'Service' => array(
	                    'Code' => '65',
	                    'Description' => '2',
	                ),
	                'Shipper' => array(
	                    'Address' => array(
	                        'AddressLine' => self::splitAddress($account->address),
	                        'City' => $account->city,
	                        'CountryCode' => $account->countrycode,
	                        'PostalCode' => $account->postcode,
	                        'StateProvinceCode' => $account->state
	                    ),
	                    'AttentionName' => $account->aname,
	                    'Name' => $account->name,
	                    'Phone' => array(
	                        'Number' => $account->phone
	                    ),
	                    'ShipperNumber' => $account->account
	                ),
	                'ShipTo' => array(
	                    'Address' => array(
	                        'AddressLine' => $address,
	                        'City' => $order->consignee_city,
	                        'CountryCode' => $order->consignee_country_code,
	                        'PostalCode' => $order->consignee_postal_code,
	                        'StateProvinceCode' => $state
	                    ),
	                    'AttentionName' => trim($order->consignee_name1),
	                    'Name' => trim($order->consignee_name2)?trim($order->consignee_name2):trim($order->consignee_name1),
	                    'EMailAddress'=>$order->consignee_email,
	                    'Phone' => array(
	                        'Number' => $order->consignee_mobile
	                    )
	                ),
	                'ShipmentRatingOptions' => array(
	                    'NegotiatedRatesIndicator' => '0'
	                )
	            ),
	            'LabelSpecification' => array(
	                'LabelImageFormat' => array(
	                    'Code' => 'GIF'
	                )
	            )
	        )
	    );
	    if ($state==''){
	        unset($data['ShipmentRequest']['Shipment']['ShipTo']['Address']['StateProvinceCode']);
	    }
	    if ($package_code=='04'){
	        $data['ShipmentRequest']['Shipment']['DocumentsOnlyIndicator']= (object)array();
	    }
	    QLog::log($order->ali_order_no.json_encode($data));
// 	    $endpoint='https://wwwcie.ups.com';
	    $endpoint='https://onlinetools.ups.com';
	    set_time_limit(400);
	    Helper_Curl::$connecttimeout=300;
	    Helper_Curl::$timeout=300;
	    $r=Helper_Curl::post($endpoint.'/rest/Ship', json_encode($data),array(
	        'Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept',
	        'Access-Control-Allow-Methods: POST',
	        'Access-Control-Allow-Origin: *',
	        'Content-Type: application/json'
	    ));
	    // 		echo $r;
	    $r=json_decode($r,true);
	    $dir=Q::ini('upload_tmp_dir');
	    @Helper_Filesys::mkdirs($dir);
	    $tks=array();
	    if (isset($r['ShipmentResponse']['Response']['ResponseStatus']['Code']) && $r['ShipmentResponse']['Response']['ResponseStatus']['Code']==1){
	        $pkg=$r['ShipmentResponse']['ShipmentResults']['PackageResults'];
	        if (isset($pkg['TrackingNumber'])){
	            $pkg=array($pkg);
	        }
	        $subcode1=array('waybillcode'=>$pkg[0]['TrackingNumber']);
	        $subcode2=array('waybillcode'=>$pkg[0]['TrackingNumber']);
	        for ($n=1;$n<11;$n++){
	            $subcode1['info'][$n]=array(
	                'subcode'=>isset($pkg[$n]['TrackingNumber'])?($n+1).'. '.$pkg[$n]['TrackingNumber']:''
	            );
	        }
	        if(count($pkg)>11){
	            for ($m=11;$m<count($pkg);$m++){
	                $subcode2['info'][]=array(
	                    'subcode'=>($m+1).'. '.$pkg[$m]['TrackingNumber']
	                );
	            }
	        }
	        //删除原有的子单
	        Subcode::find('order_id=?',$order->order_id)->getAll()->destroy();
	        foreach ($pkg as $tr){
	            $tks[]=$tr['TrackingNumber'];
	            $target=$dir.DS.$tr['TrackingNumber'].'.pdf';
	            $source=$dir.DS.$tr['TrackingNumber'].'.gif';
	            file_put_contents($source, base64_decode($tr['ShippingLabel']['GraphicImage']));
	            Helper_PDF::upslabel($source,$target);
	            //存入sub_code表中
	            $order_subcode=new Subcode();
	            $order_subcode->changeProps(array(
	                'order_id'=>$order->order_id,
	                'sub_code'=>$tr['TrackingNumber']
	            ));
	            $order_subcode->save();
	        }
	        foreach ($tks as $fname){
	            $filenames []=$dir.DS.$fname.'.pdf';
	        }
	        $watermarkpath=array('chapter1'=>_INDEX_DIR_.'/public/img/chapter1.gif','chapter2'=>_INDEX_DIR_.'/public/img/chapter2.gif');
	        if($account->account=='73X574' || $account->account=='5315WW' || $account->account=='0032F1' || $account->account=='79YE39' || $account->account=='5119E4' || $account->account=='3X5001'){
	            $watermarkpath=array();
	        }
	        @Helper_PDF::merge($filenames,$dir.DS.$tks[0].'.pdf','file',$watermarkpath);
	        //将tracking_number存入order中
	        $order->tracking_no=$tks[0];
	        $order->save();
	        $jsonFile=$dir.DS.$tks[0].'.json';
	        // ups copy
            $poc_line1='SDT(F/D)';
            if ($account->tp_account){
                $tp_country=($account->tp_countrycode=='KR')?'KOREA,SOUTH':$account->tp_countrycode;
                $poc_line2="Bill Transportation to Third Party\r\nBill Transportation Charges To:{$account->tp_account}\r\nCompany Name:{$account->tp_cname}\r\nCountry/Territory:{$tp_country}\r\n";
                $poc_line2_cn="第三方支付运输费用\r\n运输费用付款人：{$account->tp_account}\r\n公司名称：{$account->tp_cname}\r\n国家/地区：{$tp_country}\r\n";
            }else {
                $poc_line2='Bill Transportation to Shipper '.$account->account."\r\n";
                $poc_line2_cn="发件人支付运输费用".$account->account."\r\n";
            }
            $poc_line3='Bill Duty and Tax to Receiver';
            $poc_line3_cn="收件人支付关税和税款";
            if($account->account=='4FV328'){
                $specialInstruction='';
                $weight_table='';
            }else{
                if($order->packing_type=='BOX'){
                    $specialInstruction='';
                    //判断包裹数量
                    if($far_package_count['sum_quantity']<=5){
                        $weight_table='';
                        $far_packages=Faroutpackage::find('order_id=?',$order->order_id)->getAll();
                        foreach ($far_packages as $value){
                            $weight_table.=floor($value->length_out).'*'.floor($value->width_out).'*'.floor($value->height_out).'*'.$value->quantity_out.'\r\n';
                        }
                    }else{
                        $weight_table='详见重量对比表';
                    }
                }else{
                    $specialInstruction='PAK';
                    $weight_table='';
                }
            }
            //判断是否是高价
            $hv='';
            if($order->declaration_type=='DL' || $order->total_amount > 700 || $order->weight_actual_in > 70){
                $hv='HV';
            }
            //判断电子章
            if($account->account!='73X574' && $account->account!='5315WW' && $account->account!='0032F1' && $account->account!='5119E4' && $account->account!='79YE39' && $account->account!='3X5001'){
                $chapter1='http://'.$_SERVER["HTTP_HOST"].'/public/img/chapter1.gif';
                $chapter2='http://'.$_SERVER["HTTP_HOST"].'/public/img/chapter2.gif';
            }else{
                $chapter1='';
                $chapter2='';
            }
	        file_put_contents($jsonFile, json_encode(array(
	            'invoice'=>$invoice,
	            'shipmentid'=>self::creatShipid($tks[0]),
	            'shipper'=>$account->toArray(),
	            'servicecode'=>'65',
	            'service'=>'1P',
	            'service_name'=>'EXPRESS SAVER',
	            'documentOnly'=>$package_code=='04' ?'[X] DOCUMENTS ONLY':'',
	            'specialInstruction'=>$specialInstruction,
	            'weight_table'=>$weight_table,
	            'hv'=>$hv,
	            'chapter1'=>$chapter1,
	            'chapter2'=>$chapter2,
	            'taxddp'=>'1',
	            'itemcount'=>$far_package_count['sum_quantity'],
	            'dfu'=>'',
	            'weight'=>$total_weight,
	            'total_weight'=>$total_weight,
	            'description'=>trim($desc,';'),
	            'aname'=>trim($order->consignee_name1),
	            'name'=>trim($order->consignee_name2)?trim($order->consignee_name2):trim($order->consignee_name1),
	            'email'=>$order->consignee_email,
	            'phone'=>$order->consignee_mobile,
	            'countrycode'=>$order->consignee_country_code,
	            'countryname'=>Country::find('code_word_two=?',$order->consignee_country_code)->getOne()->english_name,
	            'state'=>$state,
	            'city'=>$order->consignee_city,
	            'postcode'=>$order->consignee_postal_code,
	            'ref1'=>$ref1,
	            'ref2'=>$ref2,
	            'address'=>$order->consignee_street1.' '.$order->consignee_street2.$vat,
	            'freight'=>'0',
	            'tks'=>$tks[0],
	            'ali_order_no'=>$order->ali_order_no,
	            'subcode1'=>$subcode1,
	            'subcode2'=>$subcode2,
	            'poc_line1'=>'[X] '.$poc_line1,
	            'poc_line2'=>'[X] '.$poc_line2.'[X] '.$poc_line3,
	            'poc_line3'=>'',
	            'poc_line2_cn'=>'[X] '.$poc_line2_cn.'[X] '.$poc_line3_cn,
	            'shipmentCharge'=>$r['ShipmentResponse']['ShipmentResults']['ShipmentCharges'],
	        )));
	        $view['errormessage']='';
	        $view['account']='UPS';
	    }else {
	        $view['errormessage']=isset($r['Fault']['detail']['Errors']['ErrorDetail']['PrimaryErrorCode']['Description'])?$r['Fault']['detail']['Errors']['ErrorDetail']['PrimaryErrorCode']['Description']:$r;
	    }
	    return $view;
	}
    /**
     * Kingspeed
     */
    static function kingspeed($order,$channel_id){
        set_time_limit(0);
        $out=Faroutpackage::find('order_id = ?',$order->order_id)->getSum('quantity_out');
        if($out > 1){
            $view['errormessage']='该产品只支持一票一件';
            return $view;
        }
        $state='';
        //判断收件国家是否是US
        if($order->consignee_country_code=='US'){
            //将收件人州转为二字码
            $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$order->consignee_state_region_code)))->getOne();
            if($states->isNewRecord()){
                $view['errormessage']=$order->consignee_country_code.'中不存在'.$order->consignee_state_region_code.'州/省';
                return $view;
            }else{
                $state=$states->province_code_two;
            }
        }else {
            $view['errormessage']='该产品只支持收件国[US]';
            return $view;
        }
        $faroutpackage = Faroutpackage::find('order_id = ?',$order->order_id)->getOne();
        $wares = Orderproduct::find('order_id = ?',$order->order_id)->getAll();
        $sender_name=$order->sender_name1;
        $sender_phone=$order->sender_mobile;
        $sender_city=$order->sender_city;
        $sender_area='';
        $sender_address=$order->sender_street1.($order->sender_street2?' '.$order->sender_street2:'');
        $sender_zip_code=$order->sender_postal_code;
        $sender_country_code=$order->sender_country_code;
        $channel=Channel::find('channel_id = ?',$channel_id)->getOne();
        if($channel->sender_id>0){
            $sender=Sender::find('sender_id = ?',$channel->sender_id)->getOne();
            if(!$sender->isNewRecord()){
                $sender_name=$sender->sender_name;
                $sender_phone=$sender->sender_phone;
                $sender_city=$sender->sender_city;
                $sender_address=$sender->sender_address;
                $sender_zip_code=$sender->sender_zip_code;
                $sender_country_code='CN';
            }
        }
	    $shipper = array(
	        'name' => $sender_name,
	        'countryCode' => $order->sender_country_code,
	        'stateProvince' => $order->sender_state_region_code,
	        'city' => $sender_city,
	        'address' => $sender_address,
	        'postcode' => $order->sender_postal_code,
	        'phone' => $sender_phone
	    );
	    $consignee = array(
	        'name'=>$order->consignee_name1,
	        'countryCode'=>$order->consignee_country_code,
	        'stateProvince'=>$state,
	        'city'=>$order->consignee_city,
	        'address'=>$order->consignee_street1.' '.$order->consignee_street2,
	        'postcode'=>$order->consignee_postal_code,
	        'phone'=>$order->consignee_mobile
	    );
    	    $product=array();
    	    foreach($wares as $ware){
        	    $product[]=array(
        	        'declareNameCn'=>$ware->product_name_far,
        	        'declareNameEn'=>$ware->product_name_en_far,
        	        'declareValue'=>$ware->declaration_price,
        	        'quantity'=>$ware->product_quantity
        	    );
    	    }
    	$boxes = array();
    	$boxes[]=array(
    	    'code' => '1',
    	    'weight' => $faroutpackage->weight_out,
    	    "width" => $faroutpackage->width_out,
    	    "length" => $faroutpackage->length_out,
    	    "height" => $faroutpackage->height_out,
    	    'declareProducts' => $product
    	);
    	$arr = array(
    	    'orderNo' => $order->ali_order_no,
    	    'shipper' => $shipper,
    	    'consignee' => $consignee,
    	    'boxes' => $boxes,
    	    'productCode' => 'B6',
    	    'labelType' => 'eachPdf'
    	);
	    $body_json = json_encode($arr);
// 	    dump($body_json);exit();
        $log = new OrderLog(array(
	        'order_id'=>$order->order_id,
	        'staff_id'=>MyApp::currentUser('staff_id'),
	        'staff_name'=>MyApp::currentUser('staff_name'),
	        'comment'=>'俄速通订单报文：'.$body_json
	    ));
        $log->save();
        QLog::log($order->ali_order_no.$body_json);
	    $header=array(
    	    'Authorization:KSCESHI;5A5644D844F829CE789614A5C382CDF4',
// 	        'Authorization:KS000214;A407962C9A47F57BE734B761AD219753',
    	    'Content-Type:application/json'
	    );
	    $response=Helper_Curl::post('http://apitest.kingspeed.com/label',$body_json,$header);
// 	    $response=Helper_Curl::post('http://apis.kingspeed.com/label',$body_json,$header);
	    QLog::log(print_r($response, true));
	    $result=json_decode($response,true);
        if(is_null($result)){
            $view['errormessage']='面单获取失败';
        }else{
            if($result['success']==true){
                $order->tracking_no = $result['trackingNumber'];
                $order->save();
                $box=$result['boxes'][0];
                $box['labelFileBody'];
                $dir=Q::ini('upload_tmp_dir');
                @Helper_Filesys::mkdirs($dir);
                $target=$dir.DS.$box['trackingNumber'].'.pdf';
                file_put_contents($target,base64_decode($box['labelFileBody']));
                if($channel->label_sign){
                   Helper_PDF::kingspeed($target,$channel->label_sign);
                }
                $view['errormessage']='';
    	        $view['account']='US-FY';
            }else{
                $view['errormessage']=$result['message'];
            }
        }
        return $view;
    }
	/*
	 *  @todo 分拆地址1、2、3，现在只有分拆1、2
	 *  增加电子邮件
	 */
	
	static function splitAddress($addr){
	    $addr=str_replace(" ",' ',$addr);
	    $arr=explode(" ",$addr);
	    $ret=array();
	    $line='';
	    foreach ($arr as $word){
	        if (strlen($line.' '.$word)< 34){
	            $line.=' '.$word;
	        }else {
	            $ret[]=trim($line);
	            $line=$word;
	        }
	    }
	    if ($line){
	        $ret[]=$line;
	    }
	    return $ret;
	}
	/**
	 * 导出高价数据时生成shipid
	 */
	static function creatShipid($waybillcode){
	    $waybillcode=trim($waybillcode);
	    if(strlen($waybillcode)<17){
	        return $waybillcode;
	    }
	    $acc=substr($waybillcode,2,6);
	    $num=substr($waybillcode,10,7);
	    $num26=strtoupper(base_convert((int)$num, 10, 26));
	    $dict1=array(
	        "0"=>"0","1"=>"1","2"=>"2","3"=>"3","4"=>"4","5"=>"5","6"=>"6","7"=>"7","8"=>"8","9"=>"9","A"=>"10","B"=>"11","C"=>"12","D"=>"13","E"=>"14","F"=>"15","G"=>"16","H"=>"17","I"=>"18","J"=>"19","K"=>"20","L"=>"21","M"=>"22","N"=>"23","O"=>"24","P"=>"25"
	    );
	    $dict2=array("3","4","7","8","9","B","C","D","F","G","H","J","K","L","M","N","P","Q","R","S","T","V","W","X","Y","Z");
	    $r='';
	    if(strlen($num26)<5){
	        for($k=0;$k<5-strlen($num26);$k++){
	            $r.='3';
	        }
	    }
	    $re=null;
	    for ($i=0;$i<strlen($num26);$i++){
	        $re[]=substr($num26,$i,1);
	        	
	    }
	    for ($j=0;$j<count($re);$j++){
	        if(isset($num26[$j])){
	            $r.=$dict2[$dict1[$num26[$j]]];
	        }
	    }
	    return $acc.$r;
	}
	/**
	 * 获取物流单号
	 */
	function actionGettrackingno(){
	    $order=Order::find('ali_order_no=?',request('ali_order_no'))->getOne();
	    $channel=Channel::find('channel_id=?',$order->channel_id)->getOne();
	    //获取sub_code个数
	    $sub_code=Subcode::find('order_id=?',$order->order_id)->getAll();
	    $data=array(
	        'tracking_no'=>$order->tracking_no,
	        'country'=>$order->consignee_country_code,
	        'sub_code_count'=>count($sub_code),
	        'network_code'=>$channel->network_code
	    );
	    echo json_encode($data);
	    exit();
	}
	function confirmhold($ali_order_no,$reason,$reason_type){
	    $order=Order::find("ali_order_no = ?",$ali_order_no)->getOne();
	    $order->order_status_copy=$order->order_status;
	    $order->order_status='12';
	    $order->save();
	    $quantity = Farpackage::find('order_id = ?',$order->order_id)->getSum('quantity');
	    //存入一条问题件记录
	    $now='ISSUE'.date('Ym');
	    $seq = Helper_Seq::nextVal ( $now );
	    if ($seq < 1) {
	        Helper_Seq::addSeq ( $now );
	        $seq = 1;
	    }
	    $seq=str_pad($seq,4,"0",STR_PAD_LEFT);
	    $abnormal_parcel_no=date('Ym').$seq;
	    $abnormal= new Abnormalparcel();
	    $abnormal->changeProps(array(
	        'ali_order_no'=>$ali_order_no,
	        'abnormal_parcel_no'=>$abnormal_parcel_no,
	        'abnormal_parcel_operator'=>MyApp::currentUser('staff_name'),
	        'checkabnormal_type'=>$reason_type,
	        'issue_type'=>'2',
	        'issue_content'=>$reason
	    ));
	    $abnormal->save();
	    //存入最新跟进
	    $abnormal_history= new Abnormalparcelhistory();
	    $abnormal_history->changeProps(array(
	        'abnormal_parcel_id'=>$abnormal->abnormal_parcel_id,
	        'follow_up_content'=>$reason,
	        'follow_up_operator'=>MyApp::currentUser('staff_name')
	    ));
	    $abnormal_history->save();
	    $dpt = Department::find('department_id = ?',MyApp::currentUser('department_id'))->getOne();
	    $location = Helper_Chinese::toPinYin(substr($dpt->department_name,0,8));
	    $tracking = new Tracking();
	    $tracking->changeProps(array(
	        'order_id'=>$order->order_id,
	        'far_no'=>$order->far_no,
	        'tracking_code'=>'F_CHECK_5067',
	        'location'=>$location,
	        'timezone'=>'8',
	        'trace_desc_en'=>'Check failure',
	        'trace_desc_cn'=>'核查异常，请关注相关通知',
	        'operator_name'=>MyApp::currentUser('starff_name'),
	        'confirm_flag'=>0,
	        'quantity'=>$quantity,
	        'trace_time'=>time()
	    ));
	    $tracking->save();
	    return 'hold';
	}
	/**
	 * 单票核查
	 */
	function actionconfirmone(){
		if(request("ali_order_no")){
			$data=array();
			$reason=array();
			$order=Order::find("ali_order_no=?",request("ali_order_no"))->getOne();
			$service_product = Product::find('product_name=?',$order->service_code)->getOne();
			if($order->isNewRecord()){
				$data['message']='notexists';
			}else{
			    $data['service_product']=$service_product->toArray();
			    $country=Country::find("code_word_two=?",$order->consignee_country_code)->getOne();
			    $data['destination']=$order->consignee_country_code;
			    $data['country']=$country->chinese_name;
			    $data['weight_income_in']=$order->weight_income_in;
			    $data['amount']=$order->total_amount;
			    $data['is_declaration']='';
			    $data['must_declaration']='';
			    if($order->declaration_type=='DL'){
			        $data['is_declaration']='是';
			    }else{
			        $data['is_declaration']='否';
			    }
			    if($order->total_amount>700 || $order->weight_actual_in>70){
			        $data['must_declaration']='是';
			    }else{
			        $data['must_declaration']='否';
			    }
				if(!in_array($order->department_id, RelevantDepartment::relateddepartmentids())){
					$data['message']='notsamewarehouse';
				}elseif($order->order_status=='10'){
					//已核查
					$data['message']='confirmed';
				}elseif ($order->order_status=='12'){
					//已扣件
					$data['message']='issued';
				}else if ($order->order_status=='5'){
				    $data['success_message']='';
				    if($order->total_amount > 700 || $order->weight_actual_in > 70){
				        //强制报关件
				        if($order->service_code == 'Express_Standard_Global'){
				           $reason[] = '无FDA/税号/报关资料';
				        }
				    }
				    //EMS专线,当申报总价高于400.00USD时，限制入库，并提示：EMS超400USD，无服务
				    if($order->service_code == 'EMS-FY'){
				        if($order->total_amount>400){
				           $reason[]= '超400美金/EMS无服务';
				        }
				    }
				    //中美专线，订单总价超800USD时，限制入库，并提示：超800美金无服务
				    if($order->service_code == 'US-FY'){
				       if($order->total_amount>800){
				           $reason[]= '超800美金/中美无服务';
				       }
				    }
				    if ($order->declaration_type=='DL'){
				        //报关件
				        if($order->service_code == 'Express_Standard_Global' || $order->service_code == 'WIG-FY'){
				           $data['success_message']='declaration';
				        }else if($order->service_code == 'US-FY' || $order->service_code == 'EUUS-FY' || $order->service_code == 'EMS-FY'){
				           $reason[]= '无报关服务';
				        }
				    }
				    $info=array();
				    $flag=false;
				    $flag1=false;
					foreach ($order->product as $product){
// 					    if(strstr($product->product_name_far, '电') || strstr($product->product_name_far, '磁') || strstr($product->product_name_far, '液') || strstr($product->product_name_far, '粉')){
// 					        $reason[]= '涉电/磁/液/粉类问题';
// 					    }
						if($order->consignee_country_code=='US'){
						    if($order->service_code == 'Express_Standard_Global' || $order->service_code == 'EUUS-FY' || $order->service_code == 'WIG-FY'){
    							if(strlen($product->product_name_far)){
    								if(strstr($product->product_name_far, '眼镜') || strstr($product->product_name_far, '太阳镜')){
    									$flag=true;
    								}
    								if(strstr($product->product_name_far, '睫毛') || strstr($product->product_name_far, '假睫毛') || strstr($product->product_name_far, '眼睫毛')){
    								    $flag1=true;
    								}
    							}else{
    								if(strstr($product->product_name, '眼镜') || strstr($product->product_name, '太阳镜')){
    									$flag=true;
    								}
    								if(strstr($product->product_name, '睫毛') || strstr($product->product_name, '假睫毛') || strstr($product->product_name, '眼睫毛')){
    								    $flag1=true;
    								}
    							}
						     }
						}
						$info[]=array(
							"product_name"=>$product->product_name_far?$product->product_name_far:$product->product_name,
							"product_name_en"=>$product->product_name_en_far?$product->product_name_en_far:$product->product_name_en,
							"product_quantity"=>$product->product_quantity,
							"declaration_price"=>$product->declaration_price
						);
					}
					if($flag){
					    //核查FDA证书
					    $data['success_message']='checkfda';
					}
					if($flag1){
					    //核查FDA证书
					    $data['success_message']='checkfda1';
					}
					if($order->consignee_country_code=='BR'){
					    //检查税号
					    if($order->service_code == 'Express_Standard_Global' || $order->service_code == 'EUUS-FY' || $order->service_code == 'WIG-FY'){
				            $tax_payer_id = preg_replace( '/[^0-9]/', '', $order->tax_payer_id);
				            if(strlen($tax_payer_id) <> 11 && strlen($tax_payer_id) <> 14){
					            $reason[]= '无FDA/税号/报关资料';
				            }
					    }
					}
					$country=Country::find("code_word_two=?",$order->consignee_country_code)->getOne();
					$data['message']='success';
					$data['product']=$info;
					$data['country']=$country->chinese_name;
					$data['weight_income_in']=$order->weight_income_in;
					$data['amount']=$order->total_amount;
					$data['is_declaration']='';
					$data['must_declaration']='';
					if($order->declaration_type){
					    $data['is_declaration']='是';
					    if($order->declaration_type!='DL'&&($order->total_amount>700 || $order->weight_actual_in>70)){
					        $data['must_declaration']='是';
					    }else{
					        $data['must_declaration']='否';
					    }
					}else{
					    $data['is_declaration']='否';
					}
					if($order->service_code=='WIG-FY'){
					    if(strlen($order->consignee_street1.' '.$order->consignee_street2)>70){
					        $data['message']='fedexerror';
					    }else {
					        $address=Order::splitAddressfedex($order->consignee_street1.' '.$order->consignee_street2);
					        if(count($address)>2){
					            $data['message']='fedexerror';
					        }
					    }
    		        }
    		        $farpackages = Farpackage::find('order_id = ?',$order->order_id)->getAll();
    		        $hold_flag = '';
    		        $i=1;
    		        foreach ($farpackages as $farpackage){
    		            $arr = array($farpackage->length,$farpackage->width,$farpackage->height);
    		            sort($arr);
    		            if($order->service_code == 'US-FY'){
    		               if($arr[2]>=120 || $arr[1]>=75 || ($arr[2]+2*($arr[1]+$arr[0]))>=330){
    		                   $hold_flag = '第'.$i.'条产品规格错误，中美专线 服务范围：最长边<120cm并且第二长边<75cm并且最长边+2*（宽+高）<330.00cm';
    		                   break;
    		               }
    		            }elseif($order->service_code == 'EUUS-FY'){
    		               if($arr[2]>=120){
    		                   $hold_flag = '第'.$i.'条产品规格错误，欧美专线 服务范围 最长边<120cm';
    		                   break;
    		               }
    		            }elseif($order->service_code == 'Express_Standard_Global'){
    		               if($farpackage->weight>68 || $arr[2]>243 || ($arr[2]+2*($arr[1]+$arr[0]))>298){
    		                   $hold_flag = '第'.$i.'条产品规格错误，普货 服务范围：单件实际重量<=68kg,并且最长边<=243厘米，并且最长边+2*（第二长边+第三长边）<=298厘米';
    		                   break;
    		               }
    		            }elseif($order->service_code == 'EMS-FY'){
    		               if($arr[2]>105 || ($arr[2]+2*($arr[1]+$arr[0]))>250){
    		                   $hold_flag = '第'.$i.'条产品规格错误，EMS 服务范围：最长边≤1.05米并且最长边+2*（第二长边+第三长边）≤2.5米';
    		                   break;
    		               }
    		               if($order->consignee_country_code == 'AU'){
    		                  if($farpackage->weight > 20){
    		                      $hold_flag = '第'.$i.'条产品规格错误，EMS 服务范围：国家为AU的单件实际重量<=20KG';
    		                      break;
    		                  }
    		               }else{
    		                   if($farpackage->weight > 30){
    		                       $hold_flag = '第'.$i.'条产品规格错误，EMS 服务范围：除AU之外的其它国家，单件实际重量<=30KG';
    		                       break;
    		                   }
    		               }
    		            }
    		            $i++;
    		        }
    		        if(strlen($hold_flag)>0){
                       $reason[] = '产品规格不支持';
                       $reason[] = $hold_flag;
    		        }
    		        //疑似偏远
    		        if($order->suspected_remote == '1' && $order->warning_handled == '0'){
    		            $data['message']='yisipianyuan';
    		        }
    		        if($order->black_flag == '1' && $order->warning_handled == '0'){
    		           $reason[]= '黑名单';
    		        }
    		        if($order->zip_flag == '1' && $order->warning_handled == '0'){
		               $reason[]= '邮编/城市/国家无服务';
    		        }
    		        if($service_product->check_zip=='1'){
    		           $noservice_zip = Noserivcezipcode::find("zip_code = ? and service_code = ?",$order->consignee_postal_code,$order->service_code)->getOne();
    		           if(!$noservice_zip->isNewRecord()){
                          $reason[]= '邮编/城市/国家无服务';
    		           }else{
    		              $noservice_city = Noserivcezipcode::find("city = ? and service_code = ?",$order->consignee_city,$order->service_code)->getOne();
    		              if(!$noservice_city->isNewRecord()){
        		             $reason[]= '邮编/城市/国家无服务';
    		              }else{
    		                 $noservice_country = Noserivcezipcode::find("country_code = ? and service_code = ?",$order->consignee_country_code,$order->service_code)->getOne();
    		                 if(!$noservice_country->isNewRecord()){
    		                    $reason[]= '邮编/城市/国家无服务';
    		                 }
    		              }
    		           }
    		        }
    		        $quote = new Helper_Quote ();
    		        $receivable = $quote->receivable ( $order, $order->weight_income_in, $order->boxnum, $order->packagenum, $order->specialpackagenum );
    		        if(!count($receivable)){
    		            $reason[]= '产品规格不支持1';
    		        }
    		        if(count($reason)>0){
    		            $rea = array_unique($reason);
    		            $rea = array_filter($rea);
    		            $rea = implode(',', $rea);
    		            $rea=str_replace('产品规格不支持1', '无法计算费用', $rea);
    		            $hold = self::confirmhold(request("ali_order_no"), $rea,str_replace('1','',$reason[0]));
    		            if($hold == 'hold'){
			               $data['message']='issued';
			               echo json_encode($data);
			               exit();
		                }
    		        }
				}else{
				    $data['message']='error';
				}
			}
			echo json_encode($data);
			exit();
		}
	}
	/**
	 * 核查成功
	 */
	function actionSaveconfirmone(){
	    $order=Order::find("ali_order_no=? and order_status =?",request("ali_order_no"),Order::STATUS_IN)->getOne();
	    $data = array();
	    if ($order->isNewRecord()){
	    	$data['msg']='noorder';
            echo json_encode($data);
            exit();
	    }
		$fee_item_code = Helper_Array::toHashmap ( FeeItem::find ()->setColumns ( 'item_code,sub_code,item_name' )
			->asArray ()
			->getAll (), 'item_code' );
		$quote = new Helper_Quote ();
		$receivable = $quote->receivable ( $order, $order->weight_income_in, $order->boxnum, $order->packagenum, $order->specialpackagenum );
		Fee::meta ()->deleteWhere ( 'fee_type=1 and order_id=?', $order->order_id );
		QLog::log ( print_r ( $receivable, true ) );
		foreach ( $receivable as $key => $value ) {
			if ($value ['fee']) {
				$fee = new Fee ( array (
					'order_id' => $order->order_id,
					'fee_type' => 1,
					'fee_item_code' => $fee_item_code [$key] ['sub_code'],
					'fee_item_name' => $fee_item_code [$key] ['item_name'],
					'quantity' => $value ['quantity'],
					'amount' => $value ['fee']
				) );
				$fee->save ();
			}
		}
	   	$event_location = '';
		$department = Department::find ( 'department_id=?', MyApp::currentUser ( 'department_id' ) )->getOne ();
		if ($department->department_name == '杭州仓') {
			$event_location = '杭州';
		} elseif ($department->department_name == '义乌仓') {
			$event_location = '义乌';
		} elseif ($department->department_name == '上海仓') {
			$event_location = '上海';
		}elseif ($department->department_name == '广州仓') {
			$event_location = '广州';
		}elseif ($department->department_name == '青岛仓') {
			$event_location = '青岛';
		}elseif ($department->department_name == '深圳仓') {
			$event_location = '深圳';
		}elseif ($department->department_name == '南京仓') {
			$event_location = '南京';
		}
		$in=Event::find('order_id= ? and (event_code="CHECK_WEIGHT" or event_code="CONFIRM")',$order->order_id)->getOne();
		if($in->isNewRecord()){
			$event_time = time ();
			$this->eventSave ( $order->order_id, 'CHECK_WEIGHT', $event_time- rand(2, 3)*60+rand(1, 59), $event_location );
			$this->eventSave ( $order->order_id, 'CONFIRM', $event_time, $event_location );
			//已查验
			$order->order_status='10';
			//核查时间
			$order->warehouse_confirm_time =$event_time;
			$order->save();
		}
		$data['msg']='success';
		echo json_encode($data);
	    exit();
	}
	/**
	 * 扣件
	 */
	function actionSavehold(){
	    $order=Order::find("ali_order_no=?",request("ali_order_no"))->getOne();
	    $order->order_status='12';
	    $order->order_status_copy='5';
	    $order->save();
	    $quantity = Farpackage::find('order_id = ?',$order->order_id)->getSum('quantity');
	    //存入一条问题件记录
	    $now='ISSUE'.date('Ym');
	    $seq = Helper_Seq::nextVal ( $now );
	    if ($seq < 1) {
	        Helper_Seq::addSeq ( $now );
	        $seq = 1;
	    }
	    $seq=str_pad($seq,4,"0",STR_PAD_LEFT);
	    $abnormal_parcel_no=date('Ym').$seq;
	    $abnormal= new Abnormalparcel();
	    $abnormal->changeProps(array(
	        'ali_order_no'=>request('ali_order_no'),
	        'abnormal_parcel_no'=>$abnormal_parcel_no,
	        'abnormal_parcel_operator'=>MyApp::currentUser('staff_name'),
	        'checkabnormal_type'=>request('reason_type'),
	        'issue_type'=>'2',
	        'issue_content'=>request('reason')
	    ));
	    $abnormal->save();
	    //存入最新跟进
	    $abnormal_history= new Abnormalparcelhistory();
	    $abnormal_history->changeProps(array(
	        'abnormal_parcel_id'=>$abnormal->abnormal_parcel_id,
	        'follow_up_content'=>request('reason'),
	        'follow_up_operator'=>MyApp::currentUser('staff_name')
	    ));
	    $abnormal_history->save();
	    if(request('reason_type')!='其他'){
	        $dpt = Department::find('department_id = ?',MyApp::currentUser('department_id'))->getOne();
	        $location = Helper_Chinese::toPinYin(substr($dpt->department_name,0,8));
	        $tracking = new Tracking();
	        $tracking->changeProps(array(
	            'order_id'=>$order->order_id,
	            'far_no'=>$order->far_no,
	            'tracking_code'=>'F_CHECK_5067',
	            'location'=>$location,
	            'timezone'=>'8',
	            'trace_desc_en'=>'Check failure',
	            'trace_desc_cn'=>'核查异常，请关注相关通知',
	            'operator_name'=>MyApp::currentUser('starff_name'),
	            'confirm_flag'=>0,
	            'quantity'=>$quantity,
	            'trace_time'=>time()
	        ));
	        $tracking->save();
	    }
	    exit();
	}
	function actionsaveissue(){
	    if(request('scan_no')&&request('reson')){
	        $now='ISSUE'.date('Ym');
	        $seq = Helper_Seq::nextVal ( $now );
	        if ($seq < 1) {
	            Helper_Seq::addSeq ( $now );
	            $seq = 1;
	        }
	        $seq=str_pad($seq,4,"0",STR_PAD_LEFT);
	        $abnormal_parcel_no=date('Ym').$seq;
	        $no_own_order = new Abnormalparcel(array(
	            'reference_no'=>request('scan_no'),
	            'location'=>MyApp::currentUser('department_id'),
	            'abnormal_parcel_no'=>$abnormal_parcel_no,
	            'abnormal_parcel_operator'=>MyApp::currentUser('staff_name'),
	            'issue_type'=>'4',
	            'issue_content'=>request('reson'),
	        ));
	        $no_own_order->save();
	        $history=new Abnormalparcelhistory();
	        $history->abnormal_parcel_id=$no_own_order->abnormal_parcel_id;
	        $history->follow_up_content=$no_own_order->issue_content;
	        $history->follow_up_operator=MyApp::currentUser("staff_name");
	        $history->save();
	        return 'success';
	    }else{
	        return 'f';
	    }
	}
	/**
	 * 重量对比表
	 */
	function actionWeighttable(){
	    $order=Order::find('ali_order_no = ?',request('ali_order_no'))->getOne();
	    $sub_codes=Subcode::find("order_id=? and sub_code!= ?",$order->order_id,$order->tracking_no)->getAll();
	    $first_sub_code=Subcode::find("order_id=? and sub_code= ?",$order->order_id,$order->tracking_no)->getOne();
	    $data=array();
	    $first_volume_weight=$first_sub_code['length']*$first_sub_code['width']*$first_sub_code['height']/5000;
	    $first_width=$first_sub_code['width']<=0?'      ':$first_sub_code['width'];
	    $data[1]=array(
	        'barcode_url'=>'http://kuaijian.far800.com/public/barcode/html/image.php?filetype=PNG&dpi=90&scale=1&rotation=0&font_family=0&font_size=8&thickness=55&start=A&code=BCGcode128&text='.$order->tracking_no,
	        'tracking_no'=>$order->tracking_no,
	        'actual_weight'=>$first_sub_code['weight'],
	        'size'=>$first_sub_code['length'].' X '.$first_width.' X '.$first_sub_code['height'],
	        'volume_weight'=>$first_volume_weight<=0?'':$first_volume_weight,
	        'max_weight'=>($first_volume_weight>$first_sub_code['weight'])?$first_volume_weight:$first_sub_code['weight'],
	    );
	    $page=request('page');
	    $key='2';
	    for ($j=($page-1)*14;$j<$page*14;$j++){
	        if(isset($sub_codes[$j])){
	            $volume_weight=$sub_codes[$j]['length']*$sub_codes[$j]['width']*$sub_codes[$j]['height']/5000;
	            $width=$sub_codes[$j]['width']<=0?'      ':$sub_codes[$j]['width'];
	            $data[$key]=array(
	                'barcode_url'=>'http://kuaijian.far800.com/public/barcode/html/image.php?filetype=PNG&dpi=90&scale=1&rotation=0&font_family=0&font_size=8&thickness=55&start=A&code=BCGcode128&text='.$sub_codes[$j]['sub_code'],
	                'tracking_no'=>$sub_codes[$j]['sub_code'],
	                'actual_weight'=>$sub_codes[$j]['weight'],
	                'size'=>$sub_codes[$j]['length'].' X '.$width.' X '.$sub_codes[$j]['height'],
	                'volume_weight'=>$volume_weight<=0?'':$first_volume_weight,
	                'max_weight'=>($volume_weight>$sub_codes[$j]['weight'])?$volume_weight:$sub_codes[$j]['weight'],
	            );
	        }else{
	            $data[$key]=array(
	                'barcode_url'=>'',
	                'tracking_no'=>'',
	                'actual_weight'=>'',
	                'size'=>'',
	                'volume_weight'=>'',
	                'max_weight'=>'',
	            );
	        }
	        $key++;
	    }
	    echo json_encode($data);die();
	}
	/**
	 * 打印重量对比表
	 */
	function actionprintweighttable(){
	    if(request_is_post()){
	        $data=array();
	        $order=Order::find('ali_order_no=?',request('order_no'))->getOne();
	        if($order->isNewRecord()){
	            //查询子单信息
	            $subcode=Subcode::find('sub_code=?',request('order_no'))->getOne();
	            if($subcode->isNewRecord()){
	                $data['message']='notexist';
	                $data['sub_code_count']='';
	                $data['ali_order_no']='';
	            }else{
	                $order=Order::find('order_id=?',$subcode->order_id)->getOne();
	                $data['message']='';
	                $data['sub_code_count']=Subcode::find('order_id=?',$order->order_id)->getAll()->count();
	                $data['ali_order_no']=$order->ali_order_no;
	            }
	        }else{
                $data['message']='';
                $data['sub_code_count']=Subcode::find('order_id=?',$order->order_id)->getAll()->count();
                $data['ali_order_no']=$order->ali_order_no;
	        }
	        echo json_encode($data);
	        exit();
	    }
	}
	/**
	 * 托盘列表
	 */
	function actionPalletlist(){
	    $palletlist=Pallet::find();
	    //日期
	    if(request("start_date")){
	        $palletlist->where("create_time >=?",strtotime(request("start_date").' 00:00:00'));
	    }
	    if (request("end_date")){
	        $palletlist->where("create_time <=?",strtotime(request("end_date").' 23:59:59'));
	    }
	    //阿里单号
	    if(request('pallet_no')){
	        $palletlist->where('pallet_no=?',request('pallet_no'));
	    }
	    if(request('action')=='new_pallet'){
	        //生成托盘号
	        $now='PALLET'.date('Ymd');
	        $seq = Helper_Seq::nextVal ( $now );
	        if ($seq < 1) {
	            Helper_Seq::addSeq ( $now );
	            $seq = 1;
	        }
	        $seq=str_pad($seq,4,"0",STR_PAD_LEFT);
	        $pallet_no='T'.date('ymd').$seq;
	        //托盘表生成新纪录
	        $pallet=new Pallet(array(
	            'pallet_no'=>$pallet_no,
	            'channel_name'=>request('channel_name'),
	            'operator'=>MyApp::currentUser('staff_name')
	        ));
	        $pallet->save();
	        return $this->_redirect(url('/Palletlist'));
	    }
	    $pagination = null;
	    $palletlist=$palletlist->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )
	    ->order('pallet_id desc')->getAll();
	    $this->_view['palletlist']=$palletlist;
	    $this->_view['pagination']=$pagination;
	}
	/**
	 * 出库打托
	 */
	function actionPallet(){
	    $pallet=Pallet::find('pallet_id=?',request('pallet_id'))->getOne();
	    $this->_view['pallet']=$pallet;
	}
	/**
	 * 判断运单号数量以及与上一个单号是否属于同一个订单
	 */
	function actiongetpackagecount(){
	    $subcode=Subcode::find('sub_code=?',request('tracking_code'))->getOne();
	    $data=array();
	    if($subcode->isNewRecord()){
	        $data['status']='error';
	        $data['count']='';
	        $data['message']='notexits';
	        $data['same']='false';
	    }else if($subcode->pallet_no){
	        $data['status']='error';
	        $data['count']='';
	        $data['message']='scanned';
	        $data['same']='false';
	    }else{
	        //获取打单账号
	        $channel_group=order::channelgroup();
	        $order=Order::find('order_id=?',$subcode->order_id)->getOne();
	        $pallet=Pallet::find('pallet_no=?',request('pallet_no'))->getOne();
	        if(!in_array($order->channel_id, $channel_group[$pallet->channel_name])){
	            $data['status']='error';
	            $data['count']='';
	            $data['message']='channel_wrong';
	            $data['same']='false';
	        }else{
	            //根据order_id判断订单是否是一票多件
	            $subcode_all=Subcode::find('order_id=?',$subcode->order_id)->getAll();
	            if(count($subcode_all)>1){//一票多件
	                $data['status']='success';
	                $data['count']=count($subcode_all);
	                //判断与上一个运单是否属于一个订单
	                $last_tracking_code=Subcode::find('sub_code=?',request('last_tracking_code'))->getOne();
	                if($last_tracking_code->order_id==$subcode->order_id){//同一订单
	                    $data['message']='录入结果：成功';
	                    $data['same']='true';
	                    //判断是否勾选锁定选项
	                    if(request('status')=='checked'){
	                        //写入上一个单号长宽高
	                        $subcode->weight=$last_tracking_code->weight;
	                        $subcode->length=$last_tracking_code->length;
	                        $subcode->width=$last_tracking_code->width;
	                        $subcode->height=$last_tracking_code->height;
	                        $subcode->save();
	                    }
	                }else{//不同订单
	                    $data['message']='';
	                    $data['same']='false';
	                }
	            }else{
	                $data['status']='success';
	                $data['count']='1';
	                $data['message']='';
	                $data['same']='false';
	            }
	        }
	    }
	    echo json_encode($data);
	    exit();
	}
	/**
	 * 保存托盘号和包裹长宽高
	 */
	function actionsavepackageinfo(){
	    $subcode=Subcode::find('sub_code=?',request('tracking_code'))->getOne();
        $subcode->weight=request('weight');
        $subcode->length=request('length');
        $subcode->width=request('width');
        $subcode->height=request('height');
        $subcode->save();
        $data['status']='success';
        $data['message']='';
	    echo json_encode($data);
	    exit();
	}
	/**
	 * 保存托盘号
	 */
	function actionsavepalletno(){
	    $pallet_nos=explode(';', trim(request('tracking_codes'),";"));
	    //清除子单中原有托盘数据
	    $old_subcodes=Subcode::find('pallet_no=?',request('pallet_no'))->getAll();
	    foreach ($old_subcodes as $old_subcode){
	        $old_subcode->pallet_no='';
	        $old_subcode->save();
	    }
	    //写入新数据
	    foreach ($pallet_nos as $temp){
	        $subcode=Subcode::find('sub_code=?',$temp)->getOne();
	        $subcode->pallet_no=request('pallet_no');
	        $subcode->save();
	    }
	    exit();
	}
	/**
	 * 打印托盘标签
	 */
	function actionprintpallet(){
	    $data=array();
	    $subcodes=Subcode::find('pallet_no=?',request('pallet_no'))->getAll();
	    $pallet=Pallet::find('pallet_no=?',request('pallet_no'))->getOne();
	    $data['pallet_no']=request('pallet_no');
	    $data['quantity']=count($subcodes);
	    $data['channel_name']=$pallet->channel_name;
	    echo json_encode($data);
	    die();
	}
	/**
	 * PE和VG国家invoice
	 */
	function actionPeinvoice(){
	    $order=Order::find('tracking_no=?',request('tracking_no'))->getOne();
	    $channel=Channel::find('channel_id=?',$order->channel_id)->getOne();
	    $warhouse_info=array();
	    if($channel->network_code !='UPS' || !$order->account ){
	    	//杭州仓
	    	if($order->department_id==6){
	    		$warhouse_info['name']="Far's warehouse in Hangzhou";
	    		$warhouse_info['address']='1st Floor, No.43 Ganchang Road, Xiacheng District';
	    		$warhouse_info['city']='Hangzhou';
	    		$warhouse_info['state']='Zhejiang';
	    		$warhouse_info['postcode']='310022';
	    		$warhouse_info['phone']='0571-87834076';
	    		//上海仓
	    	}elseif ($order->department_id==7){
	    		$warhouse_info['name']="Far's warehouse in Shanghai";
	    		$warhouse_info['address']='No. 12, Jinshun Road, Zhuqiao Town, Pudong New Area';
	    		$warhouse_info['city']='Shanghai';
	    		$warhouse_info['state']='Shanghai';
	    		$warhouse_info['postcode']='201323';
	    		$warhouse_info['phone']='021-58590952';
	    		//义乌仓
	    	}elseif ($order->department_id==8){
	    		$warhouse_info['name']="Far's warehouse in Yiwu";
	    		$warhouse_info['address']='No.675-2 Airport Road';
	    		$warhouse_info['city']='Yiwu';
	    		$warhouse_info['state']='Zhejiang';
	    		$warhouse_info['postcode']='322000';
	    		$warhouse_info['phone']='0579-85119351';
	    		//广州仓
	    	}elseif ($order->department_id==22){
	    		$warhouse_info['name']="Far's warehouse in Guangzhou";
	    		$warhouse_info['address']='No.7-10, Heming Business Building, Baiyun Third Line, Helong Street, Baiyun District';
	    		$warhouse_info['city']='Guangzhou';
	    		$warhouse_info['state']='Guangdong';
	    		$warhouse_info['postcode']='510080';
	    		$warhouse_info['phone']='020-36301839';
	    		//青岛仓
	    	}elseif ($order->department_id==23){
	    		$warhouse_info['name']="Far's warehouse in Qingdao";
	    		$warhouse_info['address']='No.4 Reservoir Area, Shanhang Logistics Park, No.31 Liangjiang Road, Chengyang District';
	    		$warhouse_info['city']='Qingdao';
	    		$warhouse_info['state']='Shandong';
	    		$warhouse_info['postcode']='266108';
	    		$warhouse_info['phone']='18661786160';
	    		//深圳仓
	    	}elseif ($order->department_id==24){
	    		$warhouse_info['name']="FAR's warehouse in Shenzhen Longhua";
	    		$warhouse_info['address']='Unit 5, No.8 Non-bonded Warehouse, South China International Logistics Center, No.1 Mingkang Road, Minzhi Street, Longhua New District';
	    		$warhouse_info['city']='shenzhen';
	    		$warhouse_info['state']='guangdong';
	    		$warhouse_info['postcode']='518000';
	    		$warhouse_info['phone']='4000857988';
	    		//南京仓
	    	}elseif ($order->department_id==25){
	    		$warhouse_info['name']="Far's warehouse in Hangzhou";
	    		$warhouse_info['address']='1st Floor, No.43 Ganchang Road, Xiacheng District';
	    		$warhouse_info['city']='Hangzhou';
	    		$warhouse_info['state']='Zhejiang';
	    		$warhouse_info['postcode']='310022';
	    		$warhouse_info['phone']='0571-87834076';
	    	}else{
	    		$warhouse_info['name']="";
	    		$warhouse_info['address']='';
	    		$warhouse_info['city']='';
	    		$warhouse_info['state']='';
	    		$warhouse_info['postcode']='';
	    		$warhouse_info['phone']='';
	    	}
	    }
	    $account=UPSAccount::find('account=?',$order->account)->getOne();
	    $invoice=array();
	    $total_value=0;
	    $order_product=Orderproduct::find('order_id=?',$order->order_id)->getOne();
	    foreach ($order->product as $v){
	        $invoice['items'][]=array(
	            'desc'=>$v->product_name_en_far.' HS Code:'.$v->hs_code_far.' '.$v->material_use,
	            'quantity'=>$v->product_quantity,
	            'price'=>$v->declaration_price,
	            'itotal'=>round($v->product_quantity*$v->declaration_price,2),
	        );
	        $total_value+=round($v->product_quantity*$v->declaration_price,2);
	    }
	    $data=array(
	        'sender'=>$channel->network_code !='UPS'?$warhouse_info:$account->toArray(),
	        'consignee_name'=>$order->consignee_name1,
	        'consignee_company'=>$order->consignee_name2?$order->consignee_name2:$order->consignee_name1,
	        'consignee_phone'=>$order->consignee_mobile,
	        'consignee_city'=>$order->consignee_city,
	        'consignee_country_code'=>$order->consignee_country_code,
	        'consignee_country_name'=>Country::find('code_word_two=?',$order->consignee_country_code)->getOne()->english_name,
	        'consignee_state'=>$order->consignee_state_region_code,
	        'consignee_postal_code'=>$order->consignee_postal_code,
	        'consignee_address'=>$order->consignee_street1.' '.$order->consignee_street2,
	        'tax'=>$order->tax_payer_id,
	        'invoice'=>$invoice,
	        'total_value'=>$total_value,
	        'tracking_no'=>$order->tracking_no
	    );
	    echo json_encode($data);
	    exit();
	}
	/**
	 * 保存打印状态
	 */
// 	function saveprint($order){
// 	    //将订单状态改为已打印
// 	    $order->order_status='6';
// 	    $order->save();
// 	}
	/**
	 * 保存3个出库事件
	 */
	function saveoutevents($order){
		//将订单状态改为已出库
		$order->order_status='6';
	    //判断三个出库事件
		$events_out=Event::find('order_id=? and event_code in ("PALLETIZE","WAREHOUSE_OUTBOUND","CARRIER_PICKUP")',$order->order_id)->getAll();
		if(!count($events_out)){
			//存入3个事件
			$department=Department::find('department_id=?',MyApp::currentUser('department_id'))->getOne();
			if($department->department_name=='杭州仓'){
				$location='杭州';
			}elseif ($department->department_name=='义乌仓'){
				$location='义乌';
			}elseif ($department->department_name=='上海仓'){
				$location='上海';
			}elseif ($department->department_name=='广州仓'){
				$location='广州';
			}elseif ($department->department_name=='青岛仓'){
				$location='青岛';
			}elseif ($department->department_name=='深圳仓'){
				$location='深圳';
			}elseif ($department->department_name=='南京仓'){
				$location='南京';
			}
			$checkout_time=time();
// 			if($location=='义乌'){
// 			    $arr=array('US','CA','MX','PR');
// 			    $date=date("H:i:s",$checkout_time);
// 			    if(in_array($order->consignee_country_code, $arr) && '09:00:00'<=$date && $date<='12:00:00' && $order->channel->channelgroup->channel_group_name=='义乌OGP'){
// 			        $checkout_time=$checkout_time-12*60*60;
// 		        }
// 			}
			$palletize_event= new Event();
			$palletize_event->changeProps(array(
				'order_id'=>$order->order_id,
				'event_code'=>'PALLETIZE',
				'event_time'=>$checkout_time- rand(45, 55)*60+rand(1, 59),
				'event_location'=>$location,
				'timezone'=>'8',
				'confirm_flag'=>'1',
				'operator'=>MyApp::currentUser('staff_name')
			));
			$palletize_event->save();
			//出库事件
			$outbound_event= new Event();
			$outbound_event->changeProps(array(
				'order_id'=>$order->order_id,
				'event_code'=>'WAREHOUSE_OUTBOUND',
				'event_time'=>$checkout_time,
				'event_location'=>$location,
				'timezone'=>'8',
				'confirm_flag'=>'1',
				'operator'=>MyApp::currentUser('staff_name')
			));
			$outbound_event->save();
			//承运商取件事件
			$Hour=date("H",$checkout_time);
			$carrier_time='';
			if($Hour<22){
				$carrier_time=$checkout_time+(30+rand(1, 7))*60+4*(rand(1, 7)+2);
			}else{
				$carrier_time=$checkout_time+24*60*60+(30+rand(1, 7))*60+4*(rand(1, 7)+2);
			}
			//EMS-FY:去掉承运商已取件事件，添加：S_TH_OUT轨迹
			if($order->service_code!='EMS-FY' && $order->service_code!='WIG-FY' && $order->service_code!='ePacket-FY'){
				$pickup_event= new Event();
				$pickup_event->changeProps(array(
					'order_id'=>$order->order_id,
					'event_code'=>'CARRIER_PICKUP',
					'event_time'=>$carrier_time,
					'location'=>$location,
					'event_location'=>$location,
					'timezone'=>'8',
					'confirm_flag'=>'1'
				));
				$pickup_event->save();
				//承运商取件时间
				$order->carrier_pick_time=$carrier_time;
			}elseif ($order->service_code=='EMS-FY' || $order->service_code=='ePacket-FY'){
				$quantity=Farpackage::find('order_id=?',$order->order_id)->sum('quantity','sum_quantity')->getAll();
				$trace=new Tracking();
				$trace->changeProps(array(
					'order_id'=>$order->order_id,
					'far_no'=>$order->far_no,
					'tracking_code'=>'S_TH_OUT',
					'location'=>$location,
					'trace_desc_en'=>'In Transit to Export Port',
					'trace_desc_cn'=>'货物中转清关口岸',
					'timezone'=>8,
					'confirm_flag'=>'1',
					'quantity'=>$quantity['sum_quantity'],
					'trace_time'=>strtotime(date("Y-m-d",$checkout_time))+19*60*60+rand(0, 30)*60+rand(0, 30)//出库当天的 19：X分Y秒（X，Y在0-30之间随机）
				));
				$trace->save();
			}
			//出库时间
			$order->warehouse_out_time=$checkout_time;
		}
		$feeall=Fee::find('order_id = ?',$order->order_id)->getAll();
		foreach ($feeall as $fee){
		    $fee->account_date=isset($checkout_time)?$checkout_time:$order->warehouse_out_time;
		    $fee->save();
		}
		$order->save();
	}
	/**
	 * 文件上传
	 */
	function actionUpload(){
        if (file_get_contents('php://input')) {
            //创建文件路径
            $filepath = Q::ini ( "upload_tmp_dir" ) . "/".request('name');
            file_put_contents($filepath, file_get_contents('php://input'));
        }
	    exit();
	}
	/**
	 * 交货数据导出
	 */
	function actionComparisonexport(){
	    require_once _INDEX_DIR_ .'/_library/phpexcel/PHPExcel/Shared/PCLZip/pclzip.lib.php';
	    $channel_group = Order::channelgroup();
	    $first_key='';
	    foreach ($channel_group as $key=>$value){
	        $first_key=$key;
	        break;
	    }
	    $channel_group=$channel_group[request ( 'channel_group',$first_key)];
	    //发件日
	    $record_order_date=request('record_order_date',date('Y-m-d',time()));
	    $order_list=Order::find("order_status = '7'")
	    ->where ( 'channel_id in (?) and record_order_date>=? and record_order_date<=? and sort=?', $channel_group ,strtotime($record_order_date.' 00:00:00'),strtotime($record_order_date.' 23:59:59'),request('sort','D3'))
	    ->getAll();
	    if(request('export')=='exportlist'){
	    	set_time_limit(0);
	        if(count($order_list)){
	            $i=1;
	            $tracking_nos=array();
	            $no_list=array();
	            foreach ($order_list as $v){
	                $no_list[]=$v->tracking_no;
	                if(floor($i/10)==($i/10)){
	                    $tracking_nos[]=$no_list;
	                    $no_list=array();
	                }
	                $i++;
	            }
	            if(count($no_list)){
	                $tracking_nos[]=$no_list;
	            }
	            //合并invoice 和 copy
	            $dir=Q::ini('upload_tmp_dir');
	            foreach ($tracking_nos as $tracking_no){
	                $filenames=array();
	                foreach ($tracking_no as $v){
	                    $filenames[]=$dir.DS.$v.'_invoice.pdf';
	                    $filenames[]=$dir.DS.$v.'_copy_1.pdf';
	                    if(file_exists($dir.DS.$v.'_copy_2.pdf')){
	                        $filenames[]=$dir.DS.$v.'_copy_2.pdf';
	                    }
	                }
	                Helper_PDF::merge($filenames,$dir.DS.$tracking_no[0].'_all.pdf','file');
	                $target=$dir.DS.$tracking_no[0].'_all.pdf';
	                //将pdf转为jpg格式
	                exec("/usr/bin/convert -density 300 -depth 8 -quality 85 {$target} -append {$target}.tiff");
	                $zip_file_names[]=$target.'.tiff';
	            }
	            //压缩文件
	            $zip = new PclZip($zip_file_names[0].'.zip');
	            $rs = $zip->create(implode(',', $zip_file_names), PCLZIP_OPT_REMOVE_PATH, $dir);
	            if ($rs == 0) {
	                return $this->_redirectMessage('导出tiff压缩包', "Error : " . $zip->errorInfo(true), url('/Comparisonexport'));
	            }
	            header('Content-Type:text/html;charset=utf-8');
	            header('Content-disposition:attachment;filename='.request ( 'channel_group',$first_key).'_'.request('record_order_date',date('Y-m-d',time())).'_'.request('sort','D3').'.zip');
	            $filesize = filesize($zip_file_names[0].'.zip');
	            header('Content-length:'.$filesize);
	            readfile($zip_file_names[0].'.zip');
	        }else{
	            return $this->_redirectMessage('导出tiff压缩包', '失败，数据为空', url('/Comparisonexport'));
	        }
	    }
	    $this->_view['orders']=$order_list;
	}
	/**
	 * 生成泛远面单
	 */
	function actionFarbillpdf(){
    $order=Order::find('order_id=?',request('order_id'))->getOne();
    $warhouse_info=array();
    	//杭州仓
    	if($order->department_id==6){
    		$warhouse_info['name']="Far's warehouse in Hangzhou";
    		$warhouse_info['address']='1st Floor, No.43 Ganchang Road, Xiacheng District, Hangzhou, Zhejiang, China  310022';
    		$warhouse_info['contact']='Miss.Zhang';
    		$warhouse_info['phone']='0571-87834076';
    	//上海仓
    	}elseif ($order->department_id==7){
    		$warhouse_info['name']="Far's warehouse in Shanghai";
    		$warhouse_info['address']='No. 12, Jinshun Road, Zhuqiao Town, Pudong New Area, Shanghai,China 201323';
    		$warhouse_info['contact']='Mr.Gu';
    		$warhouse_info['phone']='021-58590952';
    	//义乌仓
    	}elseif ($order->department_id==8){
    		$warhouse_info['name']="Far's warehouse in Yiwu";
    		$warhouse_info['address']='No.675-2 Airport Road, Yiwu City, Zhejiang Province,China 322000';
    		$warhouse_info['contact']='Mr.Yang';
    		$warhouse_info['phone']='0579-85119351';
    		//广州仓
    	}elseif ($order->department_id==22){
    		$warhouse_info['name']="Far's warehouse in Guangzhou";
    		$warhouse_info['address']='No.7-10, Heming Business Building, Baiyun Third Line, Helong Street, Baiyun District, Guangzhou City, Guangdong Province,China 510080';
    		$warhouse_info['contact']='Miss.Li';
    		$warhouse_info['phone']='020-36301839';
    		//青岛仓
    	}elseif ($order->department_id==23){
    		$warhouse_info['name']="Far's warehouse in Qingdao";
    		$warhouse_info['address']='No.4 Reservoir Area, Shanhang Logistics Park, No.31 Liangjiang Road, Chengyang District, Qingdao City, Shandong Province,China 266108';
    		$warhouse_info['contact']='Mr Wang';
    		$warhouse_info['phone']='18661786160';
    	}elseif ($order->department_id==24){
    		$warhouse_info['name']="FAR's warehouse in Shenzhen Longhua";
    		$warhouse_info['address']='Unit 5, No.8 Non-bonded Warehouse, South China International Logistics Center, No.1 Mingkang Road, Minzhi Street, Longhua New District, Shenzhen City,China 518000';
    		$warhouse_info['contact']='Mr Wang';
    		$warhouse_info['phone']='4000857988';
    		//南京仓
    	}elseif($order->department_id==25){
    	    $warhouse_info['name']="Far's warehouse in Hangzhou";
    	    $warhouse_info['address']='1st Floor, No.43 Ganchang Road, Xiacheng District, Hangzhou, Zhejiang, China  310022';
    	    $warhouse_info['contact']='Miss.Zhang';
    	    $warhouse_info['phone']='0571-87834076';
    	}else{
    		$warhouse_info['name']="";
    		$warhouse_info['address']='';
    		$warhouse_info['contact']='';
    		$warhouse_info['phone']='';
    	}
    $invoice=array(); //产品清单
    $total_value=0;
    $i=1; 
    foreach ($order->product as $v){
    	if($i>=4){
    		break;
    	}
        $invoice['items'][]=array( 
        	'row'=>$v->product_name_far.' '.$v->product_name_en_far.' '.$v->hs_code_far,
            'quantity'=>$v->product_quantity,
            'price'=>$v->declaration_price,
            'itotal'=>round($v->product_quantity*$v->declaration_price,2),
        );
        $total_value += round($v->product_quantity*$v->declaration_price,2);
        $i++;
    }
    $total_packages=Farpackage::find('order_id=?',request('order_id'))->getSum('quantity');//包裹总数
    $data=array(
    	'ali_order_no'=>$order->ali_order_no,
    	'far_no'=>$order->far_no,
        'sender'=>$warhouse_info,
        'consignee_company'=>$order->consignee_name2,
        'consignee_name'=>$order->consignee_name1,
        'consignee_address1'=>$order->consignee_street1,
        'consignee_address2'=>$order->consignee_street2,
        'consignee_city'=>$order->consignee_city,
        'consignee_postal_code'=>$order->consignee_postal_code,
        'consignee_state'=>$order->consignee_state_region_code,
        'consignee_phone'=>$order->consignee_mobile,
        'consignee_country_code'=>$order->consignee_country_code,
        'consignee_country_name'=>Country::find('code_word_two=?',$order->consignee_country_code)->getOne()->english_name,
        'invoice'=>$invoice,
        'total_value'=>$total_value,
        'total_packages'=>$total_packages,
        'weight_income_in'=>$order->weight_income_in,
    );
    echo json_encode($data);
    exit();
	}
	/**
	 * EMS数据
	 */
	function actionEms(){
	    if(request_is_post()){
    	    $order=Order::find("service_code = 'EMS-FY' ")
    	    ->joinLeft('tb_order_product',null,'tb_order.order_id=tb_order_product.order_id')
    	    ->joinLeft('tb_country',null,'tb_order.consignee_country_code=tb_country.code_word_two');
    	    //日期查询
    	    if(request("start_date")){
    	        $order->where("tb_order.warehouse_out_time >= ?",strtotime(request("start_date").' 00:00:00'));
            }
            if(request("end_date")){
                $order->where("tb_order.warehouse_out_time <= ?",strtotime(request("end_date").' 23:59:59'));
            }
            //仓库
    	    if(request('department_id')){
                $order->where('tb_order.department_id = ?',request('department_id'));
            }
            $order->columns('order_id','tb_order');
            $order->columns('customs_country_code','tb_country');
            $order->columns('product_name_far,product_quantity,declaration_price,hs_code','tb_order_product');
            $list=$order->asArray()->order('order_id desc')->getAll();
            $this->_view['order']=$list;
            //导出文件
            if (request('export')=='export') {
                //设置导出表单head
                $sheet = array ( array('电商平台代码','电商平台名称','原始订单编号','物流企业代码','物流企业运单号','订单商品运费',
                    '收货人所在国家代码','企业商品货号','企业商品名称','商品数量（成交数量）','计量单位(成交单位)','币制代码','商品单价','HS编码','商品名称',
                    '商品规格类型','商品条形码','总重量（单位：千克）','错误信息','仓库'
                ));
                $i=1;
                foreach ($list as $value){
                	$product_quantity_sum=Orderproduct::find('order_id=?',$value['order_id'])->getSum('product_quantity');
                    $check_hs=Hs::find('HSCode=?',$value['hs_code'])->getOne();
                    if($check_hs->isNewRecord()){
                        $msg='HS编码错误';
                    }else{
                        $msg='';
                    }
                    $warehouse='';
                    $department=Department::find('department_id=?',$value['department_id'])->getOne();
                    if(!$department->isNewRecord()){
                    	$warehouse=$department->department_name;
                    }
                    $sheet [] = array (
                        '3201962D61',
                        '南京欣惠捷电子商务有限公司',
                        $value['ali_order_no'],
                        '320198Z006',
                        $value['tracking_no'],
                        '0',
                        $value['customs_country_code'],
                        "'".date('Ymd').sprintf("%06d",$i++),
                        $value['product_name_far'],
                        $value['product_quantity'],
                        "'".'011',
                        '502',
                        sprintf('%.2f',$value['declaration_price']),
                        "'".$value['hs_code'],
                        $value['product_name_far'],
                        '无规格型号',
                        '无',
                        sprintf('%.2f',$value['weight_actual_out']*$value['product_quantity']/$product_quantity_sum),
                        $msg,
                    	$warehouse
                    );
                }
                //日期+阿里9610 申报数据（2019.06.25 阿里9610申报数据）
                //Helper_Excel::array2xls(数据表，导出表名)
                Helper_Excel::array2xls ( $sheet,date('Y.m.d',time()).' 阿里9610申报数据'.'.xlsx' );
                exit();
    	   }
        }
	}
	/**
	 * 中美专线数据
	 */
	function actionus(){
	    if(request_is_post()){
    	    $order=Order::find();
    	    //日期查询
    	    if(request("start_date",date('Y-m-d').' 00:00')){
    	        $order->where("tb_order.warehouse_out_time >= ?",strtotime(request("start_date").':00'));
            }
            if(request("end_date")){
                $order->where("tb_order.warehouse_out_time <= ?",strtotime(request("end_date").':59'));
            }
            //SKU数量查询
            $orderproduct=Orderproduct::find();
            if(request('start_product_quantity',15)){
                $orderproduct->where("product_quantity >= ?",request('start_product_quantity',15));
            }
            if(request('end_product_quantity')){
               $orderproduct->where("product_quantity <= ?",request('end_product_quantity'));
            }
            $id=$orderproduct->asArray()->setColumns('order_id')->getAll();
            $id=Helper_Array::getCols($id, 'order_id');
            if(count($id)>0){
                $order->where("order_id in (?)",$id);
            }
            //仓库
    	    if(request('department_id')){
                $order->where('tb_order.department_id = ?',request('department_id'));
            }
            //产品
            if(request('service_code')){
            	$order->where('tb_order.service_code = ?',request('service_code'));
            }
            //阿里单号
            if(request('ali_order_no')){
                $ali_order_no=explode("\r\n", request('ali_order_no'));
                $ali_order_no=array_filter($ali_order_no);
                $ali_order_no=array_unique($ali_order_no);
                $order->where('tb_order.ali_order_no in (?)',$ali_order_no);
            }
            //末端运单号
            if(request('tracking_no')){
                $tracking_no=explode("\r\n", request('tracking_no'));
                $tracking_no=array_filter($tracking_no);
                $tracking_no=array_unique($tracking_no);
                $order->where('tb_order.tracking_no in (?)',$tracking_no);
            }
            $ordercl=clone $order;
            $list=$order->asArray()->order('order_id desc')->getAll();
            $this->_view['order']=$list;
            //导出文件
            if (request('export')=='export') {
                set_time_limit(0);//不限制超时时间
                ini_set('memory_limit', '-1');//不限制内存
                //设置导出表单head
                $sheet = array ( array('平台名称','订单号','收件人姓名','收件人州二字码','收件人城市','收件人邮编',
                    '收件人电话','收件人地址','收件人地址2','发件人姓名','发件人电话','发件人邮编','发件人省','发件人市','发件人地址','箱号',
                    '产品','包裹总重量','带电池','备注','SellerID','SKU1','单价1','数量1','英文品名1','中文品名1','单件毛重1','套装数量1',
                    'SKU2','单价2','数量2','英文品名2','中文品名2','单件毛重2','套装数量2','SKU3','单价3','数量3','英文品名3',
                    '中文品名3','单件毛重3','套装数量3','SKU4','单价4','数量4','英文品名4','中文品名4','单件毛重4','套装数量4',
                    'SKU5','单价5','数量5','英文品名5','中文品名5','单件毛重5','套装数量5','SKU6','单价6','数量6','英文品名6',
                    '中文品名6','单件毛重6','套装数量6','SKU7','单价7','数量7','英文品名7','中文品名7','单件毛重7','套装数量7'
                ));
                $lists=$ordercl->asArray()->order('order_id desc')->getAll();
                foreach ($lists as $value){
                    $msg='';
                    if(strlen($value['consignee_street1'].' '.$value['consignee_street2'])>225){
                        $msg.='收件人地址超长';
                    }
                    if(strlen($value['consignee_postal_code'])<>'5' && strlen($value['consignee_postal_code'])<>'9'){
                        $msg.=empty($msg)?'收件人邮编错误':',收件人邮编错误';
                    }
//                     if(!strpos(trim($value['consignee_name1']), ' ')){
//                         $msg.=empty($msg)?'收件人姓名格式不正确':',收件人姓名格式不正确';
//                     }
                    $state='';
                    $states=Uscaprovince::find('province_name=?',strtolower(str_replace(' ','',$value['consignee_state_region_code'])))->getOne();
                    if($states->isNewRecord()){
                        $msg.=empty($msg)?'收件人州错误':',收件人州错误';
                    }else{
                        $state=$states->province_code_two;
                    }
                    $product_quantity=Orderproduct::find('order_id=?',$value['order_id'])->getCount();
                    if($product_quantity>7){
                        $msg.=empty($msg)?'SKU超7种':',SKU超7种';
                    }
                    $product=Orderproduct::find('order_id=?',$value['order_id'])->getAll();
                    $prod=array();
                    $product_quantity_sum=0;
                    $i=1;
                    foreach ($product as $p){
                        $prod[]=$p;
                        $product_quantity_sum += $p->product_quantity;
                        if($i>6){
                            break;
                        }
                        $i++;
                    }
                    $row= array (
                        'FAR CO',
                        $value['tracking_no'],
                        strpos(trim($value['consignee_name1']), ' ')?$value['consignee_name1']:$value['consignee_name1'].' '.$value['consignee_name1'],
                        $state,
                        $value['consignee_city'],
                        "'".$value['consignee_postal_code'],
                        "'".$value['consignee_mobile'].($value['consignee_telephone']?'/'.$value['consignee_telephone']:''),
                        substr($value['consignee_street1'].' '.$value['consignee_street2'], 0,225),
                        '',
                        'JENNY',
                        '17794536178',
                        '310022',
                        '浙江省',
                        '杭州市',
                        '长城街22号',
                        $value['ali_order_no'],
                        'GREENCLEARANCE',
                        "'".$value['weight_label'],
                        '',
                        $msg,
                        'AL'
                    );
                   foreach ($prod as $pr){
                        $row[]="'".date('Ymd').rand(100000, 999999);
                        $row[]=$pr['declaration_price'];
                        $row[]=$pr['product_quantity'];
                        $row[]=$pr['product_name_en_far'];
                        $row[]=$pr['product_name_far'];
                        $row[]=sprintf('%.3f',$value['weight_label']/$product_quantity_sum);
                        $row[]='';
                    }
                    $sheet []=$row;
                }
                Helper_Excel::array2xls ( $sheet,date('Y.m.d',time()).'-FSP-AL-US送货预报数据'.'.xlsx' );
                exit();
           }
	    }
    }
    /**
     *  上海快件报关
     */
    function actionsh(){
        if(request_is_post()){
            $order=Order::find();
            //日期查询
            if(request("start_date")){
                $order->where("tb_order.warehouse_out_time >= ?",strtotime(request("start_date").':00'));
            }
            if(request("end_date")){
                $order->where("tb_order.warehouse_out_time <= ?",strtotime(request("end_date").':59'));
            }
            //仓库
            if(request('department_id')){
                $order->where('tb_order.department_id = ?',request('department_id'));
            }
            //产品
            if(request('service_code')){
                $order->where('tb_order.service_code = ?',request('service_code'));
            }
            //阿里单号
            if(request('ali_order_no')){
                $ali_order_no=explode("\r\n", request('ali_order_no'));
                $ali_order_no=array_filter($ali_order_no);
                $ali_order_no=array_unique($ali_order_no);
                $order->where('tb_order.ali_order_no in (?)',$ali_order_no);
            }
            //末端运单号
            if(request('tracking_no')){
                $tracking_no=explode("\r\n", request('tracking_no'));
                $tracking_no=array_filter($tracking_no);
                $tracking_no=array_unique($tracking_no);
                $order->where('tb_order.tracking_no in (?)',$tracking_no);
            }
            $list=$order->asArray()->order('order_id desc')->getAll();
            $this->_view['order']=$list;
            //导出文件
            if (request('export')=='export') {
                set_time_limit(0);//不限制超时时间
                ini_set('memory_limit', '-1');//不限制内存
                //设置导出表单head
                $quantity_out=0;
                $weight_out=0;
                foreach ($list as $l){
                   $faroutpackage=Faroutpackage::find('order_id = ?',$l['order_id'])->getAll();
                   foreach ($faroutpackage as $far){
                       $quantity_out +=$far->quantity_out;
                       $weight_out += ($far->quantity_out * $far->weight_out);
                   }
                }
                $objExcel = new PHPExcel();
                $sheet = $objExcel->getActiveSheet();
                $sheet->setCellValue('A1', 'MV1809');
                $sheet->mergeCells('A2:P2');
                $sheet->getStyle('A2:P2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $sheet->setCellValue('A2', '进出口报关数据');
                $sheet->getStyle('A2:P2')->getFont()->setSize(20);
                $sheet->setCellValue('A3', '总单号');
                $sheet->setCellValue('C3', '航班');
                $sheet->setCellValue('E3','航班日期');
                $sheet->setCellValue('G3','总单件数');
                $sheet->setCellValue('H3',$quantity_out);
                $sheet->setCellValue('I3','总单重量');
                $sheet->setCellValue('J3',$weight_out);
                $sheet->setCellValue('K3','进出口标志');
                $sheet->setCellValue('L3','E');
                $sheet->setCellValue('M3','经停城市');
                $sheet->setCellValue('A4','序号');
                $sheet->setCellValue('B4','运单号码');
                $sheet->setCellValue('C4','件数');
                $sheet->setCellValue('D4','重量(KG)');
                $sheet->mergeCells('E4:M4');
                $sheet->getStyle('E4:M4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $sheet->setCellValue('E4', '商品信息');
                $sheet->setCellValue('N4','通关方式');
                $sheet->setCellValue('O4','经营单位代码');
                $sheet->setCellValue('P4','经营单位名称');
                $sheet->setCellValue('Q4','经营单位统一社会信用代码');
                $sheet->setCellValue('R4','尺寸(CM)');
                $sheet->setCellValue('S4','装袋号');
                $sheet->mergeCells('T4:AA4');
                $sheet->getStyle('T4:AA4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $sheet->setCellValue('T4', '收货人资料');
                $sheet->mergeCells('AB4:AI4');
                $sheet->getStyle('AB4:AI4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $sheet->setCellValue('AB4', '发货人资料');
                $sheet->mergeCells('AJ4:AQ4');
                $sheet->getStyle('AJ4:AQ4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                $sheet->setCellValue('AJ4', '英文收发货人资料（进口为发件人，出口为收件人）');
                $sheet->setCellValue('E5','中文品名');
                $sheet->setCellValue('F5','英文品名');
                $sheet->setCellValue('G5','HS税号');
                $sheet->setCellValue('H5','商品数量');
                $sheet->setCellValue('I5','计量单位');
                $sheet->setCellValue('J5','申报要素');
                $sheet->setCellValue('K5','商品重量(KG)');
                $sheet->setCellValue('L5','总价值');
                $sheet->setCellValue('M5','币种');
                $sheet->setCellValue('T5','收件人');
                $sheet->setCellValue('U5','电话');
                $sheet->setCellValue('V5','社会信用代码');
                $sheet->setCellValue('W5','公司');
                $sheet->setCellValue('X5','地址');
                $sheet->setCellValue('Y5','城市');
                $sheet->setCellValue('Z5','国家');
                $sheet->setCellValue('AA5','邮编');
                $sheet->setCellValue('AB5','发件人');
                $sheet->setCellValue('AC5','电话');
                $sheet->setCellValue('AD5','社会信用代码');
                $sheet->setCellValue('AE5','公司');
                $sheet->setCellValue('AF5','地址');
                $sheet->setCellValue('AG5','城市');
                $sheet->setCellValue('AH5','国家');
                $sheet->setCellValue('AI5','邮编');
                $sheet->setCellValue('AJ5','收发货人');
                $sheet->setCellValue('AK5','电话');
                $sheet->setCellValue('AL5','社会信用代码');
                $sheet->setCellValue('AM5','公司');
                $sheet->setCellValue('AN5','地址');
                $sheet->setCellValue('AO5','城市');
                $sheet->setCellValue('AP5','国家');
                $sheet->setCellValue('AQ5','邮编');
                $i=1;
                $j=6;
                foreach ($list as $li){
                    $quantity=0;$weight=0;
                    $package=Faroutpackage::find('order_id = ?',$li['order_id'])->getAll();
                    foreach ($package as $pa){
                        $quantity +=$pa->quantity_out;
                        $weight += ($pa->quantity_out * $pa->weight_out);
                    }
                    $orderproduct=Orderproduct::find('order_id = ?',$li['order_id'])->order('product_quantity')->getAll();
                    $price=0;
                    foreach ($orderproduct as $product){
                        $price += ($product->product_quantity * $product->declaration_price);
                    }
                    $quantity=Faroutpackage::find('order_id = ?',$li['order_id'])->getSum('quantity_out');
                    $sheet->setCellValue("A$j",$i);
                    $sheet->setCellValue("B$j",$li['tracking_no']);
                    $sheet->setCellValue("C$j",$quantity);
                    $sheet->setCellValue("D$j",sprintf('%.3f',$weight));
                    $sheet->setCellValue("E$j",$product->product_name_far);
                    $sheet->setCellValue("F$j",$product->product_name_en_far);
                    $sheet->setCellValue("G$j","'".$product->hs_code_far);
                    $sheet->setCellValue("H$j",$product->product_quantity);
                    $sheet->setCellValue("K$j",sprintf('%.3f',$weight));
                    $sheet->setCellValue("L$j",sprintf('%.2f',$price));
                    $sheet->setCellValue("M$j",'USD');
                    $sheet->setCellValue("N$j",'C');
                    $sheet->setCellValue("O$j",'3122460CG1');
                    $sheet->setCellValue("P$j",'上海网兴国际贸易有限公司');
                    $sheet->setCellValue("Q$j",'91310000743796249L');
                    $sheet->setCellValue("R$j",'null');
                    $subcode=Subcode::find('sub_code = ?',$li['tracking_no'])->getOne();
                    $sheet->setCellValue("S$j",!$subcode->isNewRecord()?$subcode->pallet_no:'');
                    $sheet->setCellValue("T$j",$li['consignee_name1']);
                    $consignee_mobile=str_replace(array('*','.','-','"','+'), '', $li['consignee_mobile']);
                    $sheet->setCellValue("U$j","'".$consignee_mobile);
                    $sheet->setCellValue("V$j",'null');
                    $sheet->setCellValue("W$j",trim($li['consignee_name2'])?$li['consignee_name2']:$li['consignee_name1'].' CO., LTD.');
                    $sheet->setCellValue("X$j",$li['consignee_street1'].' '.$li['consignee_street2']);
                    $sheet->setCellValue("Y$j",$li['consignee_city']);
                    $sheet->setCellValue("Z$j",$li['consignee_country_code']);
                    $sheet->setCellValue("AA$j","'".$li['consignee_postal_code']);
                    $sender_name1=Helper_Chinese::toPinYin($li['sender_name1']);
                    $sender_name1=strtoupper(substr($sender_name1, 0,1)).substr($sender_name1, 1);   
                    $sheet->setCellValue("AB$j",$sender_name1);
                    $sender_mobile=str_replace(array('*','.','-','"','+'), '', $li['sender_mobile']);
                    $sheet->setCellValue("AC$j","'".$sender_mobile);
                    $sheet->setCellValue("AD$j",'NULL');
                    $sheet->setCellValue("AE$j",$li['sender_name2']);
                    $sheet->setCellValue("AF$j",$li['sender_street1'].' '.$li['sender_street2']);
                    $sheet->setCellValue("AG$j",$li['sender_city']);
                    $sheet->setCellValue("AH$j",$li['sender_country_code']);
                    $sheet->setCellValue("AI$j","'".$li['sender_postal_code']);
                    $sheet->setCellValue("AJ$j",$li['consignee_name1']);
                    $sheet->setCellValue("AK$j","'".$consignee_mobile);
                    $sheet->setCellValue("AL$j",'NULL');
                    $sheet->setCellValue("AM$j",trim($li['consignee_name2'])?$li['consignee_name2']:$li['consignee_name1'].' CO., LTD.');
                    $sheet->setCellValue("AN$j",$li['consignee_street1'].' '.$li['consignee_street2']);
                    $sheet->setCellValue("AO$j",$li['consignee_city']);
                    $sheet->setCellValue("AP$j",$li['consignee_country_code']);
                    $sheet->setCellValue("AQ$j","'".$li['consignee_postal_code']);
                    $i++;$j++;
                }
                header ( 'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' );
                @$objWriter = PHPExcel_IOFactory::createWriter ( $objExcel, 'Excel2007' );
                header('Content-Disposition: attachment;filename=上海快件出口预报数据.xlsx');
                header('Cache-Control: max-age=0');
                try {
                    @$objWriter->save('php://output');
                } catch (PHPExcel_Writer_Exception $ex) {
                    $tmpF = INDEX_DIR . DS . '_tmp' . DS . 'upload' . DS . 'tmp' . time() . '.xlsx';
                    @$objWriter->save($tmpF);
                    readfile($tmpF);
                    unlink($tmpF);
                }
                exit();
            }
        }
    }
    
	//如果是青岛的普货，出库之后部门修改为上海
	function changqdtosh($order){
		if(in_array($order->service_code, array('Express_Standard_Global','US-FY')) && $order->department_id=='23' && MyApp::currentUser('department_id') <> '23'){
			$order->department_id=MyApp::currentUser('department_id');
		}
	}
	//获取件数
	function actionCodeprint(){
		if(request("ali_order_no")){
			$data=array();
			$order=Order::find("ali_order_no=?",request("ali_order_no"))->getOne();
			$package_number = Orderpackage::find("order_id = ?",$order->order_id)->getSum('quantity');
			if($order->isNewRecord()){
				$data['message']='nooder';
			}else{
			    if($package_number>0){
			       $data['message']='success';
			       $data['quantity']=$package_number;
			    }else{
			       $data['message']='nopackage';
			    }
			}
			echo json_encode($data);
			exit();
		}
	}
	//条码打印
	function actionQuantityprint(){
	    if(request("ali_order_no") && request("quantity")){
	        $data=array();
	        if(request("quantity")<=0){
	            $data['message']='errorpackage';
	        }else{
	            $order = Order::find('ali_order_no = ?',request("ali_order_no"))->getOne();
	            if($order->isNewRecord()){
	               $data['message']='nooder';
	            }
	            $package_number=request("quantity");
	            $dir=Q::ini('upload_tmp_dir');
	            for ($i=1;$i<=$package_number;$i++){
	                $ali_order_no=request("ali_order_no");
	                if($i>1){
	                    $ali_order_no=$ali_order_no.'-'.$i;
	                }
	                $jsonFile=$dir.DS.$ali_order_no.'.json';
	                file_put_contents($jsonFile, json_encode(array(
	                'ali_order_no'=>$ali_order_no,
	                )));
	            }
	            $data['message']='success';
	        }
	    }else{
	        $data['message']='missingmsg';
	    }
	    echo json_encode($data);
	    exit();
	}
	//总单列表
	function actionTotallist(){
	   $dpms = Department::find()->getAll()->toHashMap('department_id','department_name');
	   $staffrole=StaffRole::find('staff_id = ? and role_id in (?)',MyApp::currentUser('staff_id'),array("1","7"))->getOne();
	   if($staffrole->isNewRecord()){
	       $total_list = Totallist::find('department_id = ?',MyApp::currentUser('department_id'));
	   }else {
	       $total_list = Totallist::find();
	   }
	   if(request('timetype')=='1'){
	      //创建时间
	      if(request('start_date',date('Y-m-d'))){
	         $total_list->where('record_order_date >= ?',strtotime(request('start_date',date('Y-m-d')).'00:00:00'));
	      }
	      if(request('end_date')){
	         $total_list->where('record_order_date <= ?',strtotime(request('end_date').'23:59:59'));
	      }
	   }else{
          //创建时间
          if(request('start_date',date('Y-m-d'))){
             $total_list->where('create_time >= ?',strtotime(request('start_date',date('Y-m-d')).'00:00:00'));
          }
          if(request('end_date')){
             $total_list->where('create_time <= ?',strtotime(request('end_date').'23:59:59'));
          }
	   }
	   //仓库
	   if(request('department_id')){
	       $total_list->where('department_id = ?',request('department_id'));
	   }
	   //总单单号
	   if(request('total_list_no')){
	      $total_list_no=explode("\r\n", request('total_list_no'));
	      $total_list_no=array_filter($total_list_no);//去空
	      $total_list_no=array_unique($total_list_no);//去重
	      $total_list->where('total_list_no in (?)',$total_list_no);
	   }
	   $cp_total_list = clone $total_list;
	   $cp_total_list_no = $cp_total_list->setColumns('total_list_no')->asArray()->getAll();
	   $cp_nos = Helper_Array::getCols($cp_total_list_no, 'total_list_no');
	   $order_count=0;$weight_cost_out=0;$far_out_package=0;
	   if(count($cp_total_list_no)>0){
    	   $order = Order::find('total_list_no in (?)',$cp_nos)->setColumns('order_id');
    	   $orders = $order->asArray()->getAll();
    	   $order_id = Helper_Array::getCols($orders, 'order_id');
    	   $order_count = count($order_id);
    	   $weight_cost_out = $order->getSum('weight_cost_out');
    	   if($order_count>0){
    	       $far_out_package = Faroutpackage::find('order_id in (?)',$order_id)->getSum('quantity_out');
    	   }  
	   }
	   if(request('exp')=='exp'){
                ini_set('max_execution_time', '0');
                ini_set('memory_limit', '-1');
                set_time_limit(0);
    			$list=clone $total_list;
            	$lists=$list->getAll();
            	$header = array (
            	    '发件人',
            	    '仓库',
            	    '总单单号',
            	    '渠道分租',
            	    '国家',
            	    '总票数',
            	    '总件数',
            	    '总计费重',
            	    '操作人',
            	    '操作日期'
            	);
            	$sheet = array (
            		$header
            	);
            	foreach ($lists as $value){
            	    $order = Order::find('total_list_no = ?',$value->total_list_no)->setColumns('order_id');
            	    $orders = $order->asArray()->getAll();
            	    $order_id = Helper_Array::getCols($orders, 'order_id');
            	    $order_count = count($order_id);
            	    $weight_cost_out = $order->getSum('weight_cost_out');
            	    $far_out_package = 0;
            	    if($order_count>0){
            	        $far_out_package = Faroutpackage::find('order_id in (?)',$order_id)->getSum('quantity_out');
            	    }
    				$row =array(
    				    Helper_Util::strDate('Y-m-d H:i:s', $value->record_order_date),
    				    $value->department_id?$dpms[$value->department_id]:'',
    				    $value->total_list_no,
    				    $value->channel_group->channel_group_name,
    				    $value->country_code,
    				    $order_count,
    				    $far_out_package,
    				    $weight_cost_out,
    				    $value->operation_name,
    				    Helper_Util::strDate('Y-m-d H:i:s', $value->operation_time)
            		);
    				$sheet [] = $row;
            	}
            	Helper_ExcelX::array2xlsx ( $sheet, '交货核查导出列表' );
            	exit ();
		    }
	   $pagination = null;
	   $total_list=$total_list->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	   ->fetchPagination ( $pagination )->getAll();
	   $this->_view['total_list']=$total_list;
	   $this->_view['pagination']=$pagination;
	   $this->_view['dpms']= $dpms;
	   $this->_view['order_count']=$order_count;
	   $this->_view['weight_cost_out']=$weight_cost_out;
	   $this->_view['far_out_package']=$far_out_package;
	}
	//完成操作
	function actionFinished(){
	    $total_list = Totallist::find('total_list_no = ?',request('total_list_no'))->getOne();
	    if(!$total_list->isNewRecord()){
	       $total_list->status = '1';
	       $total_list->save();
	       return $this->_redirect(url('warehouse/totallist'));
	    }else{
	       return $this->_redirectMessage('数据缺失', '', url('warehouse/totallist')); 
	    }
	}
	//删除
	function actionDeltotal(){
	    $totallist = Totallist::find('total_list_no = ?',request('total_list_no'))->getOne();
	    if($totallist->isNewRecord()){
	        return false;
	    }else{
	        $totallist->destroy();
	        return 'delsuccess'; 
	    }
	}
	function actionTotaldetail(){
	    if (substr(request('total_list_no'),0,2)=='FR'){
            $total = Totallist::find('total_list_no = ?',request('total_list_no'))->getOne();
            if ($total->isNewRecord() ){
                return $this->_redirect('错误','未找到相关单号',url('warehouse/totallist'));
            }
            $orders = Order::find('total_list_no = ?',request('total_list_no'));
            //订单号、末端单号
            if(request('order_no')){
               $orders->where('ali_order_no = ? or tracking_no = ?',request('order_no'),request('order_no'));
            }
            //时间
            if(request('start_date')){
               $orders->where('warehouse_out_time >= ?',strtotime(request('start_date').':00'));
            }
            if(request('end_date')){
               $orders->where('warehouse_out_time <= ?',strtotime(request('end_date').':00'));
            }
            //产品
            if(request('service_code')){
               $orders->where('service_code = ?',request('service_code'));
            }
            //国建
            if(request('consignee_country_code')){
               $orders->where('consignee_country_code = ?',request('consignee_country_code'));
            }
            //网络
            if(request('network_code')){
               $orders->joinLeft('tb_channel', '' ,'tb_channel.channel_id=tb_order.channel_id')->where('tb_channel.network_code=?',request('network_code'));
            }
            //渠道
            if(request('channel_id')){
                $orders->where('channel_id=?',request('channel_id'));
            }
            //导出
            if(request('export')=='exportlist'){
                ini_set('max_execution_time', '0');
                ini_set('memory_limit', '2G');
                set_time_limit(0);
    			$list=clone $orders;
            	$lists=$list->getAll();
            	$i = 0;
            	$weight_cost = 0;
            	$total_quantity = 0;
            	$total_actual_weight = 0;
            	$total_cost_weight = 0;
            	$header = array (
            	    'No',
            	    '总单单号',
            	    '订单号',
            	    '末端单号',
            	    '件数',
            	    '实重',
            	    '长*宽*高',
            	    '计费重',
            	    '销售产品',
            	    '渠道',
            	    '国家',
            	    '交货日期',
            	    '状态',
            	    '订单轨迹',
            	    'P/S'
            	);
            	$sheet = array (
            		$header
            	);
            	$status=array('1'=>'未入库','2'=>'已取消','3'=>'已退货','4'=>'已支付','5'=>'已入库','6'=>'已打印','7'=>'已出库','8'=>'已提取','9'=>'已签收','10'=>'已查验','11'=>'待退货','12'=>'已扣件','13'=>'已结束','14'=>'已分派','15'=>'已取件','16'=>'已网点已入库');
            	foreach ($lists as $value){
            	    $route=Route::find('tracking_no=?',$value->tracking_no)->order('time desc')->getOne();
            	    $package_quantity = Faroutpackage::find('order_id = ?',$value->order_id)->getSum('quantity_out');
            	    $sub_code = Subcode::find('order_id = ?',$value->order_id)->setColumns('sub_code')
            	              ->getAll()->getCols('sub_code');
//             	    dump($sub_code);exit();
                    $j=0;
            	    foreach ($value->faroutpackages as $v){
            	        $weight_v=floor($v->length_out)*floor($v->width_out)*floor($v->height_out)/5000;
            	        if($v->weight_out>$weight_v){
            	           $weight_cost = $v->weight_out;
            	        }else{
            	           $weight_cost = $weight_v;
            	        }
            	        $actual_ceil_weight = ceil($v->weight_out/0.5)*0.5;
            	        for($a=0;$a<$v->quantity_out;$a++){
                	        $row =array(
                	            "'".++$i,
                	            $value->total_list_no,
                	            $value->ali_order_no,
                	            isset($sub_code[$j])?"'".$sub_code[$j]:'',
                	            $package_quantity,
                	            $v->weight_out,
                	            floor($v->length_out).'*'.floor($v->width_out).'*'.floor($v->height_out),
                	            round($weight_cost,4),
                	            $value->service_product->product_chinese_name,
                	            $value->channel->channel_name,
                	            $value->consignee_country_code,
                	            Helper_Util::strDate('Y-m-d', $value->record_order_date),
                	            $status[$value->order_status],
                	            $route->description,
                	            $weight_cost-$actual_ceil_weight>0?'P':'S'
                	        );
                	        $j++;
        				    $sheet[] = $row;
        				    $total_actual_weight += $v->weight_out;
        				    $total_cost_weight += $weight_cost;
            	        }
            	    }
            	    $total_quantity += $package_quantity;
            	}
            	$sheet [] = array('','','','总计',$total_quantity,$total_actual_weight,'',round($total_cost_weight,4));
            	Helper_ExcelX::array2xlsx ( $sheet, request('total_list_no').'导出列表' );
            	exit ();
		    }
            $pagination = null;
            $orders=$orders->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
            ->fetchPagination ( $pagination )->getAll();
            $this->_view['total']=$total;
            $this->_view['orders']=$orders;
            $this->_view['pagination']=$pagination;
	    }else{
	        exit('error total_list_no');
	    }
	}
	
	/**
	 * 华磊订单导入
	 */
	function actionhlimport(){
	    set_time_limit(0);
	    ini_set('memory_limit', '-1');//不限制内存
	    if(request_is_post ()){
	        $errors = array ();
	        $uploader = new Helper_Uploader();
	        //检查指定名字的上传对象是否存在
	        if (! $uploader->existsFile ( 'file' )) {
	            return $this->_redirectMessage('未上传文件','',url('test/testimport'));
	        }
	        $file = $uploader->file ( 'file' );//获得文件对象
	        if (! $file->isValid ( 'xls,xlsx' )) {
	            return $this->_redirectMessage('文件格式不正确：xls、xlsx','',url('test/testimport'));
	        }
	        $des_dir = Q::ini ( 'upload_tmp_dir' );//缓存路径
	        $filename = date ( 'YmdHis' ).'ExpenseImport.'.$file->extname ();
	        $file_route = $des_dir.DS.$filename;
	        $file->move ( $file_route );
	        ini_set ( "memory_limit", "3072M" );
	        $xls = Helper_Excel::readFile ($file_route,true);
	        $sheet =$xls->toHeaderMap ();
	        //删除空单元
// 	        Helper_Array::removeEmpty ( $sheet );
	        //导入的表中有数据
	        $arr=array();
	        foreach ($sheet as $key => $row){
                if(!strlen($row ['原单号'])){
                    continue;
                }
	            $order = Order::find('ali_order_no = ?',$row ['原单号'])->getOne();
	            if(!$order->isNewRecord()){
	                $arr[$key]['原单号']=$row ['原单号'];
	                $arr[$key]['结果']='失败';
	                $arr[$key]['信息']='订单已存在';
	                continue;
	            }
	            if(!strlen($row ['国家名称'])){
	                $arr[$key]['原单号']=$row ['原单号'];
	                $arr[$key]['结果']='失败';
	                $arr[$key]['信息']='国家名称必填';
	                continue;
	            }
	            $country=Country::find('chinese_name = ?',$row ['国家名称'])->getOne();
	            if(!strlen($row ['客户代码'])){
	                $arr[$key]['原单号']=$row ['原单号'];
	                $arr[$key]['结果']='失败';
	                $arr[$key]['信息']='客户代码必填';
	                continue;
	            }
	            $customer=Customer::find('customs_code = ?',$row ['客户代码'])->getOne();
	            if($customer->isNewRecord()){
	                $arr[$key]['原单号']=$row ['原单号'];
	                $arr[$key]['结果']='失败';
	                $arr[$key]['信息']='客户代码不存在';
	                continue;
	            }
	            if(!isset($row['应收金额']) || ($row['应收金额']==0 || $row['应收金额']=='')){
	                $arr[$key]['原单号']=$row ['原单号'];
	                $arr[$key]['结果']='失败';
	                $arr[$key]['信息']='应收金额不能为0';
	                continue;
	            }
	            if(!isset($row['应付金额']) || ($row['应付金额']==0 || $row['应付金额']=='')){
	                $arr[$key]['原单号']=$row ['原单号'];
	                $arr[$key]['结果']='失败';
	                $arr[$key]['信息']='应付金额不能为0';
	                continue;
	            }
	            //将数据存入数据库
	            $order->ali_order_no=$row['原单号'];
	            $order->tracking_no=$row['转单号'];
	            $order->service_code='EMS-FY';
	            $order->consignee_country_code=$country->code_word_two;
	            $order->consignee_postal_code=$row['邮编'];
	            $order->weight_income_in=$row['收计费重'];
	            $order->weight_actual_in=$row['收货实重'];
	            $order->weight_cost_out=$row['出计费重'];
	            $order->weight_actual_out=$row['出货实重'];
	            $order->department_id='20';
	            $order->channel_id='15';
	            $order->customer_id=$customer->customer_id;
	            $order->warehouse_out_time=time();
	            $order->order_status='9';
	            $order->save();
	            Fee::meta()->destroyWhere('order_id =?',$order->order_id);
                $fee1 = new Fee();
                $fee1->order_id = $order->order_id;
                $fee1->fee_type = 1;
                $fee1->fee_item_code = 'logisticsExpressASP_EX0001';
                $fee1->fee_item_name = '基础运费';
                $fee1->quantity = 1;
                $fee1->amount = $row ['应收金额'];
                $fee1->save();
                $fee2 = new Fee();
                $fee2->order_id = $order->order_id;
                $fee2->fee_type = 2;
                $fee2->fee_item_code = 'logisticsExpressASP_EX0001';
                $fee2->fee_item_name = '基础运费';
                $fee2->quantity = 1;
                $fee2->amount = $row ['应付金额'];
                $fee2->save();
                $arr[$key]['原单号']=$row ['原单号'];
                $arr[$key]['结果']='成功';
                $arr[$key]['信息']='';
	        }
	        $this->_view['sheet']=$arr;
	    }
	}
	/**
	 * 包裹启程扫描
	 */
	function actionTotaloutlist(){
	    $staffrole=StaffRole::find('staff_id = ? and role_id in (?)',MyApp::currentUser('staff_id'),array("1","7"))->getOne();
	    if($staffrole->isNewRecord()){
	       $total_out_list = Totaloutlist::find('out_department_id = ?',MyApp::currentUser('department_id'));
	    }else{
	       $total_out_list = Totaloutlist::find();
	    }
	    
	    $dpms = Department::find()->getAll()->toHashMap('department_id','department_name');
	    //创建时间
	    if(request('start_date',date('Y-m-d'))){
	        $total_out_list->where('create_time >= ?',strtotime(request('start_date',date('Y-m-d')).'00:00:00'));
	    }
	    if(request('end_date')){
	        $total_out_list->where('create_time <= ?',strtotime(request('end_date').'23:59:59'));
	    }
	    //抵达仓
	    if(request('in_department_id')){
	        $total_out_list->where('in_department_id = ?',request('in_department_id'));
	    }
	    //总单单号
	    if(request('total_no')){
	        $total_no=explode("\r\n", request('total_no'));
	        $total_no=array_filter($total_no);//去空
	        $total_no=array_unique($total_no);//去重
	        $total_out_list->where('total_no in (?)',$total_no);
	    }
	    if(request('export')=='export'){
	        $list=clone $total_out_list;
	        //设置导出表单head
	        $sheet = array ( array('总单号','启程仓','抵达仓','产品','总票数','总件数','总实重','总计费重',
	            '转运方式','转运单号','收件人','电话','地址','操作人','操作日期'));
	        $details=$list->getAll ();
	        foreach ($details  as $v ) {
	            $order_count=0;$weight_cost=0;$weight_actual=0;$quantity=0;$quantity_sum=0;
	            foreach ($v->totalorderout as $value){
    		       $order_count++;
    		       if($value->order->order_id){
    		          $faoutpackage = Faroutpackage::find('order_id = ?',$value->order->order_id)->asArray()->getAll();
    		          if(count($faoutpackage)>0){
    		             $weight_cost+=$value->order->weight_cost_out;
    		             $weight_actual+=$value->order->weight_actual_out;
    		             $quantity = Faroutpackage::find('order_id = ?',$value->order->order_id)->getSum('quantity_out');
    		          }else{
        		         $weight_cost+=$value->order->weight_income_in;
        		         $weight_actual+=$value->order->weight_actual_in;
               	         $quantity = Farpackage::find('order_id = ?',$value->order->order_id)->getSum('quantity');
    		          }
               	      $quantity_sum+=$quantity;
    		       }
        		}
	            $service_cn = Helper_Array::toHashmap(Product::find()->asArray()->getAll(),'product_name','product_chinese_name');
	            $service_name = array();
	            foreach (explode(',', $v->service_code) as $value){
	                $service_name[] = @$service_cn[$value];
	            }
	            $service_name_cn = implode(',', $service_name);
	            $sheet [] = array (
	                $v->total_no,
	                $dpms[$v->out_department_id],
	                $dpms[$v->in_department_id],
	                $service_name_cn,
	                $order_count,
	                $quantity_sum,
	                $weight_actual,
	                $weight_cost,
	                $v->express_company,
	                $v->express_no,
	                $v->consignee_name,
	                $v->consignee_phone,
	                $v->consignee_address,
	                $v->operation_name,
	                Helper_Util::strDate('Y-m-d H:i:s', $v->operation_time),
	            );
	        }
	        Helper_Excel::array2xls ( $sheet,'包裹启程扫描导出'.date('Ymd',time()).'.xlsx' );
	        exit();
	    }
	    $pagination = null;
	    $total_out_list=$total_out_list->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )->getAll();
	    $this->_view['total_out_list']=$total_out_list;
	    $this->_view['pagination']=$pagination;
	    $this->_view['dpms']= $dpms;
	}
	function actionDeltotalout(){
	    $totallist = Totaloutlist::find('total_id = ?',request('total_id'))->getOne();
	    if($totallist->isNewRecord()){
	        return false;
	    }else{
	        $totallist->destroy();
	        return 'delsuccess'; 
	    }
	}
	/**
	 * 产品树
	 */
	function actionproducttree(){
	    $products=Product::find()->getAll();
	    $checkeds = array ();
	    if (request ( "checked" ) != null) {
	        $checkeds = explode ( ",", request ( "checked" ) );
	    }
	    $array = array ();
	    foreach($products as $product){
	        $array[]=array(
	            "id" => $product->product_name,
	            "text" => $product->product_chinese_name,
	            "checked" => in_array ( $product->product_name, $checkeds ) ? "checked" : "",
	            "attributes" => "",
	        );
	    }
	    echo json_encode($array);
	    exit();
	}
	/**
	 * 新增、修改包裹启程扫描
	 */
	function actionEdittatolout(){
	    if (strlen(request ( "total_id" ))>0) {
	        $totalout = Totaloutlist::find ( "total_id = ?", request ( "total_id" ) )->getOne ();
	    }else{
	        $totalout = new Totaloutlist();
	        $now='DF'.date('Ymd');
	        $seq = Helper_Seq::nextVal ( $now );
	        if ($seq < 1) {
	            Helper_Seq::addSeq ( $now );
	            $seq = 1;
	        }
	        $far_no=$now.sprintf("%03d",$seq);
	        $totalout->total_no = $far_no;
	    }
	
	    if (request_is_post ()) {
	        $conn = QDB::getConn ();
	        $conn->startTrans ();
	        $totalout->out_department_id = MyApp::currentUser('department_id');
	        $totalout->in_department_id = request ( "in_department_id" );
	        if(request ( "product" )){
	            $product = request ( "product" );
	            sort($product);
	            $totalout->service_code = implode(',',$product);
	        }
	        $totalout->consignee_name = request('consignee_name');
	        $totalout->consignee_phone = request('consignee_phone');
	        $totalout->consignee_address = request('consignee_address');
	        $totalout->express_company = request('express_company');
	        $totalout->express_no = request('express_no');
	        $totalout->operation_name = MyApp::currentUser('staff_name');
	        $totalout->operation_time = time();
	        $totalout->save ();
	        $conn->completeTrans ();
	        return $this->_redirectMessage ( "包裹启程扫描保存", "保存成功", url ( "warehouse/edittatolout",array(
	            'total_id'=>$totalout->total_id
	        )) );
	    }
	    $this->_view ["totalout"] = $totalout;
	    $this->_view ["order_count"] = count($totalout->totalorderout);;
	    $this->_view['dpms']= Department::find()->getAll()->toHashMap('department_id','department_name');
	}
	//完成
	function actionOutfinished(){
	    $total_out_list = Totaloutlist::find('total_no = ?',request('total_no'))->getOne();
	    if(!$total_out_list->isNewRecord()){
	        $total_out_list->status = '1';
	        $total_out_list->save();
	        return $this->_redirect(url('warehouse/totaloutlist'));
	    }else{
	        return $this->_redirectMessage('数据缺失', '', url('warehouse/totaloutlist'));
	    }
	}
	function actionTotalinlist(){
	    $staffrole=StaffRole::find('staff_id = ? and role_id in (?)',MyApp::currentUser('staff_id'),array("1","7"))->getOne();
	    if($staffrole->isNewRecord()){
	       $total_in_list = Totalinlist::find('in_department_id = ?',MyApp::currentUser('department_id'));
	    }else{
	       $total_in_list = Totalinlist::find();
	    }
	    $dpms = Department::find()->getAll()->toHashMap('department_id','department_name');
	    //创建时间
	    if(request('start_date',date('Y-m-d'))){
	        $total_in_list->where('create_time >= ?',strtotime(request('start_date',date('Y-m-d')).'00:00:00'));
	    }
	    if(request('end_date')){
	        $total_in_list->where('create_time <= ?',strtotime(request('end_date').'23:59:59'));
	    }
	    //启程仓
	    if(request('out_department_id')){
	        $total_in_list->where('out_department_id = ?',request('out_department_id'));
	    }
	    //总单单号
	    if(request('total_no')){
	        $total_no=explode("\r\n", request('total_no'));
	        $total_no=array_filter($total_no);//去空
	        $total_no=array_unique($total_no);//去重
	        $total_in_list->where('total_no in (?)',$total_no);
	    }
	    if(request('export')=='export'){
	        $list=clone $total_in_list;
	        //设置导出表单head
	        $sheet = array ( array('总单号','启程仓','抵达仓','启程总单号','总票数','总件数','总实重','总计费重','操作人','操作日期'));
	        $details=$list->getAll ();
	        foreach ($details  as $v ) {
	            $order_count=0;$weight_cost=0;$weight_actual=0;$quantity=0;$quantity_sum=0;
	            foreach ($v->totalorderin as $value){
    		       $order_count++;
    		       if($value->order->order_id){
    		          $faoutpackage = Faroutpackage::find('order_id = ?',$value->order->order_id)->asArray()->getAll();
    		          if(count($faoutpackage)>0){
    		             $weight_cost+=$value->order->weight_cost_out;
    		             $weight_actual+=$value->order->weight_actual_out;
    		             $quantity = Faroutpackage::find('order_id = ?',$value->order->order_id)->getSum('quantity_out');
    		          }else{
        		         $weight_cost+=$value->order->weight_income_in;
        		         $weight_actual+=$value->order->weight_actual_in;
               	         $quantity = Farpackage::find('order_id = ?',$value->order->order_id)->getSum('quantity');
    		          }
               	      $quantity_sum+=$quantity;
    		       }
        		}
	            $sheet [] = array (
	                $v->total_no,
	                $dpms[$v->out_department_id],
	                $dpms[$v->in_department_id],
	                $v->service_code,
	                $order_count,
	                $quantity_sum,
	                $weight_actual,
	                $weight_cost,
	                $v->operation_name,
	                Helper_Util::strDate('Y-m-d H:i:s', $v->operation_time),
	            );
	        }
	        Helper_Excel::array2xls ( $sheet,'包裹抵达扫描导出'.date('Ymd',time()).'.xlsx' );
	        exit();
	    }
	    $pagination = null;
	    $total_in_list=$total_in_list->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )->getAll();
	    $this->_view['total_in_list']=$total_in_list;
	    $this->_view['pagination']=$pagination;
	    $this->_view['dpms']= $dpms;
	}
	function actionDeltotalin(){
	    $totallist = Totalinlist::find('total_no = ?',request('total_no'))->getOne();
	    if($totallist->isNewRecord()){
	        return false;
	    }else{
	        $totallist->destroy();
	        return 'delsuccess'; 
	    }
	}
	function actionEdittatolin(){
	    if (strlen(request ( "total_id" ))>0) {
	        $totalin = Totalinlist::find ( "total_id = ?", request ( "total_id" ) )->getOne ();
	    }else{
	        $totalin = new Totalinlist();
	        $now='AF'.date('Ymd');
	        $seq = Helper_Seq::nextVal ( $now );
	        if ($seq < 1) {
	            Helper_Seq::addSeq ( $now );
	            $seq = 1;
	        }
	        $far_no=$now.sprintf("%03d",$seq);
	        $totalin->total_no = $far_no;
	    }
	    $totallist = array();
	    if(request('out_department_id')){
	       $totalout=Totaloutlist::find('out_department_id = ? and in_department_id=?',request('out_department_id'),MyApp::currentUser('department_id'))
	       ->joinLeft('tb_total_orderout', '','tb_total_out.total_no=tb_total_orderout.total_no');
	       $totalout->where('tb_total_orderout.state = "0"');
	       $totalout_no=$totalout->group('total_no')->getAll();
	       foreach ($totalout_no as $v){
	           $totalinservice = Totalinlist::find("service_code = ?",$v->total_no)->getOne();
	           if($totalinservice->isNewRecord()){
    	           $totallist[] = array(
    	            "id" => $v->total_no,
    	            "text" => $v->total_no
    	           );
	           }else{
	               continue;
	           }
	       }
	    }
	    if (request('save')=='save') {
	        $totalin->in_department_id = MyApp::currentUser('department_id');
	        $totalin->out_department_id = request ( "out_department_id" );
            $totalin->service_code = request ( "service_code" );
	        $totalin->operation_name = MyApp::currentUser('staff_name');
	        $totalin->operation_time = time();
	        $totalin->save ();
	        return $this->_redirectMessage ( "包裹抵达扫描保存", "保存成功", url ( "warehouse/totalinlist" ) );
	    }
	    $this->_view ["totalin"] = $totalin;
	    $this->_view ["totalout"] = $totallist;
	    $this->_view ["order_count"] = count($totalin->totalorderin);
	    $this->_view['dpms']= Department::find()->getAll()->toHashMap('department_id','department_name');
	}
	function actioninfinished(){
	    $total_in_list = Totalinlist::find('total_no = ?',request('total_no'))->getOne();
	    if(!$total_in_list->isNewRecord()){
	        $orderout = Totalorderout::find('total_no = ? and state = "0"',$total_in_list->service_code)->asArray()->getAll();
	        if(count($orderout)>0){
	           return $this->_redirectMessage('存在未扫描订单', '', url('warehouse/totalinlist'));
	        }else{
	           $total_in_list->status = '1';
	           $total_in_list->save();
	           return $this->_redirect(url('warehouse/totalinlist'));
	        }
	    }else{
	        return $this->_redirectMessage('数据缺失', '', url('warehouse/totalinlist'));
	    }
	}
	function actionTotalindetail(){
	    $totalorderin = Totalorderin::find('total_no = ?',request('total_no'));
	    if(request('order_no')){
	        $totalorderin->where('ali_order_no = ? or tracking_no = ?',request('order_no'),request('order_no'));
	    }
	    if(request('export')=='exportlist'){
	        $list=clone $totalorderin;
	        //设置导出表单head
	        $sheet = array ( array('总单单号','阿里单号','末端单号','产品','件数','实重','目的国家'));
	        $details=$list->getAll ();
	        foreach ($details  as $v ) {
	            $weight = 0; $sum = 0;
	            if($v->order->order_id){
	                $quantity = Faroutpackage::find('order_id = ?',$v->order->order_id)->asArray()->getAll();
	                if(count($quantity) > 0){
	                    $weight = $v->order->weight_actual_out;
	                    $sum = Faroutpackage::find('order_id = ?',$v->order->order_id)->getSum('quantity_out');
	                }else{
	                    $weight = $v->order->weight_actual_in;
	                    $sum = Farpackage::find('order_id = ?',$v->order->order_id)->getSum('quantity');
	                }
	            }
	            $sheet [] = array (
	                $v->total_no,
	                $v->ali_order_no,
	                $v->tracking_no,
	                $v->order->service_code,
	                $sum,
	                $weight,
	                $v->order->consignee_country_code
	            );
	        }
	        Helper_Excel::array2xls ( $sheet,'包裹抵达扫描详情导出'.date('Ymd',time()).'.xlsx' );
	        exit();
	    }
	    $pagination = null;
	    $totalorderin=$totalorderin->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )->getAll();
	    $this->_view['lists']=$totalorderin;
	    $this->_view['total_no']=request('total_no');
	    $this->_view['pagination']=$pagination;
	}
	function actionTotaloutdetail(){
	    $totalorderout = Totalorderout::find('total_no = ?',request('total_no'));
	    if(request('order_no')){
	        $totalorderout->where('ali_order_no = ? or tracking_no = ?',request('order_no'),request('order_no'));
	    }
	    if(request('export')=='exportlist'){
	        $state = array('0'=>'未抵达','1'=>'已抵达');
	        $list=clone $totalorderout;
	        //设置导出表单head
	        $sheet = array ( array('状态','总单单号','阿里单号','末端单号','产品','件数','实重','目的国家'));
	        $details=$list->getAll ();
	        foreach ($details  as $v ) {
	            $weight = 0; $sum = 0; 
	            if($v->order->order_id){
	                $quantity = Faroutpackage::find('order_id = ?',$v->order->order_id)->asArray()->getAll();
	                if(count($quantity) > 0){
	                    $weight = $v->order->weight_actual_out;
	                    $sum = Faroutpackage::find('order_id = ?',$v->order->order_id)->getSum('quantity_out');
	                }else{
	                    $weight = $v->order->weight_actual_in;
	                    $sum = Farpackage::find('order_id = ?',$v->order->order_id)->getSum('quantity');
	                }
	            }
	            $sheet [] = array (
	                $state[$v->state],
	                $v->total_no,
	                $v->ali_order_no,
	                $v->tracking_no,
	                $v->order->service_code,
	                $sum,
	                $weight,
	                $v->order->consignee_country_code
	            );
	        }
	        Helper_Excel::array2xls ( $sheet,'包裹启程扫描详情导出'.date('Ymd',time()).'.xlsx' );
	        exit();
	    }
	    $pagination = null;
	    $totalorderout=$totalorderout->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )->getAll();
	    $this->_view['lists']=$totalorderout;
	    $this->_view['total_no']=request('total_no');
	    $this->_view['pagination']=$pagination;
	}
	/*
	 * 获取轨迹
	 */
	function route($order_id,$location,$context){
	    $dpms = Department::find()->getAll()->toHashMap('department_id','department_name');
	    $log = new OrderLog();
	    $log->order_id = $order_id;
	    $log->staff_id = MyApp::currentUser('staff_id');
	    $log->staff_name = MyApp::currentUser('staff_name');
	    $route = array(
	        'location'=>$dpms[$location],
	        'context'=>$context,
	        'time'=>time(),
	        'timezone'=>8
	    );
	    $log->comment = print_r($route,true);
	    $log->save();
	    return;
	}
	/*
	 * 包裹启程扫描
	 */
	function actionpackageout(){
	    $orderout=Totalorderout::find('total_no = ?',request('total_no'))->getAll();
	    if(request_is_post()){
	        $data=array();
	        $order_no=request('ali_order_no');
	        $total_no=request('total_no');
	        $total=Totaloutlist::find('total_no = ?',$total_no)->getOne();
	        $order= Order::find()->where('ali_order_no=? and department_id=? and service_code in (?)',$order_no,$total->out_department_id,explode(',', $total->service_code))->getOne();
	        if($order -> isNewRecord()){
	            $order= Order::find()->where('tracking_no=? and department_id=? and service_code in (?)',$order_no,$total->out_department_id,explode(',', $total->service_code))->getOne();
	            if($order -> isNewRecord()){
	                $order= Order::find()->where('total_list_no=? and department_id=? and service_code in (?)',$order_no,$total->out_department_id,explode(',', $total->service_code))->getAll();
	                if(count($order)==0){
	                    $total_in=Totalinlist::find('total_no = ? and in_department_id=?',$order_no,$total->out_department_id)->getOne();
	                    if($total_in->isNewRecord() || !$total_in->service_code){
	                        $data['message']='notexists';
	                        echo json_encode($data);
	                        exit();
	                    }
	                    if($total_in->status=='0'){
	                        $data['message']='wancheng';
	                        echo json_encode($data);
	                        exit();
	                    }
	                    $total_out=Totalorderout::find('total_no = ? ',$total_in->service_code)->getAll();
	                    if(count($total_out)==0){
	                        $data['message']='notexists';
	                        echo json_encode($data);
	                        exit();
	                    }
	                    foreach ($total_out as $ou){
	                        $out=Totalorderout::find('total_no = ? and ali_order_no=?',$total_no,$ou->ali_order_no)->getOne();
	                        if($out -> isNewRecord()){
	                            $out=new Totalorderout(array(
	                                'total_no'=>$total_no,
	                                'ali_order_no'=>$ou->ali_order_no,
	                                'tracking_no'=>$ou->tracking_no,
	                                'flag'=>$ou->flag
	                            ));
	                            $out->save();
	                            $order=Order::find('ali_order_no = ?',$ou->ali_order_no)->getOne();
	                            self::route($order->order_id,MyApp::currentUser('department_id'),'Departed warehouse');
	                        }
	                    }
	                }else {
	                    $to=Totallist::find('total_list_no = ?',$order_no)->getOne();
	                    if($to->status=='0'){
	                        $data['message']='wancheng';
	                        echo json_encode($data);
	                        exit();
	                    }
	                    $count=Order::find('total_list_no = ? ',$order_no)->getCount();
	                    if(count($order) <> $count){
	                        $data['message']='ckerror';
	                        echo json_encode($data);
	                        exit();
	                    }
	                    foreach ($order as $o){
	                        if($o->order_status <> '7'){
	                            $data['message']='stateeeror';
	                            echo json_encode($data);
	                            exit();
	                        }
	                    }
	                    foreach ($order as $o){
	                        $out=Totalorderout::find('total_no = ? and ali_order_no=?',$total_no,$o->ali_order_no)->getOne();
	                        if($out -> isNewRecord()){
	                            $out=new Totalorderout(array(
	                                'total_no'=>$total_no,
	                                'ali_order_no'=>$o->ali_order_no,
	                                'tracking_no'=>$o->tracking_no,
	                                'flag'=>'1'
	                            ));
	                            $out->save();
	                            self::route($o->order_id,MyApp::currentUser('department_id'),'Departed warehouse');
	                        }
	                    }
	                }
	            }else {
	                if(!in_array($order->order_status, array('6','7'))){
	                    $data['message']='stateeeror';
	                    echo json_encode($data);
	                    exit();
	                }
	                $out=Totalorderout::find('total_no = ? and ali_order_no=?',$total_no,$order->ali_order_no)->getOne();
	                if($out -> isNewRecord()){
	                    $out=new Totalorderout(array(
	                        'total_no'=>$total_no,
	                        'ali_order_no'=>$order->ali_order_no,
	                        'tracking_no'=>$order->tracking_no,
	                        'flag'=>'1'
	                    ));
	                    $out->save();
	                    self::route($order->order_id,MyApp::currentUser('department_id'),'Departed warehouse');
	                }
	            }
	        }else {
	            $err_status = array (
	                1 => '未入库',
	                3 => '已退货',
	                6 => '已打印',
	                7 => '已出库',
	                8 => '已提取',
	                9 => '已签收',
	                13 => '已结束'
	            );
	            if (array_key_exists ( $order->order_status, $err_status )) {
	                $data['message']='stateeeror';
	                echo json_encode($data);
	                exit();
	            }
	            $out=Totalorderout::find('total_no = ? and ali_order_no=?',$total_no,$order->ali_order_no)->getOne();
	            if($out -> isNewRecord()){
	                $out=new Totalorderout(array(
	                    'total_no'=>$total_no,
	                    'ali_order_no'=>$order->ali_order_no,
	                    'tracking_no'=>$order->tracking_no,
	                    'flag'=>'0'
	                ));
	                $out->save();
	                self::route($order->order_id,MyApp::currentUser('department_id'),'Departed warehouse');
	            }
                $err_status2 = array (
	                2 => '已取消',
	                11 => '待退货',
	                12 => '已扣件',
	            );
	            if (array_key_exists ( $order->order_status, $err_status2 )) {
	                $data['message']=$err_status2[$order->order_status];
	                echo json_encode($data);
	                exit();
	            }
	        }
	        $data['message']='success';
	        echo json_encode($data);
	        exit();
	    }
	    $this->_view['order']=$orderout;
	}
	/*
	 * 包裹抵达扫描
	 */
	function actionpackagein(){
	    $total_no=request('total_no');
	    $totalin=Totalinlist::find('total_no = ?',$total_no)->getOne();
	    $select = Totalorderout::find ( 'state = ?', '0' );
	    $account=request('service_code');
	    $select->where ( 'total_no = ?', $account );
	    $order = $select->asArray ()
	    ->getAll ();
	    //提交修改
	    if (request ( 'sub_code' )) {
	        $sub_code = explode ( "\r\n", request ( 'sub_code' ) );
	        foreach ($sub_code as $sub){
	            $orderin=Totalorderin::find('total_no = ? and (ali_order_no=? or tracking_no = ?)',$total_no,$sub,$sub)->getOne();
	            if($orderin -> isNewRecord()){
    	            $tborder=Order::find('ali_order_no = ? or tracking_no = ?',$sub,$sub)->getOne();
    	            $orderin=new Totalorderin(array(
    	                'total_no'=>$total_no,
    	                'ali_order_no'=>$tborder->ali_order_no,
    	                'tracking_no'=>$tborder->tracking_no
    	            ));
    	            $orderin->save();
    	            self::route($tborder->order_id,MyApp::currentUser('department_id'),'Received at warehouse');
	            }
	            $orderout=Totalorderout::find('total_no = ? and (ali_order_no=? or tracking_no = ?)',$account,$sub,$sub)->getOne();
	            $orderout->state=1;
	            $orderout->save();
	        }
            return $this->_redirectMessage ( '核对成功', '成功', url ( '/packagein' ,array('total_no'=>$total_no,'service_code'=>$account)), 3 );
	    }
	    $this->_view['order']=$order;
	    $this->_view['totalin']=$totalin;
	}
	//批量设置轨迹
	function actionTotaltrack(){
	   $total_list = TotalTrack::find();
	   //创建时间
       if(request('start_date')){
         $total_list->where('create_time >= ?',strtotime(request('start_date').'00:00:00'));
       }
       if(request('end_date')){
         $total_list->where('create_time <= ?',strtotime(request('end_date').'23:59:59'));
       }
	   //总单单号
	   if(request('total_list_no')){
	      $total_list_no=explode("\r\n", request('total_list_no'));
	      $total_list_no=array_filter($total_list_no);//去空
	      $total_list_no=array_unique($total_list_no);//去重
	      $total_list->where('total_list_no in (?)',$total_list_no);
	   }
	   if(request('addnewtotal') == 'addnewtotal'){
	      $new_totaltrack = new TotalTrack();
	      $new_totaltrack->total_list_no = date('YmdHis');
	      $new_totaltrack->operation_name = MyApp::currentUser('staff_name');
	      $new_totaltrack->operation_time = time();
	      $new_totaltrack->save();
	      return $this->_redirect(url('/totaltrack'));
	   }
	   $pagination = null;
	   $total_list=$total_list->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	   ->fetchPagination ( $pagination )->getAll();
	   $this->_view['total_list']=$total_list;
	   $this->_view['pagination']=$pagination;
	}
	//轨迹总单详情
	function actionTotaltrackdetail(){
	    $totalorder = Totalordertrack::find();
	    $total = TotalTrack::find('total_list_no = ?',request('total_list_no'))->getOne();
	    $pagination = null;
	    $totalorder=$totalorder->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )->getAll();
	    $this->_view['totalorder']=$totalorder;
	    $this->_view['total']=$total;
	    $this->_view['pagination']=$pagination;
	}
	//绑定订单
	function actionBindorder(){
	    $bindorder=Totalordertrack::find('total_no = ?',request('total_list_no'));
	    $total_list_no = request('total_list_no');
	    $data = array();
	    if(request('ali_order_no')){//阿里单号
	       $ali_order_nos=explode("\r\n", request('ali_order_no'));
	       $ali_order_nos=array_filter($ali_order_nos);//去空
	       $ali_order_nos=array_unique($ali_order_nos);//去重
           foreach ($ali_order_nos as $ali_order_no){
               $order = Order::find('ali_order_no = ?',$ali_order_no)->getOne();
               if($order->isNewRecord()){//订单不存在
                  continue;
               }else{
                  $totalordertrack = Totalordertrack::find('total_no = ? and ali_order_no = ?',$total_list_no,$ali_order_no)->getOne();
                  if(!$totalordertrack->isNewRecord()){//已绑定
                     continue;
                  }else{
                     $totalordertrack = new Totalordertrack();
                     $totalordertrack->total_no = $total_list_no;
                     $totalordertrack->ali_order_no = $ali_order_no;
                     $totalordertrack->tracking_no = $order->tracking_no;
                     $totalordertrack->save();
                  }
               }
           }
	    }
	    if(request('tracking_no')){//末端单号
	       $tracking_nos=explode("\r\n", request('tracking_no'));
	       $tracking_nos=array_filter($tracking_nos);//去空
	       $tracking_nos=array_unique($tracking_nos);//去重
	       foreach ($tracking_nos as $tracking_no){
               $order = Order::find('tracking_no = ?',$tracking_no)->getOne();
               if($order->isNewRecord()){//订单不存在
                  continue;
               }else{
                  $totalordertrack = Totalordertrack::find('total_no = ? and tracking_no = ?',$total_list_no,$tracking_no)->getOne();
                  if(!$totalordertrack->isNewRecord()){//已绑定
                     continue;
                  }else{
                     $totalordertrack = new Totalordertrack();
                     $totalordertrack->total_no = $total_list_no;
                     $totalordertrack->ali_order_no = $order->ali_order_no;
                     $totalordertrack->tracking_no = $tracking_no;
                     $totalordertrack->save();
                  }
               }
           }
	    }
	    if(request('comparison_total_no')){//核查总单号
	       $comparison_total_no = request('comparison_total_no');
	       $orders = Order::find('total_list_no = ?',$comparison_total_no)->getAll();
	       if(count($orders)>0){
	          foreach($orders as $order){
	             $totalordertrack = Totalordertrack::find('total_no = ? and ali_order_no = ?',$total_list_no,$order->ali_order_no)->getOne();
	             if(!$totalordertrack->isNewRecord()){
	                continue;
	             }else{
	                $totalordertrack = new Totalordertrack();
                    $totalordertrack->total_no = $total_list_no;
                    $totalordertrack->ali_order_no = $order->ali_order_no;
                    $totalordertrack->tracking_no = $order->tracking_no;
                    $totalordertrack->save();
	             }
	          }
	       }
	    }
	    if(request('out_total_no')){//启程总单
	       $out_total_no = request('out_total_no');
	       $totalouts = Totalorderout::find('total_no = ?',$out_total_no)->getAll();
	       if(count($totalouts)>0){
	          foreach($totalouts as $totalout){
	             $totalordertrack = Totalordertrack::find('total_no = ? and ali_order_no = ?',$total_list_no,$totalout->ali_order_no)->getOne();
	             if(!$totalordertrack->isNewRecord()){
	                continue; 
	             }else{
	                $order = Order::find('ali_order_no = ?',$totalout->ali_order_no)->getOne();
	                $totalordertrack = new Totalordertrack();
	                $totalordertrack->total_no = $total_list_no;
	                $totalordertrack->ali_order_no = $order->ali_order_no;
	                $totalordertrack->tracking_no = $order->tracking_no;
	                $totalordertrack->save();
	             }
	          }
	       }
	    }
	    if(request('in_total_no')){//抵达总单
	       $in_total_no = request('in_total_no');
	       $totalins = Totalorderin::find('total_no = ?',$in_total_no)->getAll();
	       if(count($totalins)>0){
	          foreach($totalins as $totalin){
	             $totalordertrack = Totalordertrack::find('total_no = ? and ali_order_no = ?',$total_list_no,$totalin->ali_order_no)->getOne();
	             if(!$totalordertrack->isNewRecord()){
	                continue; 
	             }else{
	                $order = Order::find('ali_order_no = ?',$totalin->ali_order_no)->getOne();
	                $totalordertrack = new Totalordertrack();
	                $totalordertrack->total_no = $total_list_no;
	                $totalordertrack->ali_order_no = $order->ali_order_no;
	                $totalordertrack->tracking_no = $order->tracking_no;
	                $totalordertrack->save();
	             }
	          }
	       }
	    }
	    $pagination = null;
	    $this->_view['order']=$bindorder->limitPage ( (request_is_post () ? 1 : request ( "page", 1 )), 30 )
	    ->fetchPagination ( $pagination )->getAll();
	    $this->_view['pagination']=$pagination;
	}
	function actionTotaltracking(){
        $trace_code=array_combine(array_keys(Tracking::$trace_code_cn),array_keys(Tracking::$trace_code_cn));
        $trace_code_cn=Tracking::$trace_code_cn;
        $totaltracking = Totaltracking::find('total_no = ?',request('total_list_no'))->getAll();
        if(request_is_post()){
           $lasttracking = Totaltracking::find('total_no = ?',request('total_list_no'))->order('tracking_id desc')->getOne();
           $lasttime =$lasttracking->trace_time + (8-$lasttracking->timezone )*3600;
           $requesttime = strtotime(request('trace_time'))+(8-request('timezone'))*3600;
           if($requesttime<$lasttime){
               return $this->_redirectMessage('失败','新增轨迹时间应不小于最近一条轨迹时间',url('warehouse/totaltracking',array('total_list_no'=>request('total_list_no'))));
           }else{
               $tracking = new Totaltracking();
               $tracking->changeProps(array(
                   'total_no'=>request('total_list_no'),
                   'tracking_code'=>request('tracking_code'),
                   'location'=>request('location'),
                   'trace_desc_cn'=>$trace_code_cn[request('tracking_code')],
                   'operator_name'=>MyApp::currentUser('staff_name'),
                   'timezone'=>request('timezone'),
                   'trace_time'=>strtotime(request('trace_time'))
               ));
               $tracking->save();
               $totalordertracks = Totalordertrack::find('total_no = ?',request('total_list_no'))->getAll();
               foreach($totalordertracks as $track){
                  $order = Order::find('ali_order_no = ?',$track->ali_order_no)->getOne();
                  $last_track = Tracking::find('order_id = ?',$order->order_id)->order('tracking_id desc')->getOne();
                  $last_track_time = $last_track->trace_time + (8-$last_track->timezone )*3600;
                  $quantity=Farpackage::find('order_id=?',$order->order_id)->sum('quantity','sum_quantity')->getAll();
                  if($requesttime<$last_track_time){
                     continue;
                  }else{
                        $trace=new Tracking();
                        $trace->changeProps(array(
                        	'order_id'=>$order->order_id,
                        	'far_no'=>$order->far_no,
                        	'tracking_code'=>request('tracking_code'),
                        	'location'=>request('location'),
                        	'trace_desc_cn'=>$trace_code_cn[request('tracking_code')],
                        	'operator_name'=>MyApp::currentUser('staff_name'),
                        	'timezone'=>request('timezone'),
                        	'quantity'=>$quantity['sum_quantity'],
                        	'trace_time'=>strtotime(request('trace_time')),
                            'total_no'=>$tracking->tracking_id
                        ));
                        //EMS-FY并且轨迹代码是F_CARRIER_PICKUP_RT_5035
                        if(request('tracking_code')=='F_CARRIER_PICKUP_RT_5035'){
                            if($order->service_code=='EMS-FY'){
                            	$trace->changeProps(array(
                            		'trace_desc_cn'=>'包裹重新安排转运,转【'.$order->tracking_no.'】',
                            		'trace_desc_en'=>'Reschedule transshipment to EMS['.$order->tracking_no.'].Track in:http://www.ems.com.cn/english.html or https://www.17track.net/en'
                            	));
                            }else {
                                $trace->changeProps(array(
                                    'trace_desc_cn'=>'包裹重新安排转运,转【'.$order->tracking_no.'】',
                                    'trace_desc_en'=>'Reschedule transshipment'
                                ));
                            }
                        }
                        $trace->save();
                        if(request('tracking_code')=='S_DELIVERY_SIGNED'){
                            $trace->status='1';
                            $trace->save();
                            $event=new Event();
                            $event->changeProps(array(
                            	'order_id'=>request('order_id'),
                            	'event_code'=>'DELIVERY',
                            	'event_time'=>strtotime(request('trace_time')),
                            	'event_location'=>request('location'),
                            	'timezone'=>request('timezone'),
                            	'confirm_flag'=>'1'
                            ));
                            $event->save();
                            $order->order_status='9';
                            $order->save();
                        }
                    }
               }
               return $this->_redirectMessage('成功','保存成功',url('warehouse/totaltracking',array('total_list_no'=>request('total_list_no'))));
           }
        }
        $this->_view['trace_code']=$trace_code;
        $this->_view['list']=$totaltracking;
    }
    /**
     * 轨迹确认和忽略
     */
    function actiontrackconfirm(){
        $trace=Totaltracking::find('tracking_id=?',request('tracking_id'))->getOne();
        if($trace->timezone==-19 || $trace->isNewRecord()){
           return $this->_redirectMessage('时区错误或记录不存在', '请修正时区后再继续', url('warehouse/totaltracking',array('total_list_no'=>$trace->total_no)));
        }else{
           $trace->confirm_flag='1';
           $trace->save();
           $trackings = Tracking::find('total_no = ? and confirm_flag = "0"',$trace->tracking_id)->getAll();
           if(count($trackings)>0){
               foreach($trackings as $tracking){
                  $tracking->confirm_flag='1';
                  $tracking->save();
               }
           }
        }
        return $this->_redirect(  url('warehouse/totaltracking',array('total_list_no'=>$trace->total_no)));
    }
    function actionIgnore(){
        $trace=Totaltracking::find('tracking_id=?',request('tracking_id'))->getOne();
        if (!$trace->isNewRecord()){
            $trace->confirm_flag=2;
            $trace->save();
            $trackings = Tracking::find('total_no = ? and confirm_flag = "0"',$trace->tracking_id)->getAll();
            if(count($trackings)>0){
               foreach($trackings as $tracking){
                 $tracking->confirm_flag=2;
                 $tracking->save();
               }
            }
        }
        return $this->_redirect(  url('warehouse/totaltracking',array('total_list_no'=>$trace->total_no)));
    }
    function actionAllcheck(){
       $trace_check = Totaltracking::find('total_no = ? and confirm_flag = "0"',request('total_list_no'))->getAll();
       foreach ($trace_check as $check){
          $check->confirm_flag = '1';
          $check->save();
          $trackings = Tracking::find('total_no = ? and confirm_flag = "0"',$check->tracking_id)->getAll();
          if(count($trackings)>0){
             foreach($trackings as $tracking){
               $tracking->confirm_flag = '1';
               $tracking->save();
             } 
          }
       }
       return $this->_redirect(url('warehouse/totaltracking',array('total_list_no'=>request('total_list_no'))));
    }
}